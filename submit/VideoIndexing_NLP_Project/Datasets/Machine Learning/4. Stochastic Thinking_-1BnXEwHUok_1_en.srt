1
00:00:00,000 --> 00:00:00,790


2
00:00:00,790 --> 00:00:03,129
The following content is
provided under a Creative

3
00:00:03,129 --> 00:00:04,549
Commons license.

4
00:00:04,549 --> 00:00:06,759
Your support will help
MIT OpenCourseWare

5
00:00:06,759 --> 00:00:10,849
continue to offer high quality
educational resources for free.

6
00:00:10,849 --> 00:00:13,390
To make a donation or to
view additional materials

7
00:00:13,390 --> 00:00:17,320
from hundreds of MIT courses,
visit MIT OpenCourseWare

8
00:00:17,320 --> 00:00:18,570
at ocw.mit.edu.

9
00:00:18,570 --> 00:00:28,762


10
00:00:28,762 --> 00:00:31,140
JOHN GUTTAG: So
today, we're going

11
00:00:31,140 --> 00:00:34,560
to move on to a fairly
different world than the world

12
00:00:34,560 --> 00:00:36,090
we've been living in.

13
00:00:36,090 --> 00:00:37,950
And this will be a
world we'll be living in

14
00:00:37,950 --> 00:00:40,580
for quite a few lectures.

15
00:00:40,579 --> 00:00:42,989
But before I do that,
I want to get back

16
00:00:42,990 --> 00:00:47,170
to just finish up something
that Professor Grimson started.

17
00:00:47,170 --> 00:00:50,520
You may recall he talked
about family trees

18
00:00:50,520 --> 00:00:52,650
and raised the question,
was it actually

19
00:00:52,649 --> 00:00:55,890
possible to represent all
ancestral relationships

20
00:00:55,890 --> 00:00:57,560
as a tree?

21
00:00:57,560 --> 00:00:59,890
Well, as a counterexample,
I'm sure some of you

22
00:00:59,890 --> 00:01:03,770
are familiar with Oedipus Rex.

23
00:01:03,770 --> 00:01:05,269
For those of you
who are not, I'm

24
00:01:05,269 --> 00:01:07,940
happy give you a plot summary
at the end of the lecture.

25
00:01:07,939 --> 00:01:10,879
It's a rather bizarre plot.

26
00:01:10,879 --> 00:01:16,109
But it was captured in a
wonderful song by Tom Lehrer.

27
00:01:16,109 --> 00:01:19,159
The short story is Oedipus
ended up marrying his mother

28
00:01:19,159 --> 00:01:22,429
and having four children.

29
00:01:22,430 --> 00:01:25,100
And Tom Lehrer, if you've
never heard of Tom Lehrer,

30
00:01:25,099 --> 00:01:29,659
you're missing one of the
world's funniest songwriters.

31
00:01:29,659 --> 00:01:32,299
And he had a wonderful
song called "Oedipus Rex,"

32
00:01:32,299 --> 00:01:38,509
and I recommend this YouTube as
a way to go and listen to it.

33
00:01:38,510 --> 00:01:44,870
And you can gather from the
quote what the story is about.

34
00:01:44,870 --> 00:01:46,969
I also recommend the
play, by the way.

35
00:01:46,969 --> 00:01:50,329
It's really kind of
appalling what goes on,

36
00:01:50,329 --> 00:01:53,090
but it's beautiful.

37
00:01:53,090 --> 00:01:57,049
Back to the main topic,
here's the relevant reading--

38
00:01:57,049 --> 00:01:59,569


39
00:01:59,569 --> 00:02:05,250
a small bit from later in
the book and then chapter 14.

40
00:02:05,250 --> 00:02:07,260
You may notice that
we're not actually going

41
00:02:07,260 --> 00:02:09,264
through the book in order.

42
00:02:09,264 --> 00:02:11,430
And the reason we're not
doing that is because we're

43
00:02:11,430 --> 00:02:13,439
trying to get you
information you need in time

44
00:02:13,439 --> 00:02:14,395
to do problem sets.

45
00:02:14,395 --> 00:02:18,810


46
00:02:18,810 --> 00:02:24,479
So the topic of today is
really uncertainty and the fact

47
00:02:24,479 --> 00:02:29,549
that the world is really
annoyingly hard to understand.

48
00:02:29,550 --> 00:02:32,520


49
00:02:32,520 --> 00:02:36,480
This is a signpost
related to 6.0002,

50
00:02:36,479 --> 00:02:41,169
but we won't go into too
much detail about it.

51
00:02:41,169 --> 00:02:43,049
We'd rather things were certain.

52
00:02:43,050 --> 00:02:47,330
But in fact, they
usually are not.

53
00:02:47,330 --> 00:02:51,710
And this is a place
where 6.0002 diverges

54
00:02:51,710 --> 00:02:53,930
from the typical
introductory computer science

55
00:02:53,930 --> 00:02:58,250
course, which focuses on
things that are functional--

56
00:02:58,250 --> 00:03:02,030
given an input, you always
get the same output.

57
00:03:02,030 --> 00:03:03,949
It's predictable.

58
00:03:03,949 --> 00:03:07,759
And we like to do that,
because that's easier to teach.

59
00:03:07,759 --> 00:03:11,299
But in fact, for reasons
we'll be talking about,

60
00:03:11,300 --> 00:03:14,210
it's not nearly as
useful if you're

61
00:03:14,210 --> 00:03:16,580
trying to actually
write computations that

62
00:03:16,580 --> 00:03:18,860
help you understand the world.

63
00:03:18,860 --> 00:03:21,110
You have to face
uncertainty head on.

64
00:03:21,110 --> 00:03:25,030


65
00:03:25,030 --> 00:03:27,860
An analogy is for many
years people, believed

66
00:03:27,860 --> 00:03:31,490
in Newtonian mechanics--

67
00:03:31,490 --> 00:03:34,520
I guess they still
do in 8.01 maybe--

68
00:03:34,520 --> 00:03:38,030
that every effect has a cause.

69
00:03:38,030 --> 00:03:40,430
An apple falls from the
tree because of gravity,

70
00:03:40,430 --> 00:03:42,390
and you know where
it's going to land.

71
00:03:42,389 --> 00:03:45,079
And the world can be
understood causally.

72
00:03:45,080 --> 00:03:50,090
And people believed this
really for quite a long time,

73
00:03:50,090 --> 00:03:54,500
most of history,
until the early part

74
00:03:54,500 --> 00:03:58,250
of the 20th century, when
the so-called Copenhagen

75
00:03:58,250 --> 00:04:00,770
doctrine was put forth.

76
00:04:00,770 --> 00:04:03,880


77
00:04:03,879 --> 00:04:06,669
The doctrine there from
Bohr and Heisenberg,

78
00:04:06,669 --> 00:04:09,909
two very famous
physicists, was one

79
00:04:09,909 --> 00:04:13,930
of what they called
causal nondeterminism.

80
00:04:13,930 --> 00:04:17,709
And their assertion was that
the world at its very most

81
00:04:17,709 --> 00:04:24,610
fundamental level behaves in
a way that you cannot predict.

82
00:04:24,610 --> 00:04:28,990
It's OK to make a statement that
x is highly likely to occur,

83
00:04:28,990 --> 00:04:33,430
almost certain to occur,
but for no case can

84
00:04:33,430 --> 00:04:36,310
you make a statement
x will occur.

85
00:04:36,310 --> 00:04:40,360
Nothing has a
probability of one.

86
00:04:40,360 --> 00:04:43,720
This was hard for us to
imagine today, when we all

87
00:04:43,720 --> 00:04:45,580
know quantum mechanics.

88
00:04:45,579 --> 00:04:50,319
But at the turn of the century,
this was a shocking statement.

89
00:04:50,319 --> 00:04:53,230
And two other very
well-known physicists,

90
00:04:53,230 --> 00:04:55,900
Albert Einstein and
Schrodinger, basically

91
00:04:55,899 --> 00:04:57,459
said, no, this is wrong.

92
00:04:57,459 --> 00:05:00,129
Bohr, Heisenberg,
you guys are idiots.

93
00:05:00,129 --> 00:05:01,569
It's just not true.

94
00:05:01,569 --> 00:05:03,670
They probably didn't
call them idiots.

95
00:05:03,670 --> 00:05:06,730
And this is most exemplified
by Einstein's famous quote

96
00:05:06,730 --> 00:05:11,230
that "God does not play dice,"
which is indicative of the fact

97
00:05:11,230 --> 00:05:13,990
that this was actually a
discussion that permeated

98
00:05:13,990 --> 00:05:19,569
not just the world of physics,
but society in general people

99
00:05:19,569 --> 00:05:22,149
really turned it into
literally a religious issue,

100
00:05:22,149 --> 00:05:24,899
as did Einstein.

101
00:05:24,899 --> 00:05:26,939
Well, so now we should
ask the question,

102
00:05:26,939 --> 00:05:28,829
does it really matter?

103
00:05:28,829 --> 00:05:31,259
And to illustrate
that, I need two coins.

104
00:05:31,259 --> 00:05:33,899
I forgot to bring
any coins with me.

105
00:05:33,899 --> 00:05:35,839
Does anyone got a
coin they can lend me?

106
00:05:35,839 --> 00:05:37,300
AUDIENCE: I have some coins.

107
00:05:37,300 --> 00:05:39,899
JOHN GUTTAG: All right.

108
00:05:39,899 --> 00:05:42,299
Now, this is where I see how
much the students trust me.

109
00:05:42,300 --> 00:05:44,189
Do I get a penny?

110
00:05:44,189 --> 00:05:46,439
Do I get a silver dollar?

111
00:05:46,439 --> 00:05:47,459
So what do we got here?

112
00:05:47,459 --> 00:05:50,500


113
00:05:50,500 --> 00:05:54,600
This is someone who's entrusting
me with quarters, not so bad.

114
00:05:54,600 --> 00:05:57,500


115
00:05:57,500 --> 00:06:00,149
So we'll take these quarters,
and we'll shake them up,

116
00:06:00,149 --> 00:06:01,689
and we'll put them
down on the table.

117
00:06:01,689 --> 00:06:04,240


118
00:06:04,240 --> 00:06:07,000
And now, we'll ask a question--

119
00:06:07,000 --> 00:06:13,139
do we have two heads, two
tails, or one head and one tail?

120
00:06:13,139 --> 00:06:17,219
So who thinks we have two heads?

121
00:06:17,220 --> 00:06:20,370
Who thinks we have two tails?

122
00:06:20,370 --> 00:06:23,230
Who thinks we have one of each?

123
00:06:23,230 --> 00:06:26,580
Well, clearly, everyone except
a few people-- for example,

124
00:06:26,579 --> 00:06:29,729
the Indians fan, who clearly
believe in the counterfactual--

125
00:06:29,730 --> 00:06:33,030


126
00:06:33,029 --> 00:06:37,079
made the most
probabilistic decision.

127
00:06:37,079 --> 00:06:40,550
But in fact, there is
no nondeterminism here.

128
00:06:40,550 --> 00:06:43,040
I know the answer.

129
00:06:43,040 --> 00:06:47,600
And so in some sense,
it doesn't matter

130
00:06:47,600 --> 00:06:49,820
whether it's deterministic,
because in fact, it's

131
00:06:49,819 --> 00:06:52,069
not causally nondeterministic.

132
00:06:52,069 --> 00:06:58,120
The answer is quite clear,
but you don't know the answer.

133
00:06:58,120 --> 00:07:03,870
And so whether or not the world
is inherently unpredictable,

134
00:07:03,870 --> 00:07:08,759
the fact that we never have
complete knowledge of the world

135
00:07:08,759 --> 00:07:10,769
suggests that we
might as well treat

136
00:07:10,769 --> 00:07:15,129
it as inherently unpredictable.

137
00:07:15,129 --> 00:07:19,060
And so this is called
predictive nondeterminism.

138
00:07:19,060 --> 00:07:21,365
And this really is
what's going to underline

139
00:07:21,365 --> 00:07:23,740
pretty much everything else
we're going to be doing here.

140
00:07:23,740 --> 00:07:30,370


141
00:07:30,370 --> 00:07:34,000
No comments about that?

142
00:07:34,000 --> 00:07:37,149
I wouldn't do that to you.

143
00:07:37,149 --> 00:07:39,699
Thank you.

144
00:07:39,699 --> 00:07:42,259
I know you are wishing to
get interest on the money,

145
00:07:42,259 --> 00:07:44,139
but you don't get any.

146
00:07:44,139 --> 00:07:46,060
AUDIENCE: Was it heads or tails?

147
00:07:46,060 --> 00:07:51,375


148
00:07:51,375 --> 00:07:52,500
JOHN GUTTAG: What was that?

149
00:07:52,500 --> 00:07:56,160


150
00:07:56,160 --> 00:08:00,660
So when we think about
nondeterminism in computation,

151
00:08:00,660 --> 00:08:04,150
we use the word
stochastic process.

152
00:08:04,149 --> 00:08:07,019
And that's any
process that's ongoing

153
00:08:07,019 --> 00:08:12,180
in which the next state depends
upon the previous states

154
00:08:12,180 --> 00:08:14,800
in some random element.

155
00:08:14,800 --> 00:08:18,449
So typically up till now
when we've written code,

156
00:08:18,449 --> 00:08:20,889
one line of code
did depended only

157
00:08:20,889 --> 00:08:23,259
on what the previous
lines of code did.

158
00:08:23,259 --> 00:08:25,810
There was no randomness.

159
00:08:25,810 --> 00:08:28,281
Here, we're going
to have randomness.

160
00:08:28,281 --> 00:08:29,740
And we can see the
difference if we

161
00:08:29,740 --> 00:08:34,450
look at these two
specifications of rolling a die.

162
00:08:34,450 --> 00:08:38,320
The first one, returns
an int between 1 and 6,

163
00:08:38,320 --> 00:08:41,890
is what I'll call
underdetermined.

164
00:08:41,889 --> 00:08:45,939
By that I mean you can't tell
what it's going to return.

165
00:08:45,940 --> 00:08:49,540
Maybe it will return a different
number each time you call it,

166
00:08:49,539 --> 00:08:51,699
but it's not required to.

167
00:08:51,700 --> 00:08:55,120
Maybe it will return three
every time you call it.

168
00:08:55,120 --> 00:08:58,690
The second specification
requires randomness.

169
00:08:58,690 --> 00:09:01,360
It says, it returns are
randomly chosen int.

170
00:09:01,360 --> 00:09:06,710
So it requires a
stochastic implementation.

171
00:09:06,710 --> 00:09:11,090
Let's look at how we implement
a random process in Python.

172
00:09:11,090 --> 00:09:15,889
We start by importing
the library random.

173
00:09:15,889 --> 00:09:17,519
This is not to
say you can import

174
00:09:17,519 --> 00:09:19,769
any random library you want.

175
00:09:19,769 --> 00:09:22,529
It's to say you import
the library called random.

176
00:09:22,529 --> 00:09:23,809
Let me get my pen out of here.

177
00:09:23,809 --> 00:09:27,309


178
00:09:27,309 --> 00:09:29,229
And we'll use that a lot.

179
00:09:29,230 --> 00:09:32,590
And then we're going to use
the function in random called

180
00:09:32,590 --> 00:09:34,940
random.choice.

181
00:09:34,940 --> 00:09:39,530
It takes as an argument a
sequence, in this case a list,

182
00:09:39,529 --> 00:09:43,850
and randomly chooses
one member of the list.

183
00:09:43,850 --> 00:09:46,159
And it chooses it uniformly.

184
00:09:46,159 --> 00:09:49,009


185
00:09:49,009 --> 00:09:52,929
It's a uniform distribution.

186
00:09:52,929 --> 00:09:56,859
And what that means is
that it's equally probable

187
00:09:56,860 --> 00:09:59,649
that it will choose any
number in that list each time

188
00:09:59,649 --> 00:10:01,689
you call it.

189
00:10:01,690 --> 00:10:03,820
We'll later look
at distributions

190
00:10:03,820 --> 00:10:06,700
that are not uniform,
not equally probable,

191
00:10:06,700 --> 00:10:08,320
where things are weighted.

192
00:10:08,320 --> 00:10:10,375
But here, it's quite
simple, it's just uniform.

193
00:10:10,375 --> 00:10:13,470


194
00:10:13,470 --> 00:10:16,980
And then we can test
it using testRoll--

195
00:10:16,980 --> 00:10:21,930
take some number of n and
rolls the die that many times

196
00:10:21,929 --> 00:10:24,969
and creates a string
telling us what we got.

197
00:10:24,970 --> 00:10:29,750


198
00:10:29,750 --> 00:10:36,299
So let's consider running this
on, say, testRoll of five.

199
00:10:36,299 --> 00:10:38,679
And we'll ask the
question, if we run it,

200
00:10:38,679 --> 00:10:43,179
how probable is it that it's
going to return a string

201
00:10:43,179 --> 00:10:43,959
of five 1's?

202
00:10:43,960 --> 00:10:50,100


203
00:10:50,100 --> 00:10:51,120
How do we do that?

204
00:10:51,120 --> 00:10:54,419
Now, how many people
here are either in 6.041

205
00:10:54,419 --> 00:10:56,669
or would have taken 6.041?

206
00:10:56,669 --> 00:10:59,279
Raise your hand.

207
00:10:59,279 --> 00:10:59,850
Oh, good.

208
00:10:59,850 --> 00:11:02,830
So very few of you
know probability.

209
00:11:02,830 --> 00:11:03,330
That helps.

210
00:11:03,330 --> 00:11:06,450


211
00:11:06,450 --> 00:11:09,170
So how do we think
about that question?

212
00:11:09,169 --> 00:11:14,479
Well, probability, to me at
least, is all about counting,

213
00:11:14,480 --> 00:11:16,740
especially discrete
probability, which

214
00:11:16,740 --> 00:11:19,899
is what we're looking at here.

215
00:11:19,899 --> 00:11:23,829
What you do is you start by
counting the number of events

216
00:11:23,830 --> 00:11:29,710
that have the
property of interest

217
00:11:29,710 --> 00:11:31,480
and the number of
possible events

218
00:11:31,480 --> 00:11:32,940
and divide one by the other.

219
00:11:32,940 --> 00:11:35,580


220
00:11:35,580 --> 00:11:41,430
So if we think about
rolling a die five times,

221
00:11:41,429 --> 00:11:44,069
we can enumerate all of
the possible outcomes

222
00:11:44,070 --> 00:11:44,885
of five rolls.

223
00:11:44,884 --> 00:11:47,389


224
00:11:47,389 --> 00:11:50,870
So if we look at that,
what are the outcomes?

225
00:11:50,870 --> 00:11:54,149
Well, I could get five 1's.

226
00:11:54,149 --> 00:12:00,720
I could get four 1's and a 2
or four 1's and 3, skip a few.

227
00:12:00,720 --> 00:12:05,040
The next one would be three 1's,
a 2 and a 1, then a 2 and 2,

228
00:12:05,039 --> 00:12:08,849
and finally, at
the end, all 6's.

229
00:12:08,850 --> 00:12:13,320
So remember, we
looked before at when

230
00:12:13,320 --> 00:12:17,160
we're looking at optimization
problems about binary numbers.

231
00:12:17,159 --> 00:12:20,669
And we said we can look at all
the possible choices of items

232
00:12:20,669 --> 00:12:24,459
in the knapsack by a
vector of 0's and 1's.

233
00:12:24,460 --> 00:12:27,340
We said, how many possible
choices are there?

234
00:12:27,340 --> 00:12:30,200
Well, it depended on how
many binary numbers you could

235
00:12:30,200 --> 00:12:32,910
get in that number of digits.

236
00:12:32,909 --> 00:12:36,409
Well, here we're doing the same
thing, but instead of base 2,

237
00:12:36,409 --> 00:12:37,709
it's base 6.

238
00:12:37,710 --> 00:12:40,590


239
00:12:40,590 --> 00:12:45,149
And so the number of possible
outcomes of five rolls

240
00:12:45,149 --> 00:12:45,990
is quite high.

241
00:12:45,990 --> 00:12:48,759


242
00:12:48,759 --> 00:12:50,860
How many of those are five 1's?

243
00:12:50,860 --> 00:12:54,180
Only one of them, right?

244
00:12:54,179 --> 00:12:58,299
So in order to get the
probability of a five 1's, I

245
00:12:58,299 --> 00:13:00,370
divide 1 by 6 to the fifth.

246
00:13:00,370 --> 00:13:03,231


247
00:13:03,231 --> 00:13:06,720
Does that makes
sense to everybody?

248
00:13:06,720 --> 00:13:10,565
So in fact, we see
it's highly unlikely.

249
00:13:10,565 --> 00:13:15,460
The probability of a
five 1's is quite small.

250
00:13:15,460 --> 00:13:17,769
Now, suppose we were to
ask about the probability

251
00:13:17,769 --> 00:13:19,870
of something else--

252
00:13:19,870 --> 00:13:27,120
instead of five 1's, say 53421.

253
00:13:27,120 --> 00:13:31,230
It kind of looks more likely
than that than five 1's

254
00:13:31,230 --> 00:13:33,629
in a row, but of
course, it isn't, right?

255
00:13:33,629 --> 00:13:37,620
Any specific combination
is equally probable.

256
00:13:37,620 --> 00:13:40,419
And there are a lot of them.

257
00:13:40,419 --> 00:13:44,919
So this is all the probability
we're going to think about we

258
00:13:44,919 --> 00:13:48,549
could think about this way, as
simply a matter of counting--

259
00:13:48,549 --> 00:13:51,639
the number of possible events,
the number of events that have

260
00:13:51,639 --> 00:13:54,970
the property of interest--
in this case being all 1's--

261
00:13:54,970 --> 00:13:56,680
and then simple division.

262
00:13:56,679 --> 00:13:59,529


263
00:13:59,529 --> 00:14:03,009
Given that framework, there
were three basic facts

264
00:14:03,009 --> 00:14:07,870
about probability we're
going to be using a lot of.

265
00:14:07,870 --> 00:14:15,980
So one, probabilities
always range from 0 to 1.

266
00:14:15,980 --> 00:14:17,460
How do we know that?

267
00:14:17,460 --> 00:14:19,930
Well, we've got a
fraction, right?

268
00:14:19,929 --> 00:14:25,189
And the denominator is
all possible events.

269
00:14:25,190 --> 00:14:29,840
The numerator is the subset
of that that's of interest.

270
00:14:29,840 --> 00:14:35,680
So it has to range from
0 to the denominator.

271
00:14:35,679 --> 00:14:37,329
And that tells us
that the fraction

272
00:14:37,330 --> 00:14:40,250
has to range from 0 to 1.

273
00:14:40,250 --> 00:14:43,429
So 1 says it's always
going to happen, 0 never.

274
00:14:43,429 --> 00:14:46,870


275
00:14:46,870 --> 00:14:50,289
So if the probability of
an event occurring is p,

276
00:14:50,289 --> 00:14:54,250
what's the probability
of it not occurring?

277
00:14:54,250 --> 00:14:57,059
This follows from
the first bullet.

278
00:14:57,059 --> 00:15:04,049
It's simply going
to be 1 minus p.

279
00:15:04,049 --> 00:15:07,649
This is a trick that we'll
find we'll use a lot.

280
00:15:07,649 --> 00:15:09,659
Because it's often
the case when you

281
00:15:09,659 --> 00:15:13,079
want to compute the probability
of something happening,

282
00:15:13,080 --> 00:15:16,680
it's easier to compute the
probability of it not happening

283
00:15:16,679 --> 00:15:18,979
and subtract it from 1.

284
00:15:18,980 --> 00:15:21,560
And we'll see an example
of that later today.

285
00:15:21,559 --> 00:15:24,549


286
00:15:24,549 --> 00:15:27,939
Now, here's the biggie.

287
00:15:27,940 --> 00:15:31,650
When events are
independent of each other,

288
00:15:31,649 --> 00:15:35,000
the probability of all
of the events occurring

289
00:15:35,000 --> 00:15:39,379
is equal to the product of
the probabilities of each

290
00:15:39,379 --> 00:15:40,884
of the events occurring.

291
00:15:40,884 --> 00:15:44,279


292
00:15:44,279 --> 00:15:53,889
So if the probability of A is
0.5 and the probability of B

293
00:15:53,889 --> 00:16:01,149
is 0.4, the probability
of A and B is what?

294
00:16:01,149 --> 00:16:06,110


295
00:16:06,110 --> 00:16:07,669
0.5 times 0.4.

296
00:16:07,669 --> 00:16:10,679
You guys can figure that out.

297
00:16:10,679 --> 00:16:14,329
I think that's 0.2.

298
00:16:14,330 --> 00:16:16,100
So you'd expect
that, that it should

299
00:16:16,100 --> 00:16:20,389
be much smaller than either of
the first two probabilities.

300
00:16:20,389 --> 00:16:22,059
This is the most
common rule, it's

301
00:16:22,059 --> 00:16:24,459
something we use all the
time in probabilities,

302
00:16:24,460 --> 00:16:28,360
the so-called
multiplicative law.

303
00:16:28,360 --> 00:16:33,120
We have to be careful
about it, however,

304
00:16:33,120 --> 00:16:37,470
in that it only holds if
the events are actually

305
00:16:37,470 --> 00:16:40,570
independent.

306
00:16:40,570 --> 00:16:44,920
Two events are independent
if the outcome of one

307
00:16:44,919 --> 00:16:47,110
has no influence on the
outcome of the other.

308
00:16:47,110 --> 00:16:50,009


309
00:16:50,009 --> 00:16:52,370
So when we roll
the die, we assume

310
00:16:52,370 --> 00:16:54,350
that the first
roll, the outcome,

311
00:16:54,350 --> 00:16:55,870
was independent of the--

312
00:16:55,870 --> 00:16:58,370
or the second roll was
independent of the first roll,

313
00:16:58,370 --> 00:17:00,909
independent of the fourth roll.

314
00:17:00,909 --> 00:17:02,559
When we looked at
the two coins, we

315
00:17:02,559 --> 00:17:05,409
assume that heads and
tails of each coin

316
00:17:05,410 --> 00:17:08,460
was independent
of the other coin.

317
00:17:08,460 --> 00:17:10,200
I didn't, for example,
look at one coin

318
00:17:10,200 --> 00:17:12,304
and make sure that the
other one was different.

319
00:17:12,304 --> 00:17:15,700


320
00:17:15,700 --> 00:17:19,078
The danger here is
that people often

321
00:17:19,078 --> 00:17:22,950
compute probabilities assuming
independence when you don't

322
00:17:22,950 --> 00:17:26,098
actually have independence.

323
00:17:26,098 --> 00:17:29,470
So let's look at an example.

324
00:17:29,470 --> 00:17:32,980
For those of you familiar
with American football,

325
00:17:32,980 --> 00:17:35,799
the New England Patriots
and the Denver Broncos

326
00:17:35,799 --> 00:17:38,379
are two prominent teams.

327
00:17:38,380 --> 00:17:40,660
And let's look at
computing the probability

328
00:17:40,660 --> 00:17:45,690
of whether one of them will
lose on a given Sunday.

329
00:17:45,690 --> 00:17:48,840
So the Patriots have a
winning percentage of 7 of 8--

330
00:17:48,839 --> 00:17:51,419
they've won 7 of
their 8 games so far--

331
00:17:51,420 --> 00:17:54,590
and the Broncos 6 of 8.

332
00:17:54,589 --> 00:17:57,559
The probability of both
winning next Sunday,

333
00:17:57,559 --> 00:18:00,859
assuming that this is
indicative of how good they are,

334
00:18:00,859 --> 00:18:03,469
we can get with the
multiplicative rule.

335
00:18:03,470 --> 00:18:08,750
So it's 7/8 times 6/8, or 42/64.

336
00:18:08,750 --> 00:18:12,059
We could simplify that
fraction, I suppose.

337
00:18:12,059 --> 00:18:14,369
Does that makes sense?

338
00:18:14,369 --> 00:18:17,839
So this is probably a pretty
good estimate of both of them

339
00:18:17,839 --> 00:18:20,599
winning next Sunday.

340
00:18:20,599 --> 00:18:24,379
So the probability of at
least one of them losing

341
00:18:24,380 --> 00:18:27,740
is 1 minus that.

342
00:18:27,740 --> 00:18:30,430
So here's an example
of why we often use

343
00:18:30,430 --> 00:18:34,120
the 1 minus rule,
because we could

344
00:18:34,119 --> 00:18:38,019
compute the probability
of both of them

345
00:18:38,019 --> 00:18:41,440
winning by simply multiplying.

346
00:18:41,440 --> 00:18:44,130
And we subtract that from 1.

347
00:18:44,130 --> 00:18:47,220
However, what about
Sunday, December 18?

348
00:18:47,220 --> 00:18:50,440
What's the probability?

349
00:18:50,440 --> 00:18:53,920
Well, as it happens,
that day the Patriots

350
00:18:53,920 --> 00:18:55,025
are playing the Broncos.

351
00:18:55,025 --> 00:18:58,380


352
00:18:58,380 --> 00:19:02,230
So now suddenly, the
outcomes are not independent.

353
00:19:02,230 --> 00:19:05,549
The probability of
one of them losing

354
00:19:05,549 --> 00:19:10,470
is influenced by the probability
of the other winning.

355
00:19:10,470 --> 00:19:13,539
So you would expect
the probability of one

356
00:19:13,539 --> 00:19:17,989
of them losing is much
closer to 1 than 22/64,

357
00:19:17,989 --> 00:19:18,779
which is about 1/3.

358
00:19:18,779 --> 00:19:21,779


359
00:19:21,779 --> 00:19:25,490
So in this case, it's easy.

360
00:19:25,490 --> 00:19:28,430
But as we'll see, as we
get through the term,

361
00:19:28,430 --> 00:19:30,560
there are lots of
cases where you

362
00:19:30,559 --> 00:19:33,950
have to work pretty hard to
understand whether or not two

363
00:19:33,950 --> 00:19:36,350
events really are independent.

364
00:19:36,349 --> 00:19:40,409
And if you get it wrong, you
get a totally bogus answer.

365
00:19:40,410 --> 00:19:45,529
1/3 versus 1 is a
pretty big difference.

366
00:19:45,529 --> 00:19:49,009
By the way, as it happens,
the probability of the Broncos

367
00:19:49,009 --> 00:19:50,069
losing is about 1.

368
00:19:50,069 --> 00:19:56,189


369
00:19:56,190 --> 00:19:58,400
Let's go look at some code.

370
00:19:58,400 --> 00:20:01,040


371
00:20:01,039 --> 00:20:03,259
And we'll go back to
our dice, because it's

372
00:20:03,259 --> 00:20:05,420
much easier to
simulate dice games

373
00:20:05,420 --> 00:20:08,300
than it is to simulate
football games.

374
00:20:08,299 --> 00:20:11,509


375
00:20:11,509 --> 00:20:13,339
So here it is.

376
00:20:13,339 --> 00:20:17,029
And we're going to talk
a lot about simulations.

377
00:20:17,029 --> 00:20:18,980
So here, rather than
rolling the die,

378
00:20:18,980 --> 00:20:20,480
I've written a program to do it.

379
00:20:20,480 --> 00:20:23,980


380
00:20:23,980 --> 00:20:27,660
We've already seen the
code for rolling a die.

381
00:20:27,660 --> 00:20:32,990
And so to run this simulation,
typically what we're doing here

382
00:20:32,990 --> 00:20:35,480
is I'm giving you the goal--

383
00:20:35,480 --> 00:20:38,509
for example, are we
going to get five 1's--

384
00:20:38,509 --> 00:20:41,799
the number of trials--

385
00:20:41,799 --> 00:20:47,059
each trial, in this case,
will be say of length 5--

386
00:20:47,059 --> 00:20:48,769
so I'm going to
roll the same die

387
00:20:48,769 --> 00:20:55,129
five times say 1,000 different
times, and then just some text

388
00:20:55,130 --> 00:20:57,910
as to what I'm going to print.

389
00:20:57,910 --> 00:21:01,090
Almost all the
simulations we look at

390
00:21:01,089 --> 00:21:05,629
are going to start with lines
that look a lot like that.

391
00:21:05,630 --> 00:21:08,650
We're going to
initialize some variable.

392
00:21:08,650 --> 00:21:11,755
And then we're going to
run some number of trials.

393
00:21:11,755 --> 00:21:16,160


394
00:21:16,160 --> 00:21:19,860
So in this case,
we're going to get

395
00:21:19,859 --> 00:21:21,339
from the length of the goal--

396
00:21:21,339 --> 00:21:23,789
so if the goal is
five 1's, then we're

397
00:21:23,789 --> 00:21:26,490
going to roll the dice five
times; if it's 10 runs,

398
00:21:26,490 --> 00:21:29,829
we'll roll it 10 times.

399
00:21:29,829 --> 00:21:35,309
So this is essentially
one trial, one attempt.

400
00:21:35,309 --> 00:21:38,849


401
00:21:38,849 --> 00:21:41,849
And then we'll check
the result. And if it

402
00:21:41,849 --> 00:21:43,719
has the property we want--

403
00:21:43,720 --> 00:21:47,460
in this case, it's
equal to the goal--

404
00:21:47,460 --> 00:21:50,039
then we're going to
increment the total, which

405
00:21:50,039 --> 00:21:54,379
we initialized up here by 1.

406
00:21:54,380 --> 00:21:57,170
So we'll keep track
with just the counting--

407
00:21:57,170 --> 00:22:01,610
the number of trials that
actually meet the goal.

408
00:22:01,609 --> 00:22:04,990
And then when we're done,
what we're going to do

409
00:22:04,990 --> 00:22:08,559
is divide the number
that met the goal

410
00:22:08,559 --> 00:22:10,869
by the number of trials--

411
00:22:10,869 --> 00:22:14,169
exactly the counting
argument we just looked at.

412
00:22:14,170 --> 00:22:19,700
And then we'll print the result.

413
00:22:19,700 --> 00:22:22,220
Almost every
simulation we look at

414
00:22:22,220 --> 00:22:24,360
is going to have this structure.

415
00:22:24,359 --> 00:22:27,679
There'll be an outer loop,
which is the number of trials.

416
00:22:27,680 --> 00:22:29,870
And then inside-- maybe
it'll have a loop,

417
00:22:29,869 --> 00:22:32,599
or maybe it won't--
will be a single trial.

418
00:22:32,599 --> 00:22:33,769
We'll sum up the results.

419
00:22:33,769 --> 00:22:36,920
And then we'll divide
by the number of trials.

420
00:22:36,920 --> 00:22:37,490
Let's run it.

421
00:22:37,490 --> 00:22:45,299


422
00:22:45,299 --> 00:22:49,649
So a couple of things
are going to go on here.

423
00:22:49,650 --> 00:22:59,570
If you look at the code as
we've looked at it before,

424
00:22:59,569 --> 00:23:02,779
what you're seeing is I'm
computing the estimated

425
00:23:02,779 --> 00:23:05,180
probability by the simulation.

426
00:23:05,180 --> 00:23:08,269
And I'm comparing it to the
actual probability, which we've

427
00:23:08,269 --> 00:23:09,589
already seen how to compute.

428
00:23:09,589 --> 00:23:12,116


429
00:23:12,116 --> 00:23:14,700
So if you look at it, there are
a couple of things to look at.

430
00:23:14,700 --> 00:23:17,370


431
00:23:17,369 --> 00:23:19,259
The estimated
probability is pretty

432
00:23:19,259 --> 00:23:24,703
close to the actual
probability but not the same.

433
00:23:24,703 --> 00:23:26,589
So let's go back
to the PowerPoint.

434
00:23:26,589 --> 00:23:31,859


435
00:23:31,859 --> 00:23:34,240
Here are the results.

436
00:23:34,240 --> 00:23:37,680
And there are at least
two questions raised

437
00:23:37,680 --> 00:23:40,049
by this result.
First of all, how

438
00:23:40,049 --> 00:23:43,289
did I know that this is
what would get printed?

439
00:23:43,289 --> 00:23:45,609
Remember, this is random.

440
00:23:45,609 --> 00:23:48,519
How did I know that the
estimate-- well, there's

441
00:23:48,519 --> 00:23:51,789
nothing random about
the actual probability.

442
00:23:51,789 --> 00:23:55,389
But how did I know that
the estimated probability

443
00:23:55,390 --> 00:23:57,180
would be 0?

444
00:23:57,180 --> 00:23:58,470
And why did it print it twice?

445
00:23:58,470 --> 00:24:00,329
Because I messed
up the PowerPoint.

446
00:24:00,329 --> 00:24:04,139
Any rate, so how do I know
what would get printed?

447
00:24:04,140 --> 00:24:12,610
Well a confession--
random.choice

448
00:24:12,609 --> 00:24:14,919
is not actually random.

449
00:24:14,920 --> 00:24:20,140
In fact, nothing we can do in
a computer is actually random.

450
00:24:20,140 --> 00:24:23,650
You can prove that it's
impossible to build

451
00:24:23,650 --> 00:24:28,950
a computer that actually
generates truly random numbers.

452
00:24:28,950 --> 00:24:32,519
What they do instead
is generate numbers

453
00:24:32,519 --> 00:24:34,049
that called pseudorandom.

454
00:24:34,049 --> 00:24:42,119


455
00:24:42,119 --> 00:24:44,739
How do they do that?

456
00:24:44,740 --> 00:24:48,930
They have an algorithm that
given one number generates

457
00:24:48,930 --> 00:24:52,700
the next number in a sequence.

458
00:24:52,700 --> 00:24:56,375
And they start that
algorithm with a seed.

459
00:24:56,375 --> 00:25:00,049


460
00:25:00,049 --> 00:25:02,629
Now, typically,
they get that seed

461
00:25:02,630 --> 00:25:05,930
by reading the clock
of the computer.

462
00:25:05,930 --> 00:25:08,090
So most computers have
a clock that, say,

463
00:25:08,089 --> 00:25:12,079
keeps track of the number of
microseconds since January 1,

464
00:25:12,079 --> 00:25:14,173
1978.

465
00:25:14,173 --> 00:25:15,589
I don't know if
that's still true.

466
00:25:15,589 --> 00:25:18,589
That's what Unix used to do.

467
00:25:18,589 --> 00:25:22,069
So the notion is, you
start your program,

468
00:25:22,069 --> 00:25:26,419
there's no way of knowing how
many microseconds have elapsed.

469
00:25:26,420 --> 00:25:29,394
And so you're getting a random
number to start the process.

470
00:25:29,394 --> 00:25:32,039


471
00:25:32,039 --> 00:25:33,659
Since you don't know
where it starts,

472
00:25:33,660 --> 00:25:34,800
you don't know what
the second number

473
00:25:34,799 --> 00:25:37,049
is, you don't know what the
third number is, you don't

474
00:25:37,049 --> 00:25:38,579
know what the fourth number is.

475
00:25:38,579 --> 00:25:42,569
And so it's predictably
nondeterministic,

476
00:25:42,569 --> 00:25:46,599
because you don't know what
the seed is going to be.

477
00:25:46,599 --> 00:25:49,179
Now, you can imagine
that this makes

478
00:25:49,180 --> 00:25:52,460
programs really hard to debug.

479
00:25:52,460 --> 00:25:55,850
Every time you run it, something
different could happen.

480
00:25:55,849 --> 00:25:59,219
Now, we'll see often you want
them to be unpredictable.

481
00:25:59,220 --> 00:26:02,299
But for now, we want them to
be predictable, makes it easier

482
00:26:02,299 --> 00:26:04,129
prepare PowerPoint.

483
00:26:04,130 --> 00:26:08,635
So what you have is a command.

484
00:26:08,634 --> 00:26:13,039


485
00:26:13,039 --> 00:26:19,190
You can call random.seed
and give it a value

486
00:26:19,190 --> 00:26:21,799
and say, I don't want you to
just choose some random seed,

487
00:26:21,799 --> 00:26:24,889
I want you to use 0 as the seed.

488
00:26:24,890 --> 00:26:27,530
For the same seed, you
always get the same sequence

489
00:26:27,529 --> 00:26:30,119
of random values.

490
00:26:30,119 --> 00:26:33,409
And so what I've done is I
set the seed to be, I think, 0

491
00:26:33,410 --> 00:26:36,620
in this case, not because
there's anything magic about 0,

492
00:26:36,619 --> 00:26:38,779
it's just sort of habit.

493
00:26:38,779 --> 00:26:41,539
But it made it predictable.

494
00:26:41,539 --> 00:26:43,639
As you write programs
with randomness

495
00:26:43,640 --> 00:26:45,980
in and when you're debugging
it, you will almost surely

496
00:26:45,980 --> 00:26:49,549
want to start by setting
random.seed to a value

497
00:26:49,549 --> 00:26:51,589
so you get the same answer.

498
00:26:51,589 --> 00:26:54,949
But make sure you debug it with
more than one value of this,

499
00:26:54,950 --> 00:26:58,319
so you didn't just get
lucky with your seed.

500
00:26:58,319 --> 00:27:01,460
So that's how I knew
what would get printed.

501
00:27:01,460 --> 00:27:06,480
The next question is,
why did the simulation

502
00:27:06,480 --> 00:27:09,670
give me the wrong answer?

503
00:27:09,670 --> 00:27:14,529
The actual probability
is three 0's and 1286.

504
00:27:14,529 --> 00:27:16,629
But it's estimated
a probability of 0.

505
00:27:16,630 --> 00:27:19,150


506
00:27:19,150 --> 00:27:20,140
Why is it wrong?

507
00:27:20,140 --> 00:27:24,200


508
00:27:24,200 --> 00:27:27,100
Well, let's think about this.

509
00:27:27,099 --> 00:27:30,019
I ran 1,000 trials.

510
00:27:30,019 --> 00:27:32,430
What does it mean to say
the probability is zero?

511
00:27:32,430 --> 00:27:36,670
It means that I tried it 1,000
times and didn't ever get

512
00:27:36,670 --> 00:27:39,380
a sequence of five 1's.

513
00:27:39,380 --> 00:27:44,500
So the numerator of the
division at the bottom was 0.

514
00:27:44,500 --> 00:27:46,150
Hence, the answer is 0.

515
00:27:46,150 --> 00:27:47,890
Is this surprising?

516
00:27:47,890 --> 00:27:49,440
Well, no.

517
00:27:49,440 --> 00:27:54,200
Because if that's the actual
probability of getting five

518
00:27:54,200 --> 00:27:58,075
1's, it's not very shocking
that in 1,000 trials

519
00:27:58,075 --> 00:27:58,825
it never happened.

520
00:27:58,825 --> 00:28:02,259


521
00:28:02,259 --> 00:28:06,140
It's not a surprising
result. And so we

522
00:28:06,140 --> 00:28:09,230
have to be careful when we
run these things to understand

523
00:28:09,230 --> 00:28:14,250
the difference between what's in
this case an actual probability

524
00:28:14,250 --> 00:28:17,509
and what statisticians
call a sample probability.

525
00:28:17,509 --> 00:28:25,529


526
00:28:25,529 --> 00:28:28,970
So what we got with
the sample was 0.

527
00:28:28,970 --> 00:28:32,740
So what's the
obvious thing to do?

528
00:28:32,740 --> 00:28:35,589
If you're doing a
simulation of an event

529
00:28:35,589 --> 00:28:39,019
and the event is
pretty rare, you

530
00:28:39,019 --> 00:28:43,519
want to try it on a very
large number of trials.

531
00:28:43,519 --> 00:28:45,049
So let's go back to our code.

532
00:28:45,049 --> 00:28:51,349


533
00:28:51,349 --> 00:28:58,719
And we'll change it to
instead of 1,000, 1,000,000.

534
00:28:58,720 --> 00:29:01,572
You can see up here, by the
way, where I set the seed.

535
00:29:01,571 --> 00:29:02,839
And now, let's run it.

536
00:29:02,839 --> 00:29:17,759


537
00:29:17,759 --> 00:29:19,650
We did a lot better.

538
00:29:19,650 --> 00:29:22,470
If we look at here our
estimated probability,

539
00:29:22,470 --> 00:29:25,980
it's three 0's 128,
still not quite

540
00:29:25,980 --> 00:29:30,142
the actual probability
but darn close.

541
00:29:30,142 --> 00:29:31,600
And maybe if I had
done 10 million,

542
00:29:31,599 --> 00:29:32,890
it would have been even closer.

543
00:29:32,891 --> 00:29:35,610


544
00:29:35,609 --> 00:29:38,039
So if you're
writing a simulation

545
00:29:38,039 --> 00:29:41,129
to compute the
probability of an event

546
00:29:41,130 --> 00:29:44,040
and the event is
moderately rare,

547
00:29:44,039 --> 00:29:47,309
then you better
run a lot of trials

548
00:29:47,309 --> 00:29:51,750
before you believe your
estimated probability.

549
00:29:51,750 --> 00:29:55,440
In a week or so, we'll
actually look at that more

550
00:29:55,440 --> 00:29:57,809
mathematically and
say, what is a lot,

551
00:29:57,809 --> 00:29:59,129
how do we know what is enough.

552
00:29:59,130 --> 00:30:12,110


553
00:30:12,109 --> 00:30:13,549
What are the morals here?

554
00:30:13,549 --> 00:30:15,430
Moral one, I've just told you--

555
00:30:15,430 --> 00:30:18,950
takes a lot of trials to get a
good estimate of the frequency

556
00:30:18,950 --> 00:30:21,509
of a rare event.

557
00:30:21,509 --> 00:30:26,470
Moral two, we should always,
if we're getting an estimated

558
00:30:26,470 --> 00:30:29,289
probability, know
that, and probably

559
00:30:29,289 --> 00:30:33,569
say that, and not confuse it
with the actual probability.

560
00:30:33,569 --> 00:30:36,399
The third moral here
is, it was kind of

561
00:30:36,400 --> 00:30:38,830
stupid to do a simulation.

562
00:30:38,829 --> 00:30:42,429
Since it was a very
simple closed-form answer

563
00:30:42,430 --> 00:30:45,549
that we could compute
that would really tell us

564
00:30:45,549 --> 00:30:48,220
what the actual
probability is, why even

565
00:30:48,220 --> 00:30:51,549
bother with the simulation?

566
00:30:51,549 --> 00:30:53,879
Well, we're going
to see why now,

567
00:30:53,880 --> 00:30:57,340
because simulations
can be very useful.

568
00:30:57,339 --> 00:31:00,389
Let's look at another problem.

569
00:31:00,390 --> 00:31:02,070
This is the famous
birthday problem.

570
00:31:02,069 --> 00:31:03,659
Some of you have seen it.

571
00:31:03,660 --> 00:31:06,240
What's the probability of at
least two people in a group

572
00:31:06,240 --> 00:31:08,769
having the same birthday?

573
00:31:08,769 --> 00:31:10,599
There's a URL at the bottom.

574
00:31:10,599 --> 00:31:12,759
That's pointing
to a Google form.

575
00:31:12,759 --> 00:31:15,940
I'd like please all of you
who have a computing device

576
00:31:15,940 --> 00:31:20,100
to go to it and fill
out your birthday.

577
00:31:20,099 --> 00:31:22,942
It's anonymous, so we won't know
how old you are, don't worry.

578
00:31:22,942 --> 00:31:24,150
Actually, it's only the date.

579
00:31:24,150 --> 00:31:25,290
It's not the year.

580
00:31:25,289 --> 00:31:27,879


581
00:31:27,880 --> 00:31:33,870
So suppose there were 367
people in the group, roughly

582
00:31:33,869 --> 00:31:40,679
the number of people who
took the 6.0001 600 midterm.

583
00:31:40,680 --> 00:31:44,070
If they are 367 people, what's
the probability of at least two

584
00:31:44,069 --> 00:31:45,230
of them sharing a birthday?

585
00:31:45,230 --> 00:31:49,789


586
00:31:49,789 --> 00:31:54,109
One, by something called
the pigeonhole principle.

587
00:31:54,109 --> 00:31:56,000
You got some number of holes.

588
00:31:56,000 --> 00:31:57,799
And if you have more
pigeons than holes,

589
00:31:57,799 --> 00:32:01,430
two pigeons have
to share a whole.

590
00:32:01,430 --> 00:32:04,039
What about smaller numbers?

591
00:32:04,039 --> 00:32:07,430
Well, if we make a
simplifying assumption

592
00:32:07,430 --> 00:32:10,650
that each birthdate
is equally likely,

593
00:32:10,650 --> 00:32:13,970
then there's actually a nice
closed-form solution for it.

594
00:32:13,970 --> 00:32:17,759


595
00:32:17,759 --> 00:32:20,730
Again, this is a question
where it's easier

596
00:32:20,730 --> 00:32:24,210
to compute the opposite
of what you're trying

597
00:32:24,210 --> 00:32:26,670
to do and subtract it from 1.

598
00:32:26,670 --> 00:32:32,160
And so this fraction is giving
the probability of two people

599
00:32:32,160 --> 00:32:35,190
not sharing a birthday.

600
00:32:35,190 --> 00:32:38,559
The proof that this is right,
it's a little bit elaborate.

601
00:32:38,559 --> 00:32:42,450
But you can trust
me, it's accurate.

602
00:32:42,450 --> 00:32:46,150
But it's a formula, and it's
not that complicated a formula.

603
00:32:46,150 --> 00:32:49,800
So numbers like 366
factorial are big.

604
00:32:49,799 --> 00:32:55,240


605
00:32:55,240 --> 00:32:57,460
So let's approximate a solution.

606
00:32:57,460 --> 00:33:00,940
We'll right a simulation and
see if we get the same answer

607
00:33:00,940 --> 00:33:03,920
that that formula gave us.

608
00:33:03,920 --> 00:33:05,200
So here's the code for that--

609
00:33:05,200 --> 00:33:07,809


610
00:33:07,809 --> 00:33:09,549
two arguments-- the
number of people

611
00:33:09,549 --> 00:33:14,779
in the group and the
number that we asking do

612
00:33:14,779 --> 00:33:17,519
they have the same birthday.

613
00:33:17,519 --> 00:33:21,119
So since I'm assuming for now
that every birthday is equally

614
00:33:21,119 --> 00:33:26,099
likely, the possible
dates range from 1 to 366,

615
00:33:26,099 --> 00:33:28,004
because some years
have a February 29.

616
00:33:28,005 --> 00:33:31,200


617
00:33:31,200 --> 00:33:35,490
I'll keep track of the number
of people born in each date

618
00:33:35,490 --> 00:33:38,640
by starting with none.

619
00:33:38,640 --> 00:33:41,470
And then for p in the
range of number of people,

620
00:33:41,470 --> 00:33:45,240
I'll make a random choice
of the possible dates

621
00:33:45,240 --> 00:33:49,999
and increment that
element of the list by 1.

622
00:33:49,999 --> 00:33:51,539
And then at the end,
we can say, look

623
00:33:51,539 --> 00:33:54,329
at the maximum
number of birthdays

624
00:33:54,329 --> 00:33:59,559
and see if it's greater than
or equal to the number of same.

625
00:33:59,559 --> 00:34:01,240
So that tells us that.

626
00:34:01,240 --> 00:34:04,490


627
00:34:04,490 --> 00:34:07,220
And then we can actually look
at the birthday problem--

628
00:34:07,220 --> 00:34:09,639
number of people, the number
of same, and, as usual,

629
00:34:09,639 --> 00:34:10,513
the number of trials.

630
00:34:10,514 --> 00:34:13,750


631
00:34:13,750 --> 00:34:17,840
So the number of hits is 0 for
t in range number of trials.

632
00:34:17,840 --> 00:34:21,940
If sameDate is true, then
we'll increment the number

633
00:34:21,940 --> 00:34:28,590
of hits by 1 and then as usual
divide by the number of trials.

634
00:34:28,590 --> 00:34:34,739
And we'll try it for 10,
20, 40, and 100 people.

635
00:34:34,739 --> 00:34:37,309


636
00:34:37,309 --> 00:34:41,480
And then just, we'll print
the estimated probability

637
00:34:41,480 --> 00:34:46,429
and the actual
probability computed using

638
00:34:46,429 --> 00:34:48,320
that formula I showed you.

639
00:34:48,320 --> 00:34:50,600
I have not shown you,
but I've imported

640
00:34:50,599 --> 00:34:53,480
a library called
math, because it

641
00:34:53,480 --> 00:34:55,039
is a factorial implementation.

642
00:34:55,039 --> 00:34:56,900
It's way faster than
the recursive one

643
00:34:56,900 --> 00:35:00,269
that we've seen before.

644
00:35:00,269 --> 00:35:00,880
Let's run it.

645
00:35:00,880 --> 00:35:23,920


646
00:35:23,920 --> 00:35:25,039
And we'll see what we get.

647
00:35:25,039 --> 00:35:30,579
So for 10, the estimated
probability is 0.11 now.

648
00:35:30,579 --> 00:35:36,719
So you can see, the estimates
are really pretty good.

649
00:35:36,719 --> 00:35:39,449
Once again, we have this
business that for 100,

650
00:35:39,449 --> 00:35:43,449
we're estimating 1, when the
real answer is point many,

651
00:35:43,449 --> 00:35:45,149
many 9's.

652
00:35:45,150 --> 00:35:47,400
But again, this is
sample probability.

653
00:35:47,400 --> 00:35:53,250
It just means in the number
of trials we did, every 1

654
00:35:53,250 --> 00:35:56,190
for 100 people, there
was a shared birthday.

655
00:35:56,190 --> 00:35:59,010
This is a number that
usually surprises people,

656
00:35:59,010 --> 00:36:03,690
as to why with 100 people
the probability is so high.

657
00:36:03,690 --> 00:36:06,990
But we could work out
the formula and see it.

658
00:36:06,989 --> 00:36:08,459
And as you can
see, the estimates

659
00:36:08,460 --> 00:36:10,929
are pretty good
from my simulation.

660
00:36:10,929 --> 00:36:20,251


661
00:36:20,251 --> 00:36:22,210
Now, we're going to see
why we did a simulation

662
00:36:22,210 --> 00:36:23,720
in the first place.

663
00:36:23,719 --> 00:36:27,969
Suppose we want the probability
of three people sharing

664
00:36:27,969 --> 00:36:29,259
a birthday instead of two.

665
00:36:29,260 --> 00:36:34,030


666
00:36:34,030 --> 00:36:37,240
It's pretty easy to see how
we changed the simulation.

667
00:36:37,239 --> 00:36:38,979
I even made a parameter.

668
00:36:38,980 --> 00:36:42,190
I just changed the
number 2 to number 3.

669
00:36:42,190 --> 00:36:45,200
The math, on the
other hand, is ugly.

670
00:36:45,199 --> 00:36:48,029


671
00:36:48,030 --> 00:36:52,190
Why is the math so much
uglier for 3 than for 2?

672
00:36:52,190 --> 00:36:55,400
Because for 2, the
complementary problem--

673
00:36:55,400 --> 00:36:58,039
the number we're
subtracting from 1--

674
00:36:58,039 --> 00:37:03,639
is simply the question of,
are all birthdays different?

675
00:37:03,639 --> 00:37:08,170
So did two people share a
birthday is 1 minus or all

676
00:37:08,170 --> 00:37:11,570
does everybody have
a different birthday.

677
00:37:11,570 --> 00:37:16,250
On the other hand, for 3 people,
the complementary problem is

678
00:37:16,250 --> 00:37:19,489
a complicated disjunct--
a bunch of ors--

679
00:37:19,489 --> 00:37:22,189
either all birthdays
are distinct,

680
00:37:22,190 --> 00:37:26,240
or two people share a birthday
and the rest are distinct,

681
00:37:26,239 --> 00:37:30,139
or there are two groups of
two people sharing a birthday

682
00:37:30,139 --> 00:37:31,969
and everything is distinct.

683
00:37:31,969 --> 00:37:36,449
So you can see here, there's
a lot of possibilities.

684
00:37:36,449 --> 00:37:40,799
And so it's 1 minus now a
very complicated formula.

685
00:37:40,800 --> 00:37:42,840
And in fact, if you try
and look how to do this,

686
00:37:42,840 --> 00:37:45,450
most people will tell
you don't bother.

687
00:37:45,449 --> 00:37:48,489
Here's kind of a
good approximation.

688
00:37:48,489 --> 00:37:50,319
But the math gets very hairy.

689
00:37:50,320 --> 00:37:53,039


690
00:37:53,039 --> 00:37:57,159
In contrast, changing the
simulation is dead easy.

691
00:37:57,159 --> 00:37:57,879
We can do that.

692
00:37:57,880 --> 00:38:03,807


693
00:38:03,807 --> 00:38:06,280
Whoops.

694
00:38:06,280 --> 00:38:13,650
So if we come over here for
the code, all I have to do

695
00:38:13,650 --> 00:38:15,075
is change this to 2 or 3.

696
00:38:15,074 --> 00:38:25,089


697
00:38:25,090 --> 00:38:27,190
And I'm going to leave
in this code, which

698
00:38:27,190 --> 00:38:31,179
is the wrong code, computing
the actual probability now

699
00:38:31,179 --> 00:38:35,109
for 2 people sharing rather
than 3, because I want

700
00:38:35,110 --> 00:38:37,660
to make it easy for you to see
the difference between what

701
00:38:37,659 --> 00:38:41,259
happens when we look at 3
shared rather than 2 shared.

702
00:38:41,260 --> 00:38:53,140


703
00:38:53,139 --> 00:38:55,980
And I get invalid syntax.

704
00:38:55,980 --> 00:38:58,766
That's not good.

705
00:38:58,766 --> 00:39:00,639
That's what happens when
I type in real time.

706
00:39:00,639 --> 00:39:07,969


707
00:39:07,969 --> 00:39:10,009
Why do I have invalid syntax?

708
00:39:10,010 --> 00:39:11,337
AUDIENCE: Line 56.

709
00:39:11,336 --> 00:39:12,170
JOHN GUTTAG: Pardon.

710
00:39:12,170 --> 00:39:13,630
AUDIENCE: Line 56.

711
00:39:13,630 --> 00:39:15,170
JOHN GUTTAG: One person, Anna.

712
00:39:15,170 --> 00:39:17,659
AUDIENCE: Line 56,
there's a comma.

713
00:39:17,659 --> 00:39:20,531
JOHN GUTTAG: Oh.

714
00:39:20,532 --> 00:39:21,490
That's not a good line.

715
00:39:21,489 --> 00:39:32,959


716
00:39:32,960 --> 00:39:40,409
So now, we see that if we get,
say, to n equals 100, for 2,

717
00:39:40,409 --> 00:39:42,529
you'll remember, it was 0.99.

718
00:39:42,530 --> 00:39:46,000
But for 3, it's only 0.63.

719
00:39:46,000 --> 00:39:49,590
So we see going from two
sharing to three sharing

720
00:39:49,590 --> 00:39:54,930
gets us a radically different
answer, not surprisingly.

721
00:39:54,929 --> 00:39:57,239
But we also-- and the real
thing I wanted you to see--

722
00:39:57,239 --> 00:39:59,309
is how easy it was to
answer this question

723
00:39:59,309 --> 00:40:01,809
with the simulation.

724
00:40:01,809 --> 00:40:05,940
And that's a primary
reason we use simulations

725
00:40:05,940 --> 00:40:09,000
to get probabilistic
questions rather

726
00:40:09,000 --> 00:40:11,190
than sitting down and
the pencil and paper

727
00:40:11,190 --> 00:40:14,460
and doing fancy
probability calculations,

728
00:40:14,460 --> 00:40:19,300
because it's often way
easier to do a simulation.

729
00:40:19,300 --> 00:40:22,220
We can see that in spades if
we look at the next question.

730
00:40:22,219 --> 00:40:26,679


731
00:40:26,679 --> 00:40:28,210
Let's think about
this assumption

732
00:40:28,210 --> 00:40:31,269
that all birthdays
are equally likely.

733
00:40:31,269 --> 00:40:33,369
Well, as you can
see, this is a chart

734
00:40:33,369 --> 00:40:38,440
of how common birthdates
are in the US, a heat map.

735
00:40:38,440 --> 00:40:44,820
And you'll see, for
example, that February 29

736
00:40:44,820 --> 00:40:47,930
is quite an uncommon birthday.

737
00:40:47,929 --> 00:40:52,009
So we should probably
treat that differently.

738
00:40:52,010 --> 00:40:53,480
Somewhat surprisingly,
you'll see

739
00:40:53,480 --> 00:40:57,159
that July 4 is a very
uncommon birthday as well.

740
00:40:57,159 --> 00:41:00,409
It's easy to understand
why February 29.

741
00:41:00,409 --> 00:41:02,569
The only thing I can
figure out for July 4

742
00:41:02,570 --> 00:41:06,230
is obstetricians don't
like working on holidays.

743
00:41:06,230 --> 00:41:08,300
And so they induce
labor sometime

744
00:41:08,300 --> 00:41:10,789
around the 2nd or
the 3rd, so they

745
00:41:10,789 --> 00:41:14,420
don't have to come to work
on the 4th or the 5th.

746
00:41:14,420 --> 00:41:15,680
Sounds a horrible thought.

747
00:41:15,679 --> 00:41:19,951
But I can't think of any other
explanation for this anomaly.

748
00:41:19,952 --> 00:41:21,410
You'll probably,
if you look at it,

749
00:41:21,409 --> 00:41:25,579
see Christmas day is
not so common either.

750
00:41:25,579 --> 00:41:27,170
So now, the question,
which we can

751
00:41:27,170 --> 00:41:29,119
answer, since you've
all fill out this form,

752
00:41:29,119 --> 00:41:32,809
is how exceptional
are MIT students?

753
00:41:32,809 --> 00:41:35,929
We like to think that you're
different in every respect.

754
00:41:35,929 --> 00:41:38,960
So are your birthdays
distributed differently

755
00:41:38,960 --> 00:41:40,829
than other dates?

756
00:41:40,829 --> 00:41:43,219
Have we got that data?

757
00:41:43,219 --> 00:41:44,889
So now we'll go look at that.

758
00:41:44,889 --> 00:41:49,179


759
00:41:49,179 --> 00:41:50,919
We should have a heat
map for you guys.

760
00:41:50,920 --> 00:41:53,900


761
00:41:53,900 --> 00:41:54,400
This one?

762
00:41:54,400 --> 00:41:56,849
AUDIENCE: Yep.

763
00:41:56,849 --> 00:41:59,299
I removed all the February 31.

764
00:41:59,300 --> 00:42:02,240
Thank you for those submissions.

765
00:42:02,239 --> 00:42:05,909
[LAUGHTER]

766
00:42:05,909 --> 00:42:06,524


767
00:42:06,525 --> 00:42:08,750
JOHN GUTTAG: So here it is.

768
00:42:08,750 --> 00:42:13,309
And we can see that,
well, they don't

769
00:42:13,309 --> 00:42:17,789
seem to be banded quite as
much in the summer months,

770
00:42:17,789 --> 00:42:20,369
probably says more about your
parents than it does about you.

771
00:42:20,369 --> 00:42:23,029


772
00:42:23,030 --> 00:42:26,090
But you can see that,
indeed, we do have--

773
00:42:26,090 --> 00:42:28,280
wow, we have a day
where there are

774
00:42:28,280 --> 00:42:30,110
five birthdays, that look like?

775
00:42:30,110 --> 00:42:30,620
Or no?

776
00:42:30,619 --> 00:42:32,556
AUDIENCE: February 12.

777
00:42:32,556 --> 00:42:33,355
JOHN GUTTAG: Wow.

778
00:42:33,355 --> 00:42:36,653


779
00:42:36,653 --> 00:42:39,070
You want to raise your hand
if you're born on February 12?

780
00:42:39,070 --> 00:42:42,388


781
00:42:42,387 --> 00:42:45,799
[LAUGHTER]

782
00:42:45,800 --> 00:42:46,670


783
00:42:46,670 --> 00:42:51,902
So you are exceptional in that
you lie about when you're born.

784
00:42:51,902 --> 00:42:57,470
But if you hadn't lied, I
think we would have still seen

785
00:42:57,469 --> 00:42:59,449
the probabilities would hold.

786
00:42:59,449 --> 00:43:03,154
How many people were
there, do we know?

787
00:43:03,155 --> 00:43:07,865
AUDIENCE: 146 with
112 unique birthdays.

788
00:43:07,864 --> 00:43:12,189
JOHN GUTTAG: 146 people,
112 unique birthdays.

789
00:43:12,190 --> 00:43:16,220
So indeed, the
probability does work.

790
00:43:16,219 --> 00:43:26,469


791
00:43:26,469 --> 00:43:28,989
So we know you're
exceptional in a funny way.

792
00:43:28,989 --> 00:43:32,239
Well, you can
imagine how hard it

793
00:43:32,239 --> 00:43:36,079
would be to adjust the
analytic model to account

794
00:43:36,079 --> 00:43:40,369
for a weird distribution
of birthdates.

795
00:43:40,369 --> 00:43:44,900
But again, adjusting the
simulation model is easy.

796
00:43:44,900 --> 00:43:46,700
I could have gone
back to that heat

797
00:43:46,699 --> 00:43:49,669
map I showed you of
birthdays in the US

798
00:43:49,670 --> 00:43:52,550
and gotten a separate
probability for each day,

799
00:43:52,550 --> 00:43:55,130
but I was too lazy.

800
00:43:55,130 --> 00:44:01,220
And instead, what I observed
was that we had a few days,

801
00:44:01,219 --> 00:44:06,949
like February 29, highly
unlikely, and this band

802
00:44:06,949 --> 00:44:10,039
in the middle of people
who were conceived

803
00:44:10,039 --> 00:44:13,670
in the late fall
and early winter.

804
00:44:13,670 --> 00:44:19,950
So what I did is I
duplicated some dates.

805
00:44:19,949 --> 00:44:25,564
So the 58th day of the year,
February 29, occurs only once.

806
00:44:25,565 --> 00:44:28,750


807
00:44:28,750 --> 00:44:30,590
The dates before
that, I said, let's

808
00:44:30,590 --> 00:44:32,730
pretend they occur four times.

809
00:44:32,730 --> 00:44:34,590
What only matters
here is not how often

810
00:44:34,590 --> 00:44:36,450
they occur but the
relative frequency.

811
00:44:36,449 --> 00:44:40,699


812
00:44:40,699 --> 00:44:46,000
And then the dates after
that occur four times

813
00:44:46,000 --> 00:44:49,480
except for the dates in
that band, which is going

814
00:44:49,480 --> 00:44:52,179
to have occur yet more often.

815
00:44:52,179 --> 00:44:56,000
So now-- and don't worry
about the exact details here--

816
00:44:56,000 --> 00:44:58,840
but what I'm doing is simply
adjusting the simulation

817
00:44:58,840 --> 00:45:02,140
to change the probability
of each date getting

818
00:45:02,139 --> 00:45:04,377
chosen by same date.

819
00:45:04,378 --> 00:45:07,190


820
00:45:07,190 --> 00:45:09,170
And then I can run
the simulation model.

821
00:45:09,170 --> 00:45:13,450
And, again, with a very
small change to code,

822
00:45:13,449 --> 00:45:15,899
I've modeled something
that's mathematically

823
00:45:15,900 --> 00:45:18,360
enormously complex.

824
00:45:18,360 --> 00:45:22,050
I have no idea how to
actually do this probability

825
00:45:22,050 --> 00:45:23,670
mathematically.

826
00:45:23,670 --> 00:45:27,046
But the code is, as you can
see, quite straightforward.

827
00:45:27,045 --> 00:45:33,849


828
00:45:33,849 --> 00:45:35,460
So let's go to that here.

829
00:45:35,460 --> 00:45:39,090


830
00:45:39,090 --> 00:45:45,450
So what I'm going to do
is comment this one out

831
00:45:45,449 --> 00:46:02,659
and uncomment this more
complicated set of dates

832
00:46:02,659 --> 00:46:03,500
and see what we get.

833
00:46:03,500 --> 00:46:14,019


834
00:46:14,019 --> 00:46:16,239
And again, it changes
quite dramatically.

835
00:46:16,239 --> 00:46:18,239
You might remember, before
it was around I think

836
00:46:18,239 --> 00:46:23,459
0.6-something for 100,
and now, it's 0.75.

837
00:46:23,460 --> 00:46:26,460
So getting away from the notion
that birthdays are uniformly

838
00:46:26,460 --> 00:46:28,710
distributed to saying
some birthdays are

839
00:46:28,710 --> 00:46:32,010
more common than others,
again, dramatically changes

840
00:46:32,010 --> 00:46:34,570
the answer.

841
00:46:34,570 --> 00:46:36,588
And we can easily look at that.

842
00:46:36,588 --> 00:46:43,079


843
00:46:43,079 --> 00:46:49,730
So that gets us to the big
topic of simulation models.

844
00:46:49,730 --> 00:46:52,820
It's a program that
describes a computation that

845
00:46:52,820 --> 00:46:57,830
provides information about the
possible behaviors of a system.

846
00:46:57,829 --> 00:47:00,049
I say possible
behaviors, because I'm

847
00:47:00,050 --> 00:47:02,835
particularly interested
in stochastic systems.

848
00:47:02,835 --> 00:47:05,720


849
00:47:05,719 --> 00:47:10,349
They're descriptive not
prescriptive in the sense

850
00:47:10,349 --> 00:47:13,739
that they describe
the possible outcomes.

851
00:47:13,739 --> 00:47:18,799
They don't tell you how to
achieve possible outcomes.

852
00:47:18,800 --> 00:47:20,720
This is different
from what we've

853
00:47:20,719 --> 00:47:22,549
looked at earlier in
the course, where we

854
00:47:22,550 --> 00:47:25,700
looked at optimization models.

855
00:47:25,699 --> 00:47:30,439
So an optimization
model is prescriptive.

856
00:47:30,440 --> 00:47:33,800
It tells you how to
achieve an effect,

857
00:47:33,800 --> 00:47:38,000
how to get the most value
out of your knapsack,

858
00:47:38,000 --> 00:47:42,349
how to find the shortest
path from A to B in a graph.

859
00:47:42,349 --> 00:47:44,750
In contrast, a
simulation model says,

860
00:47:44,750 --> 00:47:48,170
if I do this,
here's what happens.

861
00:47:48,170 --> 00:47:52,289
It doesn't tell you how to
make something happened.

862
00:47:52,289 --> 00:47:53,969
So it's very
different, and it's why

863
00:47:53,969 --> 00:47:57,389
we need both, why we
need optimization models

864
00:47:57,389 --> 00:48:00,569
and we need simulation models.

865
00:48:00,570 --> 00:48:03,750
We have to remember that
a simulation model is only

866
00:48:03,750 --> 00:48:06,570
an approximation to reality.

867
00:48:06,570 --> 00:48:10,110
I put in an approximation to
the distribution of birthdates,

868
00:48:10,110 --> 00:48:12,910
but it wasn't quite right.

869
00:48:12,909 --> 00:48:16,769
And as the very famous
statistician George Box said,

870
00:48:16,769 --> 00:48:22,320
"all models are wrong, but
some are actually very useful."

871
00:48:22,320 --> 00:48:27,930
In the next lecture, we'll look
at a useful class of models.

872
00:48:27,929 --> 00:48:30,609
When do we use simulations?

873
00:48:30,610 --> 00:48:33,309
Typically, as we've just
shown, to model systems that

874
00:48:33,309 --> 00:48:37,179
are mathematically intractable,
like the birthday problem

875
00:48:37,179 --> 00:48:39,739
we just looked at.

876
00:48:39,739 --> 00:48:43,129
In other situations, to
extract intermediate results--

877
00:48:43,130 --> 00:48:47,660
something happens along
the way to the answer.

878
00:48:47,659 --> 00:48:50,409
And as I hope you've
seen that simulations

879
00:48:50,409 --> 00:48:55,480
are used because we can play
what if games by successively

880
00:48:55,480 --> 00:48:57,340
refining it.

881
00:48:57,340 --> 00:48:59,230
We started with a
simple simulation

882
00:48:59,230 --> 00:49:01,960
that assumed that we only
asked the question of, do

883
00:49:01,960 --> 00:49:04,539
two people share a birthday.

884
00:49:04,539 --> 00:49:08,079
We showed how we could change
it to ask do three people share

885
00:49:08,079 --> 00:49:10,019
a birthday.

886
00:49:10,019 --> 00:49:11,909
We then saw that
we could change it

887
00:49:11,909 --> 00:49:16,259
to assume a different
distribution of birthdates

888
00:49:16,260 --> 00:49:18,620
in the group.

889
00:49:18,619 --> 00:49:20,519
And so we can start
with something simple.

890
00:49:20,519 --> 00:49:23,309
And we get it ever
more complexed

891
00:49:23,309 --> 00:49:25,414
to answer questions what if.

892
00:49:25,414 --> 00:49:29,509


893
00:49:29,510 --> 00:49:32,030
We're going to start
in the next lecture

894
00:49:32,030 --> 00:49:36,680
by producing a simulation
of a random walk.

895
00:49:36,679 --> 00:49:38,119
And with that, I'll stop.

896
00:49:38,119 --> 00:49:40,839
And see you guys soon.

897
00:49:40,840 --> 00:49:49,196


