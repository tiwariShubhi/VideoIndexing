WEBVTT

1
00:00:00.580 --> 00:00:03.750
The final type of analytics
we'll discuss in this module

2
00:00:03.750 --> 00:00:05.425
is called Centrality Analysis.

3
00:00:06.850 --> 00:00:12.010
We call something central if it's
in the middle of a larger entity.

4
00:00:12.010 --> 00:00:16.370
We also call something central
if it's important and vital.

5
00:00:17.680 --> 00:00:23.770
For graphs, we'll identify important
notes by looking at how central they are.

6
00:00:23.770 --> 00:00:24.270
In the graph.

7
00:00:27.280 --> 00:00:31.673
Look at the the six node graph,
you don't have to know a lot

8
00:00:31.673 --> 00:00:36.345
to figure out that the orange
node is pretty important, Why?

9
00:00:36.345 --> 00:00:39.290
Well, one reason could be it's
the most vulnerable node.

10
00:00:39.290 --> 00:00:41.240
If you remove it the graph
will fall apart.

11
00:00:41.240 --> 00:00:44.210
because this is clearly one way to
look at the centrality of the node.

12
00:00:45.630 --> 00:00:46.650
But it's not the only way.

13
00:00:48.270 --> 00:00:50.440
Another way of looking at the orange node,

14
00:00:50.440 --> 00:00:53.880
is that it can reach all other
nodes quicker, than any other node.

15
00:00:55.390 --> 00:00:58.570
So this is the idea behind influences.

16
00:00:58.570 --> 00:01:02.480
People in a social network who
are connected enough to reach out and

17
00:01:02.480 --> 00:01:06.810
possibly influence a lot more
people than others will be able to.

18
00:01:08.340 --> 00:01:10.820
If the little graph represents
a transportation network.

19
00:01:11.820 --> 00:01:15.890
And you were asked to build a restaurant
somewhere around this network.

20
00:01:15.890 --> 00:01:18.780
You'll possibly choose an area
near the central node.

21
00:01:18.780 --> 00:01:23.250
Because more traffic will flow
through this node than other nodes.

22
00:01:23.250 --> 00:01:25.830
And some of them will get
out at the station and

23
00:01:25.830 --> 00:01:27.010
bring business to your restaurant.

24
00:01:28.250 --> 00:01:30.310
We can give many more examples.

25
00:01:30.310 --> 00:01:34.810
In biological networks,
house-keeping genes are genes needed for

26
00:01:34.810 --> 00:01:38.050
the maintenance of basic
cellular function, and

27
00:01:38.050 --> 00:01:42.060
are expressed in all cells of
an organism under normal and

28
00:01:42.060 --> 00:01:46.780
abnormal conditions, these genes
are central because they're vital and

29
00:01:46.780 --> 00:01:49.300
they're connected to many other
nodes in the biological network.

30
00:01:50.440 --> 00:01:54.330
So much so that they need to
be taken out of the network so

31
00:01:54.330 --> 00:01:56.930
that the rest of
the network can be studied.

32
00:01:56.930 --> 00:02:01.390
Out of all these examples,
we'll focus on a kind of problem

33
00:02:01.390 --> 00:02:04.480
researchers have called
the key player problem.

34
00:02:05.740 --> 00:02:07.380
The problem comes in two flavors.

35
00:02:08.460 --> 00:02:11.177
Now take a little time to
read the two examples.

36
00:02:23.255 --> 00:02:25.970
The first is sort of a negative piece.

37
00:02:27.250 --> 00:02:31.660
We have a network and we are trying
to find a small subset of people

38
00:02:31.660 --> 00:02:36.250
who's removal will maximally
disrupt the network.

39
00:02:37.260 --> 00:02:40.610
The key operative word here is maximally.

40
00:02:40.610 --> 00:02:46.360
So if there is a node which removal
breaks the network into two parts,

41
00:02:46.360 --> 00:02:50.300
it is not what we want if
there's another two nodes

42
00:02:50.300 --> 00:02:53.440
whose removal will break
the network into ten parts.

43
00:02:53.440 --> 00:02:58.270
The second case, however,
is a lot more conventional.

44
00:02:58.270 --> 00:03:03.000
The goal is to find a small set of nodes
with maximal combined reachability

45
00:03:03.000 --> 00:03:04.250
to other nodes.

46
00:03:04.250 --> 00:03:09.000
That means, taken together, these nodes
should reach almost all other nodes.

47
00:03:11.010 --> 00:03:14.180
You should know that
people use two terms to

48
00:03:14.180 --> 00:03:16.940
characterize a general concept
of network centrality.

49
00:03:18.340 --> 00:03:20.920
The first one, centrality,
is about a node.

50
00:03:22.290 --> 00:03:26.450
It measures how central the node
is with respect to the network.

51
00:03:27.450 --> 00:03:31.070
So the orange node in the left
graph has high centrality, and

52
00:03:31.070 --> 00:03:32.550
the blue nodes have low centrality.

53
00:03:34.140 --> 00:03:39.670
The second term, centralization,
is about the network.

54
00:03:39.670 --> 00:03:41.620
Now look at the graph on the right,

55
00:03:41.620 --> 00:03:46.830
where the dark orange node is still very
central for the light orange node, and

56
00:03:46.830 --> 00:03:50.770
between the other nodes, and
therefore has reasonable centrality.

57
00:03:52.050 --> 00:03:55.170
As more nodes start
having higher centrality,

58
00:03:55.170 --> 00:03:58.090
the centralization of the network drops

59
00:03:58.090 --> 00:04:02.330
because there is less variation in
the centrality values of the network.

60
00:04:03.940 --> 00:04:09.332
So for each type of centrality that we
discuss next we can compute the network

61
00:04:09.332 --> 00:04:14.812
centralization by considering the sum
of the difference between the maximum

62
00:04:14.812 --> 00:04:20.393
centrality and the centrality of the node
divided by the maximum centrality.

63
00:04:20.393 --> 00:04:23.310
There are thirty different
measures of centrality.

64
00:04:24.640 --> 00:04:27.190
We will consider only a few of them and

65
00:04:27.190 --> 00:04:30.645
explore the conceptual
principles supported here.

66
00:04:30.645 --> 00:04:34.080
The first and the most intuitive
measure is degree centrality.

67
00:04:34.080 --> 00:04:39.180
Quick measures, the degree of a node
divided by the possible edges it

68
00:04:39.180 --> 00:04:44.100
could have if it connected to each of
the other N- 1 nodes in the graph.

69
00:04:45.110 --> 00:04:45.960
Now, we have seen this before.

70
00:04:47.010 --> 00:04:50.850
This measure gives us a sense
of the hubness of the node.

71
00:04:50.850 --> 00:04:55.630
The higher the number is,
the more hub-like the node is.

72
00:04:55.630 --> 00:04:58.640
Thinking of our second key player problem.

73
00:04:58.640 --> 00:05:02.880
One way to approach this is to
find a hub-like measure for

74
00:05:02.880 --> 00:05:05.660
a group with multiple nodes.

75
00:05:05.660 --> 00:05:08.690
Instead of measuring the degree
centrality of individual nodes,

76
00:05:10.310 --> 00:05:15.520
the measure simply counts the number of
edges coming into the group as a whole

77
00:05:15.520 --> 00:05:17.430
compared to the number of outsiders.

78
00:05:18.620 --> 00:05:25.460
In our example two red nodes here
together connect to all blue nodes.

79
00:05:26.830 --> 00:05:31.230
Although there is just one
node neighboring both of them.

80
00:05:31.230 --> 00:05:34.950
Closeness centrality takes a different
approach to the centrality problem.

81
00:05:36.670 --> 00:05:41.222
It acts the shortest distance
of a node to all other nodes and

82
00:05:41.222 --> 00:05:43.232
divides it by a minus one.

83
00:05:43.232 --> 00:05:48.575
So in our graph, a node like I,
which is on the periphery of the graph,

84
00:05:48.575 --> 00:05:52.199
will be quite far from
all nodes in general, and

85
00:05:52.199 --> 00:05:56.930
therefore will have a very high
closeness centrality value.

86
00:05:56.930 --> 00:06:03.070
On the other hand, nodes like F, C and
H are much closer to all other nodes.

87
00:06:04.340 --> 00:06:07.580
Know that we define this measure
in terms of shortest paths.

88
00:06:09.810 --> 00:06:15.060
So if a moving object, like information,
flows to the shortest path

89
00:06:15.060 --> 00:06:20.810
in the network, F is more likely to
receive them earlier than other nodes.

90
00:06:20.810 --> 00:06:23.710
And therefore can process into
other nodes more quickly.

91
00:06:25.190 --> 00:06:26.590
Therefore.

92
00:06:26.590 --> 00:06:31.300
If we look to inject a new piece of
information into the network with the idea

93
00:06:31.300 --> 00:06:36.486
that it should read every other node
quickly, I should possibly inject it at F.

94
00:06:36.486 --> 00:06:43.940
Recall however, that node information
flow is two shortest routes.

95
00:06:43.940 --> 00:06:49.370
An example is gossip, that tends to
travel through centrality nodes.

96
00:06:49.370 --> 00:06:53.430
Closeness centrality does not work well
for these types of information nodes.

97
00:06:54.490 --> 00:06:58.410
Another very popular centrality measure
is called betweenness centrality.

98
00:06:59.640 --> 00:07:06.430
For any node it measures the fraction of
shortest paths flowing through that node.

99
00:07:06.430 --> 00:07:08.730
Compared to the number of
shortest paths in the graph.

100
00:07:10.590 --> 00:07:16.065
Since B is at one end,
its between a centrality is 0.

101
00:07:16.065 --> 00:07:17.935
But let's look at A.

102
00:07:17.935 --> 00:07:20.010
A is in the path from B to E.

103
00:07:21.320 --> 00:07:21.880
So is D.

104
00:07:23.060 --> 00:07:27.440
Therefore, A's score for
the B to E path is 0.5.

105
00:07:27.440 --> 00:07:35.280
Similarly, its score for the C to E path
is also 0.5, making the total score 1.

106
00:07:35.280 --> 00:07:40.623
E is in the path from A to D,
for there is one more

107
00:07:40.623 --> 00:07:46.651
path from A to do through C,
so E's score is 0.5.

108
00:07:46.651 --> 00:07:49.840
Now can you verify why C's score is 3.5?

109
00:07:49.840 --> 00:07:53.275
Betweenness centrality
is typically used for

110
00:07:53.275 --> 00:07:57.440
problem where a commodity is
flowing through the network.

111
00:07:57.440 --> 00:07:59.840
As in the case of closeness centrality.

112
00:08:01.080 --> 00:08:05.573
Any quantity that does not flow in
shortest path channels like infection or

113
00:08:05.573 --> 00:08:09.872
rumor on the internet doesn't work
well with betweeness centrality.