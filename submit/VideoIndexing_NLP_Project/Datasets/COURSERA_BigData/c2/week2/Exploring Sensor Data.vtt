WEBVTT

1
00:00:00.890 --> 00:00:03.790
This is the first of two
hands-on exercises involving

2
00:00:03.790 --> 00:00:06.170
sensor data from a weather station.

3
00:00:06.170 --> 00:00:09.530
In this one, we will look at
static data in a text file.

4
00:00:09.530 --> 00:00:12.900
The next one we will look at live data
streaming from the weather station

5
00:00:12.900 --> 00:00:13.490
in real time.

6
00:00:13.490 --> 00:00:17.820
In this exercise, we will begin
by opening a terminal window and

7
00:00:17.820 --> 00:00:21.330
changing into the directory
containing the station measurements.

8
00:00:21.330 --> 00:00:24.560
We will look at these measurements in
a text file and then look at the key for

9
00:00:24.560 --> 00:00:27.540
these measurements so
we can understand what the values mean.

10
00:00:27.540 --> 00:00:29.310
Finally, we will plot the measurements.

11
00:00:30.340 --> 00:00:30.840
Let's begin.

12
00:00:31.870 --> 00:00:35.023
First, we will open a terminal window by
clicking on the Terminal icon on the top

13
00:00:35.023 --> 00:00:35.692
of the toolbar.

14
00:00:38.179 --> 00:00:44.814
Next, we'll cd into the directory

15
00:00:44.814 --> 00:00:50.350
containing the sensor data.

16
00:00:51.380 --> 00:00:58.358
We'll run cd
Downloads/big-data-two/sensor.

17
00:01:00.680 --> 00:01:07.750
We can write ls to see
the contents of this directory.

18
00:01:12.274 --> 00:01:18.554
The data from the weather station is
in a text file called wx-data.txt.

19
00:01:21.370 --> 00:01:26.550
We can run more wx-data.txt to
see the contents of this file.

20
00:01:34.970 --> 00:01:37.990
Each line of this file is
a separate set of measurements.

21
00:01:37.990 --> 00:01:42.390
There are two columns in this file,
the first column is a time stamp and

22
00:01:42.390 --> 00:01:45.160
it's separated by
a second column by a tab.

23
00:01:45.160 --> 00:01:51.710
The second column itself has separate
columns and these are separated by commas.

24
00:01:51.710 --> 00:01:56.790
The time stamp is the number
of seconds since 1970.

25
00:01:56.790 --> 00:01:59.450
You'll notice that it increases for
each time stamp.

26
00:02:01.830 --> 00:02:04.520
You'll notice that it increases for
each measurement.

27
00:02:04.520 --> 00:02:06.550
But sometimes measurements
come in at the same time.

28
00:02:06.550 --> 00:02:10.028
For example this one at 006.

29
00:02:10.028 --> 00:02:15.053
The measurements,
we see that the prefix is 0R1 for

30
00:02:15.053 --> 00:02:18.188
most of them but some have 0R2.

31
00:02:18.188 --> 00:02:21.060
If we look at the other measurements,

32
00:02:21.060 --> 00:02:26.646
we see that all the 0R1 measurements
start with Dn, Dm, Dx, and so on.

33
00:02:26.646 --> 00:02:31.670
Whereas R2 begins with Ta, Ua, and Pa.

34
00:02:34.310 --> 00:02:37.419
If we scroll down in the text
file by hitting the space bar,

35
00:02:37.419 --> 00:02:40.728
we'll see there are other
measurements besides R1 and R2.

36
00:02:43.860 --> 00:02:49.360
For example, there's R5 that has Th,
Vh, Vs and so on.

37
00:02:49.360 --> 00:02:53.830
And there's R0 which has
all the measurements.

38
00:02:53.830 --> 00:02:57.510
So Dn, Dm, Dx, Ta, Ua, Pa.

39
00:03:00.550 --> 00:03:01.930
And the remaining ones.

40
00:03:04.160 --> 00:03:07.434
Next we'll open another internal
window and look at the key to this

41
00:03:07.434 --> 00:03:10.598
measurements click on the tool
bar to open the terminal window.

42
00:03:10.598 --> 00:03:15.900
cd into downloads big data two sensor

43
00:03:23.120 --> 00:03:31.131
And the key to these measurements is
in a file called wxt520format.txt.

44
00:03:31.131 --> 00:03:36.290
We can run more wxt520format.txt
to see this file.

45
00:03:44.190 --> 00:03:47.116
This file says where each
of the prefix is mean, for

46
00:03:47.116 --> 00:03:49.307
example Sn is the wind speed minimum.

47
00:03:49.307 --> 00:03:56.430
Sm is the wind speed average.

48
00:03:56.430 --> 00:04:00.700
And Ta is the air temperature.

49
00:04:00.700 --> 00:04:04.530
So if we go back to our sensor file,
we see here Ta equals 13.9c.

50
00:04:04.530 --> 00:04:10.187
That means the air temperature at this

51
00:04:10.187 --> 00:04:15.690
time was 13.9 degrees celsius.

52
00:04:15.690 --> 00:04:21.022
We can also create a plot of
the data in this text file

53
00:04:21.022 --> 00:04:25.994
by running plot-data.py wx-data.txt Ta.

54
00:04:32.727 --> 00:04:37.529
This says to plot the data in
the wx-data file and the measure that we

55
00:04:37.529 --> 00:04:42.680
want to apply is Ta, which according
to our key, is the air temperature.

56
00:04:46.880 --> 00:04:51.520
When we run it, it displays a plot of the
air temperature found in the text file.