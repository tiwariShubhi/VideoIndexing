1
00:00:10,880 --> 00:00:20,929
So, we are in the some sense in the last lap
of the course, and we are looking at logic.

2
00:00:20,929 --> 00:00:30,599
So,
when we say logic there are many aspects to

3
00:00:30,599 --> 00:00:44,870
what we are talking about. The first one is
syntax or the language part. So, we first

4
00:00:44,869 --> 00:00:49,049
define a formal language which is the language
of logic that we are talking about and we

5
00:00:49,049 --> 00:00:54,519
have rules to say what is the sentence in
this

6
00:00:54,520 --> 00:01:06,370
language and what is not. Then we have the
lotion of semantics which tells us that when

7
00:01:06,370 --> 00:01:12,570
we make sentences out of smaller sentences,
how do they combine, what is the meaning

8
00:01:12,569 --> 00:01:23,578
of those sentences? Or in general we are concern
with meaning and truth. So, what do

9
00:01:23,578 --> 00:01:30,149
the sentences mean is one aspect of semantics
and is a sentence true or not true is the

10
00:01:30,149 --> 00:01:34,500
other aspect of semantics. Because we are
really interested to use logic as a mechanism

11
00:01:34,500 --> 00:01:41,140
to compute in coats true statements to arrive
with true statements to arrive with true

12
00:01:41,140 --> 00:01:43,349
statements through a synthetic process essentially.

13
00:01:43,349 --> 00:01:49,288
So, but to do that we first need to define
whether the sentences true or not essentially

14
00:01:49,289 --> 00:01:53,978
that
is done in the notion of semantics associated

15
00:01:53,978 --> 00:01:55,890
with the notion of semantics. So, given us

16
00:01:55,890 --> 00:02:02,879
.so one of the thing we are interested in
is a given a set of sentences yes which we

17
00:02:02,879 --> 00:02:05,849
could
call is premises we could call as axioms.

18
00:02:05,849 --> 00:02:11,519
But something that we assume to be true
without questioning that we want to find out

19
00:02:11,520 --> 00:02:16,770
what other sentences can be true. So, in gen
so in particular we may be interested in a

20
00:02:16,770 --> 00:02:19,251
particular sentences call alpha and we may
be

21
00:02:19,251 --> 00:02:26,560
interested asking whether alpha is true or
not essentially. And to this end we have this

22
00:02:26,560 --> 00:02:35,770
notion of entailment and we say that the set
of sentence and tail alpha if whenever those

23
00:02:35,770 --> 00:02:43,500
sentences are true in those circumstances
alpha must be true also. In professional logic

24
00:02:43,500 --> 00:02:46,330
which is what we have looked at so far what
do the mean by the circumstances?

25
00:02:46,330 --> 00:02:51,060
Basically we mean the valuation function which
assigns of valuation to each atomic

26
00:02:51,060 --> 00:02:57,670
proposition and then we can lift the valuation
up to the compound sentences. And if we

27
00:02:57,669 --> 00:03:02,689
have a set of sentences which are true in
some given valuation then alpha must be true

28
00:03:02,689 --> 00:03:04,490
in
that valuations essentially that is the notion

29
00:03:04,490 --> 00:03:11,170
of entailment. So, this is the semantics we
define, because we are interested in a using

30
00:03:11,169 --> 00:03:16,059
logic for doing something. But we have also
the same time interested in doing it in a

31
00:03:16,060 --> 00:03:19,569
mechanical way. So, the promise of logic is
that

32
00:03:19,569 --> 00:03:25,379
you can sit down with paper and pencil and
decide whether the given sentences true or

33
00:03:25,379 --> 00:03:31,009
not essentially. Of course, in the modern
context the promise is that you can write

34
00:03:31,009 --> 00:03:33,979
a
computer program to tell you whether the given

35
00:03:33,979 --> 00:03:36,929
sentence is true or not. Because
whatever you can do with paper and pencil

36
00:03:36,930 --> 00:03:39,210
you can do with a computer program as well.

37
00:03:39,210 --> 00:03:47,010
So, corresponding to the notion of entailment
which is a notion concern with truth value

38
00:03:47,009 --> 00:03:54,919
we have a notion of proof or drivability in
the synthetic side of the language essentially.

39
00:03:54,919 --> 00:04:02,500
So, we say that we can derive the sentence
alpha given the set s. So we are given the

40
00:04:02,500 --> 00:04:05,710
set
of sentence which we call is a knowledge base

41
00:04:05,710 --> 00:04:10,750
or something like that. And we want to
find out now, what else can be add to the

42
00:04:10,750 --> 00:04:18,430
knowledge base of the database or set of
sentences s and the notion of proof. So, notion

43
00:04:18,430 --> 00:04:30,180
of proof is based on the notion of the rules
of influence 

44
00:04:30,180 --> 00:04:36,009
and rules of influences are basically rules
which tell you that given some

45
00:04:36,009 --> 00:04:41,939
pattern already present in the set of sentences
what new sentence can you add to the set

46
00:04:41,939 --> 00:04:48,509
up? So, rule basically will say if it has
a set of antecedents so for example, model

47
00:04:48,509 --> 00:04:51,430
says
that if you can see alpha. And if we can see

48
00:04:51,430 --> 00:04:57,530
alpha implies beta where alpha and beta
could match to anything any sentence then

49
00:04:57,529 --> 00:05:03,119
you can add the sentence beta to the
knowledge base. So, rules of basically synthetic

50
00:05:03,120 --> 00:05:10,269
pattern base mechanism for adding new
sentences. And the idea off course you have

51
00:05:10,269 --> 00:05:15,149
different kind of proof procedures.

52
00:05:15,149 --> 00:05:28,179
.So, we have seen some of them which something
which we call national deduction

53
00:05:28,180 --> 00:05:37,430
which kind of flows with the rules of influence
then there something call indirect. We

54
00:05:37,430 --> 00:05:45,150
saw an example of this when we said that make
an assumption p or alpha and then it

55
00:05:45,149 --> 00:05:53,729
somehow we can show q then we can show p implies
q. This form of proof is called

56
00:05:53,730 --> 00:05:57,250
indirect proof were you start with an assumption
and then arrive at a formula where is

57
00:05:57,250 --> 00:06:03,649
the assumption becomes a left is side of a
implication statement. Then we saw the

58
00:06:03,649 --> 00:06:10,399
resolution method for proportional logic.
And there are other methods so for example,

59
00:06:10,399 --> 00:06:18,129
that is the tableaux method which is very
popular in many logic circles essentially.

60
00:06:18,129 --> 00:06:22,319
So,
proof procedures are basically mechanism for

61
00:06:22,319 --> 00:06:30,469
doing achieving this mechanically
producing new form list or mechanically testing

62
00:06:30,470 --> 00:06:35,060
whether the given formula can be
produce from a given set up formulas and arriving

63
00:06:35,060 --> 00:06:36,060
at alpha.

64
00:06:36,060 --> 00:06:40,530
So, as you can see there are 2 routs so arriving
to alpha 1 is a semantics rout which says

65
00:06:40,529 --> 00:06:45,000
that you look at the meaning of alpha look
at the valuation function. Or look at the

66
00:06:45,000 --> 00:06:48,370
semantics as to which propositions are true
and then decided the alpha is true or not

67
00:06:48,370 --> 00:06:50,680
that
amounts to constructing a truth table. And

68
00:06:50,680 --> 00:06:56,860
we said that truth tables are too large very
often if the number of proposition is high.

69
00:06:56,860 --> 00:07:02,680
And we want to use this mechanism of proof
of generating new sentences till we have generates

70
00:07:02,680 --> 00:07:10,418
generated alpha for essentially. Now,
today, we want to look at a different language.

71
00:07:10,418 --> 00:07:16,180
So, when we say logic is language
primary it is language we can define different

72
00:07:16,180 --> 00:07:20,470
kinds of logic and we discuss this in the
one of the early lectures that you know proposition

73
00:07:20,470 --> 00:07:26,580
logic is one of them. But there are
more expressive language is which can express

74
00:07:26,579 --> 00:07:31,759
things in more details for example, there
is epistemic logic which talk about people

75
00:07:31,759 --> 00:07:34,139
knowing what other people know and that
kind of stuff.

76
00:07:34,139 --> 00:07:41,009
But we are not going to that accent we want
to look at the next most the next level of

77
00:07:41,009 --> 00:07:45,069
language which is in fact, such popular level
that almost everything that we do in

78
00:07:45,069 --> 00:07:49,610
computing falls within the scope of this language.
And this is known as first order logic

79
00:07:49,610 --> 00:08:00,759
and we want to look at that today FOL essentially.
In fact, everything that we do on a

80
00:08:00,759 --> 00:08:04,050
computer program in a on a computer for example,
you write a c program or a java

81
00:08:04,050 --> 00:08:14,509
program can be seen as working in first order
logic. The characteristics feature of first

82
00:08:14,509 --> 00:08:19,670
order logic is there is a notion of variable
which is not there in the notion of proposition

83
00:08:19,670 --> 00:08:25,400
logic. And we can talk about relation between
the different elements essentially. So, let

84
00:08:25,399 --> 00:08:31,349
.us define first the language first logic
and I will do this set of simultaneously.

85
00:08:31,350 --> 00:08:33,719
I will work
with the syntax in the semantics instead of

86
00:08:33,719 --> 00:08:36,700
first giving you the full syntax and then
the

87
00:08:36,700 --> 00:08:37,700
semantics separately.

88
00:08:37,700 --> 00:08:41,129
So, we will do it a slightly in formal way
I will keep writing the syntax and will keep

89
00:08:41,129 --> 00:08:47,639
looking at what the semantic corresponded
to and we will see what kind of expression

90
00:08:47,639 --> 00:08:50,679
is
allows us essentially? So we are talking of

91
00:08:50,679 --> 00:09:03,229
FOL syntax now as in proposition logic there
is the logical part 

92
00:09:03,230 --> 00:09:07,810
which includes symbols like this. So, we are
defining the alphabet of

93
00:09:07,809 --> 00:09:20,879
the language so and so on which is the very
which is the same as what it was in

94
00:09:20,879 --> 00:09:28,649
proposition logic then symbols like brackets
and so on. All this is borrowed from

95
00:09:28,649 --> 00:09:35,740
proposition logic essentially everything is
same. So, at this point I would again like

96
00:09:35,740 --> 00:09:38,240
to
emphasis the fact that you must discriminate

97
00:09:38,240 --> 00:09:45,759
between the symbol that we are using and
the meaning of the symbol essentially. So,

98
00:09:45,759 --> 00:09:50,009
I have use this symbol or I could have use
this

99
00:09:50,009 --> 00:09:55,559
symbol and if you want to call this a symbol.
It does not a matter what you use this it

100
00:09:55,559 --> 00:10:00,299
is a
symbol and the syntactic machinery basically

101
00:10:00,299 --> 00:10:03,120
looks at the symbols as the something
which can be match with same symbol.

102
00:10:03,120 --> 00:10:07,159
So, it is basically pattern matching were
as the semantics of the symbol as we have

103
00:10:07,159 --> 00:10:13,129
all
agreed is that it combines it determines a

104
00:10:13,129 --> 00:10:19,139
truth value of 2 sentences combine using this
connective by in a specific manner. So, we

105
00:10:19,139 --> 00:10:24,569
know that alpha and beta is true whenever
alpha is true and beta is true and only then

106
00:10:24,570 --> 00:10:30,700
essentially. So, that is a semantic side
essentially. So, the semantics is just for

107
00:10:30,700 --> 00:10:33,190
our benefit to understand what the language
is

108
00:10:33,190 --> 00:10:38,779
doing for us and valid and validate for the
language is doing for it. The machinery itself

109
00:10:38,778 --> 00:10:43,230
does not use the semantic at all the machinery
just does pattern matching and so on so

110
00:10:43,230 --> 00:10:50,289
forth. So, we are return the semantics of
and s saying that alpha is true alpha and

111
00:10:50,289 --> 00:10:54,849
beta is
true if alpha is true and beta is true. But

112
00:10:54,850 --> 00:11:00,209
when we talk about proofs we have different
things operating upon this symbol. So, we

113
00:11:00,208 --> 00:11:04,449
say for example, is p n q is given to us or
alpha and beta given to us we had a rule calls

114
00:11:04,450 --> 00:11:08,920
simplification which says we can add alpha
itself essentially. Or if alpha is given to

115
00:11:08,919 --> 00:11:10,528
you and beta is given to you then you can
write

116
00:11:10,528 --> 00:11:11,528
alpha and beta.

117
00:11:11,528 --> 00:11:15,789
Though we are not looking at the meaning there
we only looking at the well define

118
00:11:15,789 --> 00:11:21,169
procedure which is what the proof procedure
we are talking about. So, these are the

119
00:11:21,169 --> 00:11:32,579
.symbols which we borrow from proposition
logic then we have set of variables that is

120
00:11:32,580 --> 00:11:41,259
called is set v and typically we use symbols
like x y z or sometimes x 1 x 2 and so on.

121
00:11:41,259 --> 00:11:44,620
It
does not matter basically it is a set of variable

122
00:11:44,620 --> 00:11:53,250
to given to us. A variable symbols you
might want to say we do not we will sort of

123
00:11:53,250 --> 00:11:58,539
not keep distinguish between the syntax and
semantics. So, when we say a variable we will

124
00:11:58,539 --> 00:12:04,649
say that it has its own well define
semantics how is the semantics of FOL defined?

125
00:12:04,649 --> 00:12:20,330
The semantics is defined in terms of a
domine D or some logic book that you might

126
00:12:20,330 --> 00:12:25,330
has seen also called the universe of
discourse. Essentially the domine is a set

127
00:12:25,330 --> 00:12:29,870
of object or elements and the language of
first

128
00:12:29,870 --> 00:12:33,060
set of logic allow you to talk about relations
between elements.

129
00:12:33,059 --> 00:12:40,000
So, for example, you might have the set might
be a set of people and you might say that

130
00:12:40,000 --> 00:12:45,389
for example, ram is a brother of laxman. So,
it is a relation between ram and laxman and

131
00:12:45,389 --> 00:12:50,049
it is a brother relation. FOL allows you to
talk about things like that essentially of

132
00:12:50,049 --> 00:12:52,049
it is a
domine is a set of natural numbers you might

133
00:12:52,049 --> 00:12:56,338
say 7 are less than 11 essentially. So, it
is

134
00:12:56,339 --> 00:13:00,530
relation between 7 and 11 the less than relation
and we are saying 7 comas 11 belong to

135
00:13:00,529 --> 00:13:08,069
this relation. So, everything is a terms of
domine D and the semantics that we will

136
00:13:08,070 --> 00:13:16,610
associate with variables is an assignment
function 

137
00:13:16,610 --> 00:13:23,669
we will call this which matches which
maps every element of every variable to an

138
00:13:23,669 --> 00:13:29,490
element of the domine essentially. We are
doing syntax and semantics at the same time.

139
00:13:29,490 --> 00:13:33,730
So, as we write the syntax we will try to
understand what is the meaning of those things?

140
00:13:33,730 --> 00:13:42,420
So, every variable would basically stand
for element in the domine essentially. So,

141
00:13:42,419 --> 00:13:44,559
for example I might say there is a variable
for

142
00:13:44,559 --> 00:13:51,708
x and the assignment will say x equal to 3
or x equal to 7 or x equal to 20. So that

143
00:13:51,708 --> 00:13:53,569
is that
is what the assignment function is doing.

144
00:13:53,570 --> 00:14:02,390
So, we would also write saying that x maps
to x A. So, this notation we will use to say

145
00:14:02,389 --> 00:14:08,259
that this is x A belongs to domine and x belongs
to the set of variables and this x maps

146
00:14:08,259 --> 00:14:15,409
that is the assignment function which is doing
for us. So, x A will stands for the image

147
00:14:15,409 --> 00:14:27,089
of
x under this mapping then we have a set of

148
00:14:27,090 --> 00:14:37,350
quantifiers 
so true be very pedantic should

149
00:14:37,350 --> 00:14:42,721
say set of quantifiers symbols, but we will
set of use some slightly loosely. And the

150
00:14:42,721 --> 00:14:54,750
2
most common quantifiers that we use are symbol

151
00:14:54,750 --> 00:15:05,320
like this which we read as for all and a
symbol like this which we read as there exists.

152
00:15:05,320 --> 00:15:15,720
So, it is to additional to when you see this
symbol additional read it is for all it additional

153
00:15:15,720 --> 00:15:22,360
to read the symbol is there exists directly
we will see the semantics of this as he go.

154
00:15:22,360 --> 00:15:27,810
But essentially these are quantifiers for

155
00:15:27,809 --> 00:15:38,049
.variables here and they dictate what assignments
are we talking about essentially? So, as

156
00:15:38,049 --> 00:15:47,079
you probably know when we use for all so if
say for all x p s were p is a predicate which

157
00:15:47,080 --> 00:15:49,350
you will define in a moment.

158
00:15:49,350 --> 00:15:54,629
Then I am saying that take any assignment
and this p x must be choose essentially. So,

159
00:15:54,629 --> 00:15:59,549
we will come to the more formal definition
later, but at this moment let us understand

160
00:15:59,549 --> 00:16:04,849
and say there are quantifiers are use to quantify
what assignments can be used for talking

161
00:16:04,850 --> 00:16:14,089
about those variables essentially. And just
when we are describing this we can also make

162
00:16:14,089 --> 00:16:18,209
an observation that this is the characteristics
of first order logic that you have variables

163
00:16:18,208 --> 00:16:22,429
in
a quantify an over variables. If we talk about

164
00:16:22,429 --> 00:16:31,000
the so called second order logic then we
have relations or as we will call them predicates.

165
00:16:31,000 --> 00:16:35,629
And we will have predicate variables
and quantifier over predicate variables essentially.

166
00:16:35,629 --> 00:16:39,490
So that is the higher order logic which
is we are not talking about in our logic predicate

167
00:16:39,490 --> 00:16:46,460
symbols will be fixed essentially. So,
this is the logical part which is common in

168
00:16:46,460 --> 00:16:58,180
every language that we define and the non
logical part in proposition logic and non

169
00:16:58,179 --> 00:17:00,879
logical part was a set up proposition that
we

170
00:17:00,879 --> 00:17:10,078
start off which essentially. In this case
it is a set of there are 3 sets.

171
00:17:10,078 --> 00:17:21,009
So, we will define the language l to be define
by 3 sets which we will call P F and C. So,

172
00:17:21,009 --> 00:17:30,980
these are 3 sets some books would use the
symbol our instead of P add use p, because

173
00:17:30,980 --> 00:17:34,091
p
is stands of predicate here if we use our

174
00:17:34,090 --> 00:17:37,779
then it stands for relation essentially. Both
are

175
00:17:37,779 --> 00:17:44,889
talking about the same thing the predicate
comes on the language of the logic. And

176
00:17:44,890 --> 00:17:48,860
relation is basically define the about the
domine we do not expressly talk about relations

177
00:17:48,859 --> 00:17:55,928
here. But, predicates as you will see then
intended to stand for relations essentially

178
00:17:55,929 --> 00:17:58,269
so
what is this set? This is a set of predicate

179
00:17:58,269 --> 00:18:13,000
symbol. So very often we use things like P
Q R

180
00:18:13,000 --> 00:18:21,869
and so on. But we can also use things like
brother friend all of these would stand for

181
00:18:21,869 --> 00:18:26,589
predicate symbols essentially. So, basically
a set we define a set and the language that

182
00:18:26,589 --> 00:18:31,439
we
are talking about will use those symbols essentially.

183
00:18:31,440 --> 00:18:42,019
Then so this is P F is the set of
function symbols 

184
00:18:42,019 --> 00:18:53,970
typically we use small f small g small h or
f 1 f 2, but we could also

185
00:18:53,970 --> 00:19:05,829
use things like plus father and so on and
as you can guess from this plus in father

186
00:19:05,829 --> 00:19:08,549
that
function symbols basically denote functions

187
00:19:08,549 --> 00:19:09,930
in the domain essentially.

188
00:19:09,930 --> 00:19:31,730
Then there is a set of constraints symbols
it could be c 1 c 2 or something. So, it could

189
00:19:31,730 --> 00:19:37,230
be
something like for example, 0 which stands

190
00:19:37,230 --> 00:19:45,230
for 0 or which could stands for an empty

191
00:19:45,230 --> 00:19:52,460
.string any anything which is in this thing.
So, we are talking about the syntax of the

192
00:19:52,460 --> 00:19:58,740
language the any first order language is defined
by these 3 sets; a set predicate symbol a

193
00:19:58,740 --> 00:20:04,089
set of function symbol and a set of constraint
symbols what is the mapping of this sets?

194
00:20:04,089 --> 00:20:22,879
The mapping is defined by an interpretation
function we will call is I and what this

195
00:20:22,880 --> 00:20:37,309
function does is that it maps every P belonging
to P to use for this moment a symbol p I

196
00:20:37,308 --> 00:20:43,048
on the domine. So, we will just come to that
in a moment essentially likewise every

197
00:20:43,048 --> 00:20:49,788
function symbol is map to we will come to
this in a moment a function symbol f I and

198
00:20:49,788 --> 00:20:58,470
every constraint symbol is map to a constraint
symbol t I. But in this case we can also

199
00:20:58,470 --> 00:21:05,240
specify at this stage that it something which
belongs to D. So the interpretation is an

200
00:21:05,240 --> 00:21:09,079
interpretation of language.

201
00:21:09,079 --> 00:21:17,339
The language has as part of it is consitauance
these constraint symbols and what

202
00:21:17,339 --> 00:21:22,549
interpretation tells you is at what does the
constraint symbol stands for in my domine

203
00:21:22,549 --> 00:21:27,119
essentially. So, this symbol for example,
might stand for the number 0 which is a

204
00:21:27,119 --> 00:21:33,519
element of a domine or this might stands for
n p string or a symbol liked might stands

205
00:21:33,519 --> 00:21:37,798
for
example, which is we can treat to be constraint

206
00:21:37,798 --> 00:21:45,250
and so on. So, there are 2 symbols which
I have forgotten here which is this bottom

207
00:21:45,250 --> 00:21:47,339
in the top which is there in every language
let

208
00:21:47,339 --> 00:21:53,909
me talk about. So, this is the vocabulary
of the language then we define what we call

209
00:21:53,910 --> 00:22:03,240
as
the family of terms sometime we call and set

210
00:22:03,240 --> 00:22:12,519
of terms. So, the language we are working
towards defining what is the sentences in

211
00:22:12,519 --> 00:22:17,160
our language so far we have only define the
alphabet for the language. And now, we are

212
00:22:17,160 --> 00:22:20,779
gradually working towards a set of sentence
is, but before we do that we need to define

213
00:22:20,779 --> 00:22:24,700
what we call is the set of terms. And the
set of

214
00:22:24,700 --> 00:22:36,340
terms let us call the T is defined as follows.
That if for every edge which belongs to be

215
00:22:36,339 --> 00:22:45,490
for every variable that is we have edges belongs
to so in other words we are saying every

216
00:22:45,490 --> 00:23:00,839
variable is the term then for every c belonging
to T we say C belongs to p.

217
00:23:00,839 --> 00:23:08,649
So, every constant is a term so what are these
terms that we are talking about? The set of

218
00:23:08,650 --> 00:23:17,009
term is essentially the set of object in the
domine essentially. Basically when we say

219
00:23:17,009 --> 00:23:27,960
x
belongs to t we the semantics of that is that

220
00:23:27,960 --> 00:23:38,829
x A belongs D were x belongs to v x A
belongs D that is what we are saying a set

221
00:23:38,829 --> 00:23:47,308
of terms. So, x is a term here we are saying
x

222
00:23:47,308 --> 00:23:52,230
is a term here we are saying a cons here we
are saying variable is a term here we are

223
00:23:52,230 --> 00:23:56,579
saying constraint is term and by term basically
we mean something in my domine

224
00:23:56,579 --> 00:24:04,559
essentially. So, this C I also belong to D
and x A is also belongs to D. So, one thing

225
00:24:04,559 --> 00:24:13,129
.which I have not at mentioned is that each
of these predicate symbols or each of these

226
00:24:13,130 --> 00:24:18,890
function symbols has associated with an arity
essentially. So, they have an associated

227
00:24:18,890 --> 00:24:34,120
with an arity which basically tells you how
many arguments it can take? In the case of

228
00:24:34,119 --> 00:24:41,048
functions, we will define them terms in the
case of predicate we will define atomic

229
00:24:41,048 --> 00:24:42,048
formulas.

230
00:24:42,048 --> 00:24:45,849
But basically in both the cases they take
a set of arguments and the arity tells you

231
00:24:45,849 --> 00:24:49,109
what
the arguments are so very often we write the

232
00:24:49,109 --> 00:24:52,219
arity below. For example, if we write arity
2

233
00:24:52,220 --> 00:24:58,569
below plus it basically means it takes 2 arguments.
If we take arity 3 below plus we say

234
00:24:58,569 --> 00:25:05,428
that it is a function 3 argument essentially.
So how many arguments it take essentially?

235
00:25:05,429 --> 00:25:19,870
Now, we have variable system constraint system
and therefore, every f n when I write f n

236
00:25:19,869 --> 00:25:36,250
like this it means this says arity n belonging
to my set of function symbols and a set p

237
00:25:36,250 --> 00:25:45,440
1 p
n belonging to set off term. So, this is a

238
00:25:45,440 --> 00:25:48,279
recursive definition as you will see this
structural

239
00:25:48,279 --> 00:25:59,690
recursion which we offer new to define a language.
The expression f n followed by t 1, t

240
00:25:59,690 --> 00:26:15,710
2 t n, so 
we can take a function symbol of given arity

241
00:26:15,710 --> 00:26:20,930
then take that many agreements
which must be terms put them together and

242
00:26:20,930 --> 00:26:33,519
we get a new term essentially. So, for
example, I could say something like plus 7

243
00:26:33,519 --> 00:26:41,569
6 if plus is a function symbol of arity 2
then

244
00:26:41,569 --> 00:26:50,389
this expression stands for the term which
takes to arguments.

245
00:26:50,390 --> 00:26:58,919
Now, you know that this plus for example,
is mapped so for example, I might say

246
00:26:58,919 --> 00:27:08,900
something like this that plus under the interpretation
I maps to plus which I would have

247
00:27:08,900 --> 00:27:15,670
call plus I. But let see more we're saying
that plus map maps so this plus is and

248
00:27:15,670 --> 00:27:28,890
arithmetic operator on the domine of natural
numbers. Let us see and if 7 and 6 are terms

249
00:27:28,890 --> 00:27:34,850
which map to respectively number 7 and 6 so
which is off course very obvious for all of

250
00:27:34,849 --> 00:27:42,589
us. Then these expression stands for the number
13 given the fact that I am interpreting

251
00:27:42,589 --> 00:27:49,339
the plus as a addition symbol a symbol which
stands for addition of 2 numbers and given

252
00:27:49,339 --> 00:27:54,009
that am giving this 2 agreements which respectively
stands for 7 and 6. Then in domine

253
00:27:54,009 --> 00:28:00,509
if I add it 7 and 6 I would have got the number
13 and this term essentially stands for this

254
00:28:00,509 --> 00:28:25,140
number 13. So, we can define this here that
given a term it is mapping under

255
00:28:25,140 --> 00:28:35,440
interpretation and assignment gives us a term
which interpret function name which is

256
00:28:35,440 --> 00:28:45,929
interpreted followed by every term who is
interpretation I have to do.

257
00:28:45,929 --> 00:28:58,660
So, the semantics of terms is that either
there variables or they are constraints or

258
00:28:58,660 --> 00:28:59,660
they are

259
00:28:59,660 --> 00:29:03,470
.function symbols apply to an appropriate
number of terms essentially. And what they

260
00:29:03,470 --> 00:29:28,350
gave us is a term essentially. So, this itself
is a mapping from D raise to n to D. Basically

261
00:29:28,349 --> 00:29:32,609
a function symbol defines a term a function
symbol also defines some mapping in the

262
00:29:32,609 --> 00:29:38,979
domine which is from D raise to D I could
have written here actually D raise in to D

263
00:29:38,980 --> 00:29:42,170
it is
a mapping from D raise in to D. So, it takes

264
00:29:42,170 --> 00:29:50,558
the argument n agreements and gives the one
value or one result and all the agreements

265
00:29:50,558 --> 00:29:56,639
and all the values they comes from the domine
essentially. So, plus for example, is D cross

266
00:29:56,640 --> 00:30:00,149
D to D essentially it takes 2 agreements and
it gives one agreements.

267
00:30:00,148 --> 00:30:01,148
.

268
00:30:01,148 --> 00:30:09,229
We want look at formulas eventually we want
to move towards sentences. But before we

269
00:30:09,230 --> 00:30:16,880
come to formulas so want to define this set
F of formulas before that we define a set

270
00:30:16,880 --> 00:30:29,810
A of
atomic formulas. And this atomic formulas

271
00:30:29,809 --> 00:30:34,211
will some sense of correspond to the
propositional symbols in propositional logic

272
00:30:34,211 --> 00:30:56,559
essentially. So, first these things they belong
to atomic formulas then if P belongs to P

273
00:30:56,559 --> 00:31:08,470
is a set of predicate symbols and t 1 t 2
t n

274
00:31:08,470 --> 00:31:24,278
belongs to a set of terms. So, t is a as an
arty n then this P with arity n t 1 t 2 t

275
00:31:24,278 --> 00:31:41,890
n belongs
to set up so an. Atomic formula in first order

276
00:31:41,890 --> 00:31:45,440
logic which is also called predicate logic
or

277
00:31:45,440 --> 00:31:55,288
predicate calculus is made up of taking proposition
symbol of arity n and n arguments

278
00:31:55,288 --> 00:32:02,950
which must be terms essentially. Now, you
must keep this in mind this is strictly what

279
00:32:02,950 --> 00:32:08,600
keeps first order logic to define the boundary
the first order logic what can what is the

280
00:32:08,599 --> 00:32:11,980
.sentences of first order logic and what is
not a sentences of.

281
00:32:11,980 --> 00:32:22,210
So, if want to say for example, the predicate
name believes and if I say john believe that

282
00:32:22,210 --> 00:32:28,850
the earth is flat. Then I can try and define
a predicate which says 2 agreements as to

283
00:32:28,849 --> 00:32:31,869
who
is believer and what is the thing that is

284
00:32:31,869 --> 00:32:34,178
believed, in then the believer is john. And
the

285
00:32:34,179 --> 00:32:42,190
thing that believed is believed in is the
flat earth essentially now, but flat earth

286
00:32:42,190 --> 00:32:46,120
itself a
relation. It is basically saying that the

287
00:32:46,119 --> 00:32:48,259
earth is flat essentially something which
is true or

288
00:32:48,259 --> 00:32:54,960
false essentially. So, this sentences john
believes at the earth is flat is not a sentences

289
00:32:54,960 --> 00:32:57,850
in
first order logic. Because you can only give

290
00:32:57,849 --> 00:33:05,859
terms as inputs and cannot gave formulas as
the input that essentially. So the predicate

291
00:33:05,859 --> 00:33:19,248
symbol that we are taking about is basically
map to a subset so p I is a subset of d rise

292
00:33:19,249 --> 00:33:24,600
to n. If you were they were the subset is
a it is

293
00:33:24,599 --> 00:33:31,109
an relation on the domine D and the relation
is this subset which has the which belongs

294
00:33:31,109 --> 00:33:40,269
to this set essentially. Sometime logician
talk about first order logic and they

295
00:33:40,269 --> 00:33:47,389
distinguished from first order logic with
equality. Some people do not include equality

296
00:33:47,390 --> 00:33:49,759
inside the language, but some people do.

297
00:33:49,759 --> 00:33:54,849
So, let us talk about the first order logic
with equality here in which case we have one

298
00:33:54,849 --> 00:34:00,678
more atomic formula. So, we have this top
and bottom is atomic formula is an we have

299
00:34:00,679 --> 00:34:03,840
taking a predicate symbol and put giving a
appropriate number of arguments gives a

300
00:34:03,839 --> 00:34:17,329
atomic formula. And now, if t i and t j belongs
to a set of terms then t i equal to t j

301
00:34:17,329 --> 00:34:23,509
belongs to the set of atomic. So, in first
order logic with equality we have atomic formula

302
00:34:23,510 --> 00:34:29,569
is which talk about equality as well essentially.
So, we have an expression essentially so

303
00:34:29,568 --> 00:34:33,139
which means when we talk about first order
logic with equality we must have the

304
00:34:33,139 --> 00:34:42,608
equality symbol also thrown in here. So, this
is a set atomic formulas so before moving

305
00:34:42,608 --> 00:34:48,529
on to compound formulas or our formula is
in general let us talk about the proof values

306
00:34:48,530 --> 00:34:54,889
of these atomic formulas. Because we want
to talk about the semantic in terms of which

307
00:34:54,889 --> 00:35:07,170
formula is are true and which formula is are
not true. We are so remember this truth or

308
00:35:07,170 --> 00:35:12,079
valuation is a mapping to this set of true
or false sentences.

309
00:35:12,079 --> 00:35:18,989
So, one thing we always do that we always
map this true false and we always map this

310
00:35:18,989 --> 00:35:34,940
true and then we map atomic formulas of the
first kind. So, I will note write and so it

311
00:35:34,940 --> 00:35:50,958
basically let assume it is implicit t n to
true. If and only if the corresponding which

312
00:35:50,958 --> 00:35:58,679
is t 1 i
A t 2 when I write i A on the top it means

313
00:35:58,679 --> 00:36:01,429
by applying the interpretation and by applying

314
00:36:01,429 --> 00:36:14,588
.the assignment if there are any variables
inside. So, this is off course something which

315
00:36:14,588 --> 00:36:22,509
we are familiar with formula is in this notion.
That a predicate like this is true if I say

316
00:36:22,510 --> 00:36:27,859
brother ram laxman and I say brother ram laxman
maps true. If in the real world ram and

317
00:36:27,858 --> 00:36:35,279
laxman the pair belongs to the set up pairs
which define the set of brothers essentially.

318
00:36:35,280 --> 00:36:43,160
Or
I can say that 7 less than 13 is true if in

319
00:36:43,159 --> 00:36:45,868
my domain I define the less than relation
let us

320
00:36:45,869 --> 00:36:51,280
say I define in to then 7 coma 13 belongs
to the set of pairs which define the less

321
00:36:51,280 --> 00:36:55,890
than
relationship in this we are familiar with.

322
00:36:55,889 --> 00:37:02,159
The second kind t 1 t i equal to t j this
maps to

323
00:37:02,159 --> 00:37:19,778
true if t i and stands for the same element
if they stand for the same element essentially.

324
00:37:19,778 --> 00:37:27,369
So, if I say the prime minister of India and
if i say manmohan singh then I say these 2

325
00:37:27,369 --> 00:37:33,048
terms are the same. In other words manmohan
singh is a prime minister of India if in the

326
00:37:33,048 --> 00:37:45,199
domine they map to the same person essentially
so that gives us the set up atomic

327
00:37:45,199 --> 00:37:56,088
formulas. Now, let us talk about the set up
formulas 

328
00:37:56,088 --> 00:38:02,429
many people use the term formulas
some people use the term formula. But I think

329
00:38:02,429 --> 00:38:10,868
the more moderns style seems to be
formulas essentially. So here first of all

330
00:38:10,869 --> 00:38:13,369
we borrow everything we do in proposition
logic

331
00:38:13,369 --> 00:38:23,510
which means we define things like alpha and
beta alpha implies beta and so on. So,, this

332
00:38:23,510 --> 00:38:34,700
is like in P l exactly we borrow there so
if alpha is formula and beta is a formula

333
00:38:34,699 --> 00:38:36,958
then
alpha in beta is formula essentially. So,

334
00:38:36,958 --> 00:38:42,149
you must suppose start of by saying that all
atomic formula is formula essentially and

335
00:38:42,150 --> 00:38:48,108
then you can use logical connective so
construct more formulas. But we also have

336
00:38:48,108 --> 00:38:58,150
formula is of this kind that 
for all followed by

337
00:38:58,150 --> 00:39:08,210
variable name followed by a formula is a formula.

338
00:39:08,210 --> 00:39:15,059
And then exist followed by a name followed
by a formula they both belong to the set of

339
00:39:15,059 --> 00:39:25,509
formulas F that we are talking about. So,
this is something new in first order logic

340
00:39:25,509 --> 00:39:30,798
which
is that you can. So recall that we just made

341
00:39:30,798 --> 00:39:37,818
an observation that atomic predicates they
correspond to proportional symbols into proposition

342
00:39:37,818 --> 00:39:42,278
logic. In fact, you can think of
proportional and proposition logic as a predicate

343
00:39:42,278 --> 00:39:46,760
with 0 arguments essentially. So, there
nothing to follow after that it just becomes

344
00:39:46,760 --> 00:39:50,589
to proportional symbols you cannot break it
down in to future where as the predicate breaking

345
00:39:50,588 --> 00:39:59,048
down in it into further. So, if I say
Socrates is a man we treat it that as a proposition

346
00:39:59,048 --> 00:40:10,960
earlier. But now, we would talk about it
as man Socrates that we are breaking it down.

347
00:40:10,960 --> 00:40:21,048
And saying that man is a relation of arity
one which is defines over the set and basically

348
00:40:21,048 --> 00:40:26,538
Socrates belongs to this. So, man is a
subset of the elements of the domine and Socrates

349
00:40:26,539 --> 00:40:30,849
is 1 those elements essentially. So the

350
00:40:30,849 --> 00:40:36,318
.atomic formula is define here and the of
compound formula is define exactly like we

351
00:40:36,318 --> 00:40:39,768
do
in proposition logic that we use. In fact,

352
00:40:39,768 --> 00:40:41,558
this is what gives a definition to what does
this

353
00:40:41,559 --> 00:40:45,660
symbol and mean what does the symbol implies
mean and so on.

354
00:40:45,659 --> 00:40:53,009
And then we have this new formula is which
say that alpha and there exists x beta

355
00:40:53,010 --> 00:41:03,989
essentially. So, when these formulas are is
true? So,, we say so let me write it here

356
00:41:03,989 --> 00:41:12,949
for on
x alpha on the way interpretation and an assignment

357
00:41:12,949 --> 00:42:06,119
maps to true if for every assignment
B that is an x variant a. So, let me first

358
00:42:06,119 --> 00:42:10,849
treat this out we are saying that a formula
for all

359
00:42:10,849 --> 00:42:15,760
like self under an interpretation an assignment
so what does the interpretation do?

360
00:42:15,760 --> 00:42:19,130
Interpretation defines all the predicate symbol
and the function symbols as you what the

361
00:42:19,130 --> 00:42:24,700
stand for an assignment tells you what every
variable is being map to in the this thing.

362
00:42:24,699 --> 00:42:33,058
We say that such a thing is true under a given
interpretation and an assignment. If for

363
00:42:33,059 --> 00:42:38,219
assignment B so we are talking of other assignment
know what are assignments?

364
00:42:38,219 --> 00:42:45,409
Assignments give map variables to elements
in the domine that is an x variant of a so

365
00:42:45,409 --> 00:42:51,690
when we say an x variant of a we mean that
the assignment B defers from the assignment

366
00:42:51,690 --> 00:42:57,249
a only in the mapping of these variable x.

367
00:42:57,248 --> 00:43:03,629
And all other variables it maps identically
as in a. So, b maps everything like a does

368
00:43:03,630 --> 00:43:09,099
except for x which it maps differently. So
that is call an x variant of a so for every

369
00:43:09,099 --> 00:43:13,048
b that
is an x variant o f a. In other words x can

370
00:43:13,048 --> 00:43:22,630
take any value the formula now without the
quantify alpha I under that assignment B map

371
00:43:22,630 --> 00:43:36,559
to true. Likewise the exits x alpha under
i

372
00:43:36,559 --> 00:43:47,390
A maps true all this is a same except that
instead of every we have some. So, for

373
00:43:47,389 --> 00:43:55,170
example, if I have a sentences so let us say
that there is only one variable in a system

374
00:43:55,170 --> 00:43:57,459
so
far, but and let us see we are talking about

375
00:43:57,458 --> 00:44:10,739
natural number. Then if I say for all x x
greater than equal to 0 I say that such a

376
00:44:10,739 --> 00:44:18,958
sentences true under an assignment a if for
any

377
00:44:18,958 --> 00:44:24,679
value that I plug in for x this part x greater
than 0 greater than equal to 0 will be true

378
00:44:24,679 --> 00:44:38,500
essentially. You can do things like this for
all x x greater than y.

379
00:44:38,500 --> 00:44:43,409
And then we can say that in this assignment
a y is equal to something. That is a little

380
00:44:43,409 --> 00:44:45,588
bit
complicated we do not want to get into there

381
00:44:45,588 --> 00:44:52,958
and that is not the sort of thing we normally
do so let us not try and do that even essentially.

382
00:44:52,958 --> 00:45:00,799
But the cuts of the matter are that a
sentence quantified by for all x would be

383
00:45:00,800 --> 00:45:05,670
true. If you plug in any value for x and the
sentences becomes true and you remove the

384
00:45:05,670 --> 00:45:10,369
quantify. Likewise something like their

385
00:45:10,369 --> 00:45:22,568
.existence x such that even x 
is a sentences which would be true. If we

386
00:45:22,568 --> 00:45:26,838
can find some
assignments which means some value of x which

387
00:45:26,838 --> 00:45:32,400
make this second part true. So I can say
even 4 for example, because even 4 is true

388
00:45:32,400 --> 00:45:36,829
I can say there and x even number is true
essentially. This is a sentence which will

389
00:45:36,829 --> 00:45:42,169
have not decide define what is the sentence?

390
00:45:42,168 --> 00:45:43,168
.

391
00:45:43,168 --> 00:45:51,129
But to define a sentence first we have to
characterize variables in to 2 kinds variable

392
00:45:51,130 --> 00:46:06,059
x
can be either bound or free. So, a variable

393
00:46:06,059 --> 00:46:13,680
is set to be bound if it is quantified essentially.
So, if I say for example, for all x p x y

394
00:46:13,679 --> 00:46:19,779
were p is some p is some predicate and x and
y

395
00:46:19,780 --> 00:46:30,830
are variables I can say that x is bound, but
y is 3 essentially. So, if variable has a

396
00:46:30,829 --> 00:46:34,750
quantify
then it is bound and if a variable does not

397
00:46:34,750 --> 00:46:39,009
have a quantify then it is free. So, if I
say

398
00:46:39,009 --> 00:47:03,190
something like this for all x p x y or exists
y q x y something like this. Then you can

399
00:47:03,190 --> 00:47:10,679
see
that this is bound this is 3; this is bound

400
00:47:10,679 --> 00:47:16,879
and this is also bound why? This occurrence
of y

401
00:47:16,880 --> 00:47:21,380
bound, because it comes it in the scope of
quantifies which is defined by the bracket

402
00:47:21,380 --> 00:47:26,180
around here. And this occurrence of y goes
not have a quantify so this occurrence y is

403
00:47:26,179 --> 00:47:30,208
3,
but x is quantified by x in likewise that

404
00:47:30,208 --> 00:47:31,938
x is quantified by this end, because they
come

405
00:47:31,938 --> 00:47:58,159
within the larger brackets. So, a sentence
is a formula with no free variables this is

406
00:47:58,159 --> 00:48:00,058
definition of a sentence.

407
00:48:00,059 --> 00:48:05,199
So, it must first be a formula well form formula
to all those definitions that we have

408
00:48:05,199 --> 00:48:11,188
.defining this formula set formula is set
of atomic formula and so on it must be a well

409
00:48:11,188 --> 00:48:19,328
form formula. So, notice that this is also
well form formula, but it is not a sentence

410
00:48:19,329 --> 00:48:25,079
because it is got a free variable inside essentially.
So, a sentence is the well form formula

411
00:48:25,079 --> 00:48:30,548
which we are calling as formulas without any
free variables and the intuition behind this

412
00:48:30,548 --> 00:48:34,088
is that. Because every variable bound which
means every variables assignment is

413
00:48:34,088 --> 00:48:43,538
controlled by some quantifier we can talk
about the truth value of that variable

414
00:48:43,539 --> 00:48:54,039
essentially. So, this for example, we can
map to true or false so all of you will agree

415
00:48:54,039 --> 00:48:57,969
that
this is true this is true. But if I said something

416
00:48:57,969 --> 00:49:06,990
like for all x even x it is a sentence it
has

417
00:49:06,989 --> 00:49:12,868
got only one variable and it is something
which is not true.

418
00:49:12,869 --> 00:49:19,400
So, I can say that this is not fall this is
not true, because the definition of the truth

419
00:49:19,400 --> 00:49:21,650
value
according to this definition it says that

420
00:49:21,650 --> 00:49:24,338
for I plug in any value of for x and then
even x

421
00:49:24,338 --> 00:49:28,900
must be true. Now, if i plug in 3 for example,
when even 3 is not true so there for the

422
00:49:28,900 --> 00:49:40,019
sentence not true. So, if I say something
like this for all x; x greater than y now

423
00:49:40,018 --> 00:49:47,389
this is not
a sentence. Because it has got a 3 variable

424
00:49:47,389 --> 00:49:52,379
which is y and you can see that we cannot
say

425
00:49:52,380 --> 00:49:56,420
whether this sentence is true or false. Because
why could be anything essentially, but if

426
00:49:56,420 --> 00:50:00,930
I
said something like this there exist y such

427
00:50:00,929 --> 00:50:07,868
that for all x x is greater than y then I
can say

428
00:50:07,869 --> 00:50:12,420
whether the sentence true or not will that.
Of course depends on the domine and the

429
00:50:12,420 --> 00:50:22,460
interpretation function that we are talking
about so a sentence something to which we

430
00:50:22,460 --> 00:50:33,539
can assign a truth value sentences are like
this which can be map to truth values. A valid

431
00:50:33,539 --> 00:50:53,159
sentence is true under all interpretation

432
00:50:53,159 --> 00:50:58,909
you can choose any domine and any mapping
for

433
00:50:58,909 --> 00:51:02,618
the predicates symbols and function symbols
and the sentence will be true.

434
00:51:02,619 --> 00:51:11,369
So, we can see sentence like x equal to x
or P of x implies p of x will always be true

435
00:51:11,369 --> 00:51:24,838
irrespective of what domains be true. Satisfiable
instead of all we say some and

436
00:51:24,838 --> 00:51:45,528
unsatisfiable 
instead of some are say none. So, with this

437
00:51:45,528 --> 00:51:49,630
have a basic machinery for
working with first order logic we have define

438
00:51:49,630 --> 00:51:55,849
the language start it off by a alphabet then
the set of terms then the set of atomic formulas

439
00:51:55,849 --> 00:52:00,068
and then the set of formulence. And the
finally, the set sentences and we defined

440
00:52:00,068 --> 00:52:03,558
how to assign truth value to each of them.
And

441
00:52:03,559 --> 00:52:11,528
we can now talk about this whether the sentences
valid or satisfiable or unsatisfiable. We

442
00:52:11,528 --> 00:52:22,759
will upon this part, little bit in the next
class when you meet will stop here.

443
00:52:22,759 --> 00:52:32,759
.

