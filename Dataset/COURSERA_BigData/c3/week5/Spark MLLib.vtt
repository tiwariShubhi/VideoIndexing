WEBVTT

1
00:00:01.580 --> 00:00:04.435
Now, we will introduce you to Spark MLlib.

2
00:00:06.080 --> 00:00:11.020
After this video, you will be
able to describe what MLlib is,

3
00:00:11.020 --> 00:00:15.865
list the main categories of
techniques available in MLlib,

4
00:00:15.865 --> 00:00:20.530
and explain code segments
containing MLlib algorithms.

5
00:00:20.530 --> 00:00:26.750
MLlib is a scalable machine learning
library that runs on top of Spark Core.

6
00:00:26.750 --> 00:00:31.370
It provides distributed implementations
of commonly used machine learning

7
00:00:31.370 --> 00:00:32.750
algorithms and utilities.

8
00:00:34.070 --> 00:00:40.260
As with Spark Core, MLlib has APIs for
Scala, Java, Python, and R.

9
00:00:42.520 --> 00:00:45.120
MLlib offers many algorithms and

10
00:00:45.120 --> 00:00:48.170
techniques commonly used in
a machine learning process.

11
00:00:49.170 --> 00:00:51.710
The main categories are machine learning,

12
00:00:51.710 --> 00:00:55.860
statistics and some common utility
tools for common techniques.

13
00:00:57.120 --> 00:00:58.970
As the name suggests,

14
00:00:58.970 --> 00:01:02.380
many machine learning algorithms
are available in MLlib.

15
00:01:03.760 --> 00:01:08.440
These are algorithms to build models for
classification, regression, and

16
00:01:08.440 --> 00:01:08.990
clustering.

17
00:01:10.140 --> 00:01:14.110
There are also techniques for
evaluating the resulting models.

18
00:01:14.110 --> 00:01:17.740
For example,
you can compute the values for

19
00:01:17.740 --> 00:01:22.560
a receiver of creating characteristic
that we call an ROC curve.

20
00:01:22.560 --> 00:01:25.350
A common statistical technique for

21
00:01:25.350 --> 00:01:28.550
plotting the performance
of a binary classifier.

22
00:01:30.180 --> 00:01:34.040
Statistical functions
are also provided in MLlib.

23
00:01:34.040 --> 00:01:38.655
Examples are summary statistics,
means, standard deviation, etc.

24
00:01:39.850 --> 00:01:43.440
Correlations and
methods to sample a dataset.

25
00:01:45.420 --> 00:01:50.360
MLlib also has techniques commonly
used in the machine learning process,

26
00:01:50.360 --> 00:01:53.040
such as dimensionality reduction and

27
00:01:53.040 --> 00:01:56.630
feature transformation methods for
preprocessing the data.

28
00:01:57.690 --> 00:02:01.550
In short, Spark MLlib offers

29
00:02:01.550 --> 00:02:05.220
many techniques often used in
a machine learning pipeline.

30
00:02:07.280 --> 00:02:13.410
Let's take a look at an example to
compute summary statistics using MLlib.

31
00:02:13.410 --> 00:02:17.920
Note that we will use the spark pipe
of API similar to the ones used for

32
00:02:17.920 --> 00:02:19.520
our other examples in this course.

33
00:02:20.980 --> 00:02:25.220
Here is the code segment to
compute summary statistics for

34
00:02:25.220 --> 00:02:29.180
a data set consisting
of columns of numbers.

35
00:02:29.180 --> 00:02:33.370
Lines of code are in white, and
the comments are in orange.

36
00:02:33.370 --> 00:02:38.759
The first line imports statistics
functions from the stat module.

37
00:02:38.759 --> 00:02:44.710
The second line creates an RDD
of Vectors with the data.

38
00:02:44.710 --> 00:02:48.500
You can think of each vector
as a column in a data matrix.

39
00:02:49.800 --> 00:02:53.670
The next line denoted with three invokes

40
00:02:53.670 --> 00:02:58.210
the column stats function to compute
summary statistics for each column.

41
00:02:59.240 --> 00:03:04.820
The last three lines show
by four print out the mean,

42
00:03:04.820 --> 00:03:08.480
variance and number of non-zero
entries for each column.

43
00:03:10.070 --> 00:03:14.640
As you can see from this example,
computing the summary statistics for

44
00:03:14.640 --> 00:03:17.700
a data set is very
straightforward using a MLlib.

45
00:03:20.410 --> 00:03:22.490
Here is another example.

46
00:03:22.490 --> 00:03:26.600
Although we will go through the ratio
learning details in our next course,

47
00:03:26.600 --> 00:03:30.260
here we give you a hint of how to
use two ratio learning techniques.

48
00:03:30.260 --> 00:03:32.920
One for Classification,
and one for Clustering.

49
00:03:34.270 --> 00:03:40.130
This code segment, shows the six steps to
build a DecisionTree for classification.

50
00:03:40.130 --> 00:03:43.138
The first line imports
the DecisionTree module,

51
00:03:43.138 --> 00:03:46.510
the second line imports MLUtils module,

52
00:03:48.190 --> 00:03:53.600
the next line fails the DecisionTree
to classify the data for two classes.

53
00:03:53.600 --> 00:03:58.570
Then, the model is printed out and
finally the model is saved in a file.

54
00:04:01.580 --> 00:04:05.490
Here is another MLlib example,
this time for clustering.

55
00:04:05.490 --> 00:04:10.480
This code segment shows the 5-step
code to build a k-means clustering.

56
00:04:12.420 --> 00:04:17.520
The first line imports the k-means module,
the second line

57
00:04:17.520 --> 00:04:22.040
imports an array module from numpy,

58
00:04:22.040 --> 00:04:27.048
the next two lines read in the data and
parses it using space as the limiter,

59
00:04:27.048 --> 00:04:31.100
then the k-means model

60
00:04:31.100 --> 00:04:36.270
is built by dividing the parsedData
into three clusters.

61
00:04:36.270 --> 00:04:39.923
Finally, the cluster centers
are printed out for each.

62
00:04:43.259 --> 00:04:47.790
In summary,
MLlib is Spark's machine learning library.

63
00:04:49.240 --> 00:04:50.710
It provides algorithms and

64
00:04:50.710 --> 00:04:53.880
techniques that are implemented
using distributors processing.

65
00:04:54.970 --> 00:04:57.327
The main categories of algorithms and

66
00:04:57.327 --> 00:05:01.968
techniques available in machine
learning library are machine learning,

67
00:05:01.968 --> 00:05:06.324
statistics and utility functions for
the machine learning process.