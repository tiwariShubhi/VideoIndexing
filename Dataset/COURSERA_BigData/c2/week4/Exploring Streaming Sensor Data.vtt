WEBVTT

1
00:00:00.870 --> 00:00:03.200
This is the second hands on exercise for
sensor data.

2
00:00:03.200 --> 00:00:06.220
In the first we looked at
static data in a text file.

3
00:00:06.220 --> 00:00:10.410
In this one we'll be looking at
real-time streaming measurements.

4
00:00:10.410 --> 00:00:12.675
First, we will open a terminal window, and

5
00:00:12.675 --> 00:00:15.770
cd into the directory containing
the data and the scripts.

6
00:00:15.770 --> 00:00:18.110
Next we'll connect to
the weather station and

7
00:00:18.110 --> 00:00:20.990
look at the real-time
data as it streams in.

8
00:00:20.990 --> 00:00:25.280
After that, we will look at the key to
remind ourselves what the fields mean.

9
00:00:25.280 --> 00:00:28.140
And finally, we will plot the data
streaming from the weather station.

10
00:00:29.400 --> 00:00:30.490
Let's begin.

11
00:00:30.490 --> 00:00:33.830
First, open a terminal window,
by clicking on the terminal icon.

12
00:00:33.830 --> 00:00:34.861
Top of the toolbar.

13
00:00:36.498 --> 00:00:42.919
[NOISE] Let's run cd
Downloads/big-data-2/sensor.

14
00:00:51.421 --> 00:00:54.021
You can run ls to see
the name of the scripts.

15
00:00:57.772 --> 00:01:02.114
Let's run stream-data.py
to see the real-time data.

16
00:01:10.240 --> 00:01:15.860
This shows us the real-time measurements
coming from the weather station.

17
00:01:15.860 --> 00:01:17.738
By looking at the time stamps,

18
00:01:17.738 --> 00:01:22.733
we can see that each measurement arrives
about one second after the previous one.

19
00:01:25.078 --> 00:01:28.439
Additionally, we can see
that R1 comes fairly often,

20
00:01:28.439 --> 00:01:32.172
whereas other measurements,
such as R2, are not as often.

21
00:01:37.361 --> 00:01:38.880
We can open another terminal and

22
00:01:38.880 --> 00:01:42.040
look at the key to remind ourselves
what these measurements mean.

23
00:01:53.639 --> 00:01:58.875
The key is in wxt-520-format.txt.

24
00:01:58.875 --> 00:02:03.693
We could run more
wxt-520-format.txt to view it.

25
00:02:14.792 --> 00:02:19.535
If we go back to our live data,
we can see that the 19th

26
00:02:19.535 --> 00:02:24.500
measurement here says Ta
was 22.5 degrees Celsius.

27
00:02:25.930 --> 00:02:30.116
And look up here,
see that Ta is the air temperature.

28
00:02:30.116 --> 00:02:34.737
The next measure we can see
that Dn was equal to 255D.

29
00:02:34.737 --> 00:02:39.340
According to our key,
Dn is the wind direction minimum, and

30
00:02:39.340 --> 00:02:41.157
the units are degrees.

31
00:02:46.417 --> 00:02:51.316
We can also plot specific measurements
streaming live from the weather station.

32
00:02:54.056 --> 00:02:55.740
Let's plot the wind speed average.

33
00:02:57.300 --> 00:03:02.819
If we look at our key,
we see that the wind speed average is Sm.

34
00:03:02.819 --> 00:03:08.554
So we can plot this by running
stream-plot-data.py sm.

35
00:03:20.501 --> 00:03:23.659
This plots the data as the weather
station sends it to us.

36
00:03:27.501 --> 00:03:28.843
If we look at the x-axis,

37
00:03:28.843 --> 00:03:31.960
we can see that one measurement
comes in about every second.

38
00:03:43.199 --> 00:03:46.620
We can plot other measurements by
choosing different fields from the key.

39
00:03:47.650 --> 00:03:56.350
For example, we can plot the air pressure
by running stream-plot-data.py Pa.

40
00:03:56.350 --> 00:03:58.289
Since Pa is the air pressure.

41
00:04:14.810 --> 00:04:18.720
First thing we notice is that there's
only one measurement so far in the graph.

42
00:04:20.950 --> 00:04:23.710
This means that the air pressure
measurements are not coming as

43
00:04:23.710 --> 00:04:25.840
fast as the wind measurements.

44
00:04:25.840 --> 00:04:27.127
In fact, we only got one.