WEBVTT

1
00:00:01.190 --> 00:00:06.640
So before we go into graph analytics,
the first question we want to ask is,

2
00:00:06.640 --> 00:00:07.168
what is a graph?

3
00:00:07.168 --> 00:00:10.332
Let's see.

4
00:00:10.332 --> 00:00:15.360
This is a plot of the sales of
some items against time and

5
00:00:15.360 --> 00:00:20.190
it gives you a nice visual representation
of the data, but is it a graph?

6
00:00:21.470 --> 00:00:23.760
While you think about it,
let's try another one.

7
00:00:25.790 --> 00:00:29.170
This is another common visual
representation of data.

8
00:00:29.170 --> 00:00:31.450
If you go to Google and type pie graph,

9
00:00:31.450 --> 00:00:34.750
you will see many results
that look like this.

10
00:00:34.750 --> 00:00:35.580
But is this a graph?

11
00:00:36.750 --> 00:00:38.950
In our research, this is not a graph.

12
00:00:40.260 --> 00:00:41.700
We call it a chart.

13
00:00:43.420 --> 00:00:46.190
Yes, you guessed it right this time.

14
00:00:46.190 --> 00:00:48.070
This too is a chart, and not a graph.

15
00:00:49.760 --> 00:00:52.460
So why do people call them graphs, then?

16
00:00:53.630 --> 00:00:56.460
In a sense, they're abbreviating.

17
00:00:56.460 --> 00:00:59.519
A chart depicts what's called
a graph of a function.

18
00:01:00.580 --> 00:01:01.150
Let me explain.

19
00:01:02.300 --> 00:01:03.970
Look at the two column table on the right.

20
00:01:05.000 --> 00:01:08.170
The first column has information
about product category

21
00:01:08.170 --> 00:01:10.940
with values like furniture,
office supplies, and technology.

22
00:01:12.120 --> 00:01:17.170
The second column represents another set
of values called total containing 1724,

23
00:01:17.170 --> 00:01:21.570
4610, and 2065.

24
00:01:21.570 --> 00:01:25.320
Now we can define our mapping option.

25
00:01:25.320 --> 00:01:29.180
Which means a correspondence
from Product Category to Total.

26
00:01:30.190 --> 00:01:34.070
So we map Furniture to the value 1,724,

27
00:01:34.070 --> 00:01:37.440
Office Supplies to the value 4,610,
and so forth.

28
00:01:37.440 --> 00:01:39.480
If we visually portray this,

29
00:01:39.480 --> 00:01:42.820
we can represent it like a bar chart or
a pie chart.

30
00:01:42.820 --> 00:01:47.560
This is why both the previous diagram and
this diagram are charts and not graphs.

31
00:01:50.190 --> 00:01:54.990
Graph analytics has its basis in a brand
of mathematics called graph theory.

32
00:01:54.990 --> 00:01:55.830
What's more interesting,

33
00:01:55.830 --> 00:02:00.640
however, is that graph theory was
born out of a very practical problem.

34
00:02:02.040 --> 00:02:06.900
The problem started in a very old city
in Prussia which is now in Russia

35
00:02:07.960 --> 00:02:08.995
called Konigsberg.

36
00:02:10.890 --> 00:02:15.528
Even if we look at in in Google Maps
it would sort of look like this.

37
00:02:15.528 --> 00:02:20.135
One of the interesting features of
Konigsberg is that it has two islands and

38
00:02:20.135 --> 00:02:23.074
these islands are connected
by seven bridges.

39
00:02:23.074 --> 00:02:29.624
Back in 1736, the city wanted to create
a walkway, and the criteria was,

40
00:02:29.624 --> 00:02:35.083
this walkway would traverse all
seven bridges such that somebody

41
00:02:35.083 --> 00:02:41.556
wanting to go from one part of the city
to another can cross a bridge only once.

42
00:02:41.556 --> 00:02:46.120
Now this is sort of an urban
planning problem right?

43
00:02:46.120 --> 00:02:49.520
Well in fact, it required
a mathematician to solve the problem.

44
00:02:50.850 --> 00:02:54.440
The mathematician named Euler shown
on the left looked at this and

45
00:02:54.440 --> 00:02:58.260
figured out that you really
cannot create such a walk.

46
00:02:58.260 --> 00:02:59.510
Why?

47
00:02:59.510 --> 00:03:03.030
He said, it cannot be done, because
there are an odd number of bridges, and

48
00:03:03.030 --> 00:03:04.870
proved it mathematically.

49
00:03:04.870 --> 00:03:08.120
From this problem, the whole field
called graph theory emerged.

50
00:03:09.670 --> 00:03:14.600
On the right, you can see Edsger Dijkstra,
a well-known computer scientist who has

51
00:03:14.600 --> 00:03:19.330
developed graph algorithms, one of which
we will study later in the course.

52
00:03:19.330 --> 00:03:24.120
His work has had far further impact on
both the theoretical computer science and

53
00:03:24.120 --> 00:03:25.040
practical applications.

54
00:03:26.760 --> 00:03:29.130
What's the difference between
the mathematics view and

55
00:03:29.130 --> 00:03:30.140
the computer science view?

56
00:03:31.190 --> 00:03:33.170
Let's try to define
the mathematical view of graphs.

57
00:03:34.490 --> 00:03:36.970
We start with a set of vertices.

58
00:03:36.970 --> 00:03:41.595
Here we have a set of six nodes or
vertices.

59
00:03:41.595 --> 00:03:44.060
Now, I'll add another set.

60
00:03:44.060 --> 00:03:45.810
I'll call this the set of edges.

61
00:03:47.020 --> 00:03:49.720
In our diagram there are only four edges,
but

62
00:03:49.720 --> 00:03:51.560
there's something special
about these edges.

63
00:03:52.990 --> 00:03:57.720
Each edge is just not
an ordinary atomic object.

64
00:03:57.720 --> 00:04:03.390
An edge like e1, actually, is one term
from v and then a second term from v.

65
00:04:04.510 --> 00:04:08.260
So this edge, e1, goes from v1 to v5.

66
00:04:09.650 --> 00:04:12.230
Pictorially, we can draw and
arrow from v1 to v5.

67
00:04:13.800 --> 00:04:17.270
Now if I had said v5 to v1,
the arrow would be reversed.

68
00:04:18.370 --> 00:04:19.870
So what do we have so far?

69
00:04:19.870 --> 00:04:23.070
We have a set of vertices and
a set of edges.

70
00:04:23.070 --> 00:04:25.550
That is the mathematical
definition of a graph.

71
00:04:27.900 --> 00:04:30.050
What about the computer
scientist's definition?

72
00:04:31.410 --> 00:04:35.760
Of course a computer scientist needs to
adhere to the mathematical definition, but

73
00:04:35.760 --> 00:04:39.120
they want to represent and
manipulate the same information.

74
00:04:39.120 --> 00:04:41.380
So they need a data structure.

75
00:04:41.380 --> 00:04:44.220
In other words,
something they can operate on.

76
00:04:44.220 --> 00:04:45.720
So what kind of operations would they do?

77
00:04:46.808 --> 00:04:47.650
Well, with a graph,

78
00:04:47.650 --> 00:04:52.340
they can say add edge, or add a new
vertex, find the nearest neighbors of

79
00:04:52.340 --> 00:04:56.100
the vertex where the term neighbor refers
to the nodes connected to the vertex.

80
00:04:58.320 --> 00:05:02.590
We said a computer scientist needs to
represent graphs using data structures.

81
00:05:02.590 --> 00:05:04.400
Here is one that you should recognize.

82
00:05:04.400 --> 00:05:07.360
It's a matrix,
called the adjacency matrix of a graph.

83
00:05:08.390 --> 00:05:11.560
Both the rows and
columns of this matrix represent notes.

84
00:05:13.080 --> 00:05:18.718
If I go from v1 one along the row,
I see that there's one at v3,

85
00:05:18.718 --> 00:05:22.597
which means there is
an edge from v1 to v3.

86
00:05:22.597 --> 00:05:27.543
Similarly there is another from v1 to v5.

87
00:05:27.543 --> 00:05:29.563
Let's look at some operation.

88
00:05:29.563 --> 00:05:33.580
Let's say I first want to
add an edge from v3 to v2.

89
00:05:33.580 --> 00:05:35.298
What should I do?

90
00:05:35.298 --> 00:05:38.831
I'll start from the row v3,

91
00:05:38.831 --> 00:05:44.493
go up to the column v2,
and add a 1 in that set.

92
00:05:44.493 --> 00:05:48.030
So I've added an edge,
which is an operation on the matrix.

93
00:05:49.890 --> 00:05:50.700
Another operation.

94
00:05:52.020 --> 00:05:53.540
I want to get the neighbors a v3.

95
00:05:54.600 --> 00:05:56.180
This will be a little more complicated.

96
00:05:58.020 --> 00:06:01.090
I look at the row v3 and
paint that row and

97
00:06:01.090 --> 00:06:03.930
I'll also look at the column v3 and
paint that column.

98
00:06:05.370 --> 00:06:11.430
If we go down the row of v3,
we'll get v2, so v2 is neighbor.

99
00:06:11.430 --> 00:06:16.150
And if we go down the column of v3,
we'll get v1 and v6.

100
00:06:17.420 --> 00:06:20.930
So v1 and v6 have alternators.

101
00:06:20.930 --> 00:06:21.540
What's the difference?

102
00:06:24.250 --> 00:06:30.070
Since the matrix has the From along
the rows and the Tos along the columns,

103
00:06:30.070 --> 00:06:33.950
following the row v3 gives us
the edges outgoing from v3.

104
00:06:34.960 --> 00:06:38.910
And following the column v3 gives
us the edges coming into v3.

105
00:06:41.590 --> 00:06:44.340
Is this the only
representation of the graph?

106
00:06:44.340 --> 00:06:45.830
No it's not.

107
00:06:45.830 --> 00:06:46.390
Here is another one,

108
00:06:47.490 --> 00:06:51.300
in this representation there
are two kinds of data objects.

109
00:06:51.300 --> 00:06:55.800
No data, which are the blue rectangles and
edge data which are the triangles.

110
00:06:57.080 --> 00:07:01.000
To get a sense of this representation,
look at the note v1 and

111
00:07:01.000 --> 00:07:03.490
follow the top yellow line.

112
00:07:03.490 --> 00:07:05.490
It'll reach v3.

113
00:07:05.490 --> 00:07:10.330
So this link structure directly captures
the graph diagram we created before.

114
00:07:10.330 --> 00:07:15.150
Now, start from v1 again and
follow the blue link and

115
00:07:15.150 --> 00:07:18.450
it will reach e1 and then v3.

116
00:07:18.450 --> 00:07:22.630
So that tells you that e1 is
an edge object between v1 and v3.

117
00:07:24.530 --> 00:07:30.020
Next, let's stand on the edge triangle e1,
and follow the red

118
00:07:30.020 --> 00:07:35.450
dashed line to get to e2, which is
the next edge from the same starting node.

119
00:07:36.570 --> 00:07:38.790
Is this possibly too complex?

120
00:07:38.790 --> 00:07:40.200
Yes it is.

121
00:07:40.200 --> 00:07:45.390
However, as we'll see down the road, many
graph database systems are using this kind

122
00:07:45.390 --> 00:07:50.050
of data structure internally, so that the
database operations become more efficient.