WEBVTT

1
00:00:00.530 --> 00:00:04.710
So now let's bring back the constraints
that we have ignored so far.

2
00:00:05.820 --> 00:00:10.230
There are two constraints here,
parts of the graph to include and

3
00:00:10.230 --> 00:00:12.280
parts of the graph to exclude.

4
00:00:12.280 --> 00:00:16.840
In this example we have to go to B, but

5
00:00:16.840 --> 00:00:21.020
we should go to J first, and
then travel from B to J.

6
00:00:22.380 --> 00:00:25.850
Also, we cannot use any
of the paths through E.

7
00:00:26.960 --> 00:00:28.650
This really means two things.

8
00:00:29.930 --> 00:00:35.610
First, we split the problem into two
independent shortest path problems

9
00:00:35.610 --> 00:00:38.670
that we can solve in parallel if needed.

10
00:00:38.670 --> 00:00:43.440
Second, when we go from J
to B We need to extract

11
00:00:44.630 --> 00:00:48.240
the useful subgraph that
we need to consider.

12
00:00:48.240 --> 00:00:51.960
For a large network and
a complex exclusion condition,

13
00:00:53.010 --> 00:00:56.160
we will essentially operate
over a smaller graph,

14
00:00:56.160 --> 00:00:58.640
thereby reducing the effective
size of the problem.

15
00:01:00.130 --> 00:01:04.770
As we'll see in module three,
this kind of subgraph extraction operation

16
00:01:04.770 --> 00:01:09.460
can be done effectively and
efficiently with a graph database system.

17
00:01:09.460 --> 00:01:12.738
This concludes our short
tour of path analytics.