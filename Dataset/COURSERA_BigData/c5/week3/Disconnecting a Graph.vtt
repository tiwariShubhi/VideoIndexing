WEBVTT

1
00:00:00.840 --> 00:00:02.630
So there are two ways to break a graph.

2
00:00:04.320 --> 00:00:08.720
Identifying the smallest node set which
if removed will disconnect the graph.

3
00:00:10.000 --> 00:00:16.617
Here, if we remove F, D and

4
00:00:16.617 --> 00:00:21.140
H or H, F, G,
we have disconnected the graph.

5
00:00:22.220 --> 00:00:27.640
So the separating set is either H,
F and G, or H, F and D.

6
00:00:28.870 --> 00:00:30.475
So the connectivity is three.

7
00:00:30.475 --> 00:00:36.726
Similarly, removing C-F, D-G, D-F and

8
00:00:36.726 --> 00:00:43.590
H-E edges will also disconnect the graph.

9
00:00:43.590 --> 00:00:45.730
Therefore, the edge connectivity is four.

10
00:00:46.800 --> 00:00:49.900
So this is how network
robustness is defined.

11
00:00:50.950 --> 00:00:53.790
Now, let's ask, is this network robust?

12
00:00:54.790 --> 00:00:58.530
Suppose the attacker removed node F.

13
00:00:58.530 --> 00:00:59.220
Why remove F?

14
00:01:00.410 --> 00:01:04.430
Because F is the most connected node.

15
00:01:04.430 --> 00:01:06.620
That is, F has the highest degree.

16
00:01:07.780 --> 00:01:11.220
If we remove F, five paths are disrupted.

17
00:01:11.220 --> 00:01:15.550
For example,
there is no way to go from C to G, or

18
00:01:15.550 --> 00:01:19.190
from I to E,
because these paths went through F.

19
00:01:20.340 --> 00:01:21.270
Let's try this exercise.

20
00:01:22.350 --> 00:01:25.800
Suppose the attacker
has already removed F.

21
00:01:25.800 --> 00:01:29.610
And would like to cause more
damage to the rest of the network.

22
00:01:29.610 --> 00:01:31.340
Which node should be targeted next?

23
00:01:32.490 --> 00:01:37.330
The answer is C,
because C is the next most connected node.

24
00:01:38.600 --> 00:01:42.637
Higher degree nodes make
the network more vulnerable.