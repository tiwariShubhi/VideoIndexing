WEBVTT

1
00:00:01.340 --> 00:00:04.970
Let's go through an overview of the tools
we will be using in this course.

2
00:00:06.210 --> 00:00:10.890
After this video you will be
able to describe what KNIME is.

3
00:00:10.890 --> 00:00:16.450
Describe what Spark MLlib is, and contrast
KNIME and MLlib as machine learning tools.

4
00:00:18.240 --> 00:00:21.940
The machine learning tools that we will
be using in this course are KNIME and

5
00:00:21.940 --> 00:00:23.410
Spark MLlib.

6
00:00:23.410 --> 00:00:25.870
These are both open source tools.

7
00:00:25.870 --> 00:00:28.936
This lecture will introduce
these tools to you.

8
00:00:28.936 --> 00:00:31.780
You will need to use them for
the hands on activities in this course.

9
00:00:33.880 --> 00:00:39.390
KNIME Analytics is a platform for data
analytics, reporting, and visualization.

10
00:00:39.390 --> 00:00:44.650
The KNIME platform uses a graphical user
interface based approach with drag and

11
00:00:44.650 --> 00:00:48.890
drop features to facilitate
constructing an analytic solution.

12
00:00:48.890 --> 00:00:51.630
The basic components in KNIME
are referred to as nodes.

13
00:00:52.690 --> 00:00:55.770
Each node provides
a specific functionalities,

14
00:00:55.770 --> 00:00:57.880
such as reading in a file,

15
00:00:57.880 --> 00:01:01.900
creating a specific type of machine
running model and generating a plot.

16
00:01:03.080 --> 00:01:06.790
Nodes can be connected to create
machine running workflows or pipelines.

17
00:01:08.130 --> 00:01:11.510
KNIME stands for
Konstanz Information Miner.

18
00:01:11.510 --> 00:01:15.610
The Konstanz is for
the University of Konstanz in Germany.

19
00:01:15.610 --> 00:01:18.885
And note that the K in KNIME is
silent in the pronunciation.

20
00:01:21.187 --> 00:01:24.875
In KNIME you assemble the steps that
need to be performed in a machine

21
00:01:24.875 --> 00:01:28.190
learning process by connecting
nodes to create a workflow.

22
00:01:29.200 --> 00:01:33.070
To create a workflow the user
chooses the appropriate nodes

23
00:01:33.070 --> 00:01:37.750
from the node repository and
assembles them into a workflow.

24
00:01:37.750 --> 00:01:41.039
The workflow can then be
executed in the KNIME work bench.

25
00:01:43.200 --> 00:01:47.340
A node implements a specific
operation in a workflow.

26
00:01:47.340 --> 00:01:49.880
In this screenshot we see two nodes.

27
00:01:49.880 --> 00:01:53.380
The file reader node is used to
read data from a text file or

28
00:01:53.380 --> 00:01:55.820
a URL or a web address.

29
00:01:55.820 --> 00:01:59.370
The decision tree learner node
builds a decision tree model.

30
00:02:00.470 --> 00:02:06.226
Each node can have input and output ports
and can be connected to other nodes.

31
00:02:06.226 --> 00:02:09.535
When a node is executed,
it takes data from its input port,

32
00:02:09.535 --> 00:02:15.650
performs some operations on the data and
writes the results to the output port.

33
00:02:15.650 --> 00:02:18.950
Data is transferred between
nodes that are connected.

34
00:02:18.950 --> 00:02:23.130
A node can be configured by opening
up its configuration dialog.

35
00:02:23.130 --> 00:02:25.329
This is where the parameters for
the node can be set.

36
00:02:27.718 --> 00:02:31.878
The Node Repository is where you will find
all the nodes available in your KNIME

37
00:02:31.878 --> 00:02:33.730
installation.

38
00:02:33.730 --> 00:02:36.800
The nodes are organized by categories.

39
00:02:36.800 --> 00:02:41.260
KNIME provides an array of nodes to
perform operations for data access,

40
00:02:41.260 --> 00:02:45.610
data manipulation, analysis,
visualization, and reporting.

41
00:02:47.840 --> 00:02:52.691
As you can see, KNIME provides
a visual approach to machine learning.

42
00:02:52.691 --> 00:02:57.043
It's GUI-based, drag-and-drop approach
provides an easy way to create and

43
00:02:57.043 --> 00:02:59.160
execute a machine learning workflow.

44
00:03:00.320 --> 00:03:04.530
The open source version of KNIME however
is limited in how large of a dataset

45
00:03:04.530 --> 00:03:05.230
it can handle.

46
00:03:06.290 --> 00:03:10.100
There are commercial extensions to
KNIME to manage large datasets and

47
00:03:10.100 --> 00:03:14.390
offer other extra functionalities, but
these extensions are not open source.

48
00:03:16.150 --> 00:03:18.456
Now let's talk about Spark MLlib.

49
00:03:18.456 --> 00:03:21.407
You've worked with Spark before if
you took the third course in this

50
00:03:21.407 --> 00:03:22.710
specialization on big data.

51
00:03:23.980 --> 00:03:26.210
Spark is a distributed computing platform.

52
00:03:27.210 --> 00:03:30.900
MLlib is a scalable machine learning
library that runs on top of Spark.

53
00:03:32.070 --> 00:03:36.770
It provides distributed implementations of
commonly used machine learning algorithms

54
00:03:36.770 --> 00:03:37.469
and utilities.

55
00:03:38.470 --> 00:03:41.502
The ML and MLlib of course stands for
machine learning.

56
00:03:43.801 --> 00:03:49.120
To implement machine learning operations
in Spark MLlib, you need to write code.

57
00:03:49.120 --> 00:03:52.740
So MLlib is not a GUI-based approach.

58
00:03:52.740 --> 00:03:56.360
This segment of code reads and
parses data from a file,

59
00:03:56.360 --> 00:04:00.937
then builds a decision
tree classification model.

60
00:04:00.937 --> 00:04:05.480
MLlib, as with the base Spark core,
provides an application programming

61
00:04:05.480 --> 00:04:11.570
interface, or API, for
Java, Python, Scala and R.

62
00:04:11.570 --> 00:04:15.174
This means that you can write code in
these programming languages to execute

63
00:04:15.174 --> 00:04:17.098
the base operations provided in Spark.

64
00:04:19.082 --> 00:04:22.640
Spark MLlib runs on
a distributed platform.

65
00:04:22.640 --> 00:04:24.550
It provides machine
learning algorithms and

66
00:04:24.550 --> 00:04:28.560
techniques that are implemented
using distributed processing.

67
00:04:28.560 --> 00:04:32.470
So MLlib is used for processing and
analyzing large datasets.

68
00:04:33.500 --> 00:04:37.610
And as we have discussed, writing code is
required to implement operations in MLlib.

69
00:04:39.680 --> 00:04:44.576
In summary, KNIME is a GUI-based machine
learning tool, while Spark MLlib provides

70
00:04:44.576 --> 00:04:50.040
a programming-based scalable platform for
processing very large datasets.

71
00:04:50.040 --> 00:04:54.270
You will be using both Spark MLlib and
KNIME throughout this course.

72
00:04:54.270 --> 00:04:58.420
We have readings and hands-on exercises to
help you get familiar with these popular

73
00:04:58.420 --> 00:05:01.040
open source tools for machine learning.

74
00:05:01.040 --> 00:05:04.360
I think you will find it very informative
and fun to work with these tools.