welcome back today we're going to look

at question answering one of the oldest

applications in natural language

processing some of the first NLP tasks

built on punch card systems in the early

60s include the Simmons a tall system

from 1964 let's look at that

so that answered questions like what do

words eat by taking the question parsing

it into a dependency format so we have a

relationship between eat and worms and

eaten what and then looking for a

matching dependency sentence somewhere

in a large database of answers so they

had sentences like worms eat grass and

birds eat worms and horses with worms

eat grass and so on and the idea is that

this dependency tree let worms eat what

matched worms eat grass and even grass

is eaten by worms but not horses eat

grass or birds eat worms so the idea of

answering a question by finding a

sentence that looks like the question

but answers it them is an old intuition

that we're going to see underlies many

modern systems as well you may know that

last year IBM's Watson won the Jeopardy

challenge answering questions about for

example this Bram Stoker novel that was

inspired by William Wilkinson's book so

the novel of course was Dracula and the

author was Bram Stoker you may also know

about Apple Siri another

question-answering application so you

can ask questions like do I need an

umbrella tomorrow in San Francisco and

it will check the weather for you and

tell you which days it's going to rain

another question answering application

WolframAlpha you can ask questions like

how many calories are in two slices of

banana cream pie and not only will it

give the answer but it'll give you a

little variables that it lets you it'll

tell you the semantics of the answer so

we're looking for an amount of pie

that's two slices of banana cream type

and we're asking about the total

calories and there's the answer 702

calories

so these kind of questions are factoids

questions so questions like how many

calories are there in two slices of

apple pie or who wrote the universal

declaration of human rights or what is

the average age of the onset of autism

these kind of questions pretty simple

questions can be answered by a simple

fact often a named entity modern systems

also deal with complex or narrative

questions so in children with an acute

febrile illness what is the efficacy of

a cinnamon if an in reducing fever or

what a scholars think about Jefferson's

position on dealing with pirates so

these these complex questions are

generally answered more in research

systems where as factoids question

answering is a widely used commercial

application what are these kind of

factoid questions so they can be

questions about locations so the Louvre

being located in Paris France or what an

abbreviation means or the names of the

the Ravens of Odin and names of a

currency or an ingredient or an

instrument or a phone number so they're

all simple answers often with a with a

single phrase or named entity there are

two main paradigms for question

answering the IR based approach which

we'll spend a lot of time on today and

that's pioneered in the annual Trek

evaluations and used in commercial

systems like IBM's and Google's and the

IR based approaches go find the answer

in some string on the web the knowledge

based approach is build an answer from

understanding a parse of the question

and hybrid approaches take a combination

of these approaches so we might use some

online databases and we might use some

information retrieval approaches to find

sentences and build answers and most

modern systems I would say are some kind

of hybrid of knowledge and information

retrieval a few of them like perhaps

Wolfram Alpha are purely knowledge base

but most systems use a little bit of

both so simple web search actually

answers a lot of questions already and

that's really the intuition underlying

the

I are based approach to questions from

that we'll talk about the most so if I

asked into Google what are the names of

Odin's Ravens the first page I get has

the answer and in the snippet that

Google returns there's the answer so

it's in the title of this page and it

talks about the names of the Ravens

other kinds of simple questions like

where is the Louvre Museum located are

also answerable by methods like Google

and here in fact Google applies modern

question answering techniques to give

you the its best guess for the location

by pulling it out of semi-structured

resources like Wikipedia or answers.com

so let's see how this factoid question

answering algorithm works the general

algorithm for IR based factoids question

answering starts with a question and

begins by extracting information from

the question itself and the two most

important and common things to extract

from the question are a query that's

going to be sent to an IR engine and the

type of the answer that tells us what

kind of name entity we're looking for in

advance we take a whole lot of documents

we index them so that when we have a

query we can return a whole lot of

documents from those documents we

extract passages so parts of those

documents and then those passages are

then processed in answer processing

looking for the type of the answer that

we know we're looking for and then I'm

returning an actual answer so that's the

general process and we'll walk through

each of the pieces today so another way

of looking at the same set of processes

three big parts of the algorithm

question processing so we're detecting

the question type formulating the

queries passage of evil given these

queries retrieve documents break them

into pieces and then answer processing

extract answers from the tech snippets

and rank those candidates using evidence

from the text and from other kinds of

sources so by contrast the

knowledge-based approach which we'll

talk about less today builds of pure

semantic representation of the query in

the situation rule from Alfre where

they're going to come up with a semantic

representation language for questions

that they understand and

you might pick some sub-domain that

you're able to build a perfect semantic

representation for times dates locations

scientific questions mathematical

questions and from this semantics we can

then map to structured data bases or

structured resources geospatial

databases or ontology x' or restaurant

review system these things where we can

build a pure semantics of the approach

hybrid approaches and IBM Watson is a

good example this but lots of others do

this now build some shallow semantic

representation of the queries they do

some processing of the query use ir

methods to generate many candidate

answers but then use these more

knowledge-based approaches to use

spatial databases or temporal reasoning

to score the candidates so ir methods to

find possible candidates knowledge based

methods to score them so question

answering is both one of the oldest

topics in natural language processing

and also one of the newest and most

exciting research areas with commercial

potential
