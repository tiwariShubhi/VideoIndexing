edit distance can also be weighted why

would we add weights to the computation

of edit distance I think about

particular applications in spell

correction it's obvious that some

letters are more likely to be miss type

than others while in biology because of

the constraints of the subject matter

some kinds of deletions or insertions

are more likely than others so for

example in spelling here's a confusion

matrix for spelling errors so if you

look at this confusion matrix you can

see that E is very likely to be confused

with a or au and E so vowels tend to be

confused but it's very unlikely to

confuse a and B so A's are confused with

ease and eyes and O's and use and so on

so they're they're the kind of spelling

errors people make have systematicity to

them so not just confusing battles with

vowels but also the fact that the

keyboard means that you're likely to

make errors either using the homologous

finger on the other hand or using nearby

keystrokes so the constraints of the

domain in this case we're talking about

spelling or maybe we're talking by a

biology are going to make some edit to

some edits more likely than others so

we're gonna represent this by modifying

the algorithms slightly to add weights

so in Levenstein distance we have the

cost of 1 for insertion 1 for deletion

and 2 for substitution in weighted

minimum at a distance we simply add a

special cost that we look up each time

so initialization instead of just adding

one for each deletion we have the actual

cost of each deletion and we add up the

deletions of each of the symbols that we

delete and instead of having just one

for insertion we have a cost for each

insertion we add them all up and

similarly in the recurrence relation

we're going to add a special deletion

insertion and substitution cost how much

does it lead to and delete that

particular character insert that

particular character and then we'll end

up with the same termination condition

so we'll just add separate little

look-up tables that will tell us what

the deletion insertion and substitution

costs are for each symbol by the way

where did the name dynamic programming

come from

here's some quotes from Richard

Bellman's autobiography bellman was the

one who invented dynamic programming and

amusingly he tells us that he came up

with the name for diamond programming

really as a public relations move to

make an algorithm sound exciting

so this is the one maybe one of the

first algorithms that was that was named

in a branding way to make an algorithm

sound exciting so there's our in some

other algorithm for weighted minimum at

a distance
