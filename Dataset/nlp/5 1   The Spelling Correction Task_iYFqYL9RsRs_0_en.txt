today we're going to talk about spelling

correction lots of applications make use

of spelling correction for example word

processing almost anywhere modern word

processor will take a misspelled word

like component with an A and give you

suggestions like component with an E and

automatically replace it for you

modern search engines will not only flag

an error so language spelled without au

here but give you the results as if you

would spell the word correctly and

modern phones

additionally will automatically find

misspelled words here I typed he'll a

why R and it replaced it automatically

or suggest a replacement with late we

can distinguish a number of separate

tasks in spelling correction one is the

detection of the error itself and then

the correction of the error once you've

found it and we can think about

different kinds of correction we might

automatically correct an error if we're

positive that the error that we know the

right answer for the error so HTE is a

very common misspelling for the and so

many word processors automatically

correct HTE we might suggest a single

correction if we're the only one very

likely correction we might suggest a

whole list of corrections and let the

user pick from among them we distinguish

two different classes of spelling errors

non word errors are errors in which the

what the user types is not a word of

English so GRA FF e a misspelling let's

say for giraffe is not a word of English

by contrast real word errors our errors

in which the resulting misspelling is

actually a word of English and that

makes them somewhat harder to detect and

we can break up real word errors into

ones produced by really typographical

processes the user meant to type 3 and

type their let's say or cognitive errors

where the user

meant to type a word like peace and

instead typed a homophone of a

of the word or tol instead of T wo and

in both cases what's produced is a real

word of English but by modeling the

differences between these kind of errors

we might come up with better ways of

fixing them both how common are spelling

errors depends a lot on the task so in

web queries spelling errors are

extremely common so practically one in

four words in a web query are likely to

be misspelled in word processing tasks

or on phones it's much harder to get an

accurate number so there's been a number

of studies and most of these studies are

done by retyping you give the user a

passage to type and then you measure how

well they they type it and of course

that's not quite the same as user of

naturally writing messages or type in

nonetheless if you ask users to retype

and you don't let them use the backspace

key they make about 13% of the words 30%

of the words are in error

so indicating that if that a lot of

words they correct themselves with the

backspace if you let them correct now

we're turning to experiment on a on a

PDA style of thumb sized organizer

they'll correct about 7% of the words

themselves they'll still leave about 2%

of the words come corrected on organizer

and similar numbers on people doing

retyping on a regular keyboard so a

number of about 2% were people typing

and probably a much higher number for

web queries and probably a much higher

number for people texting are the kinds

of experimental spelling error rates

that we see how do we detect non word

spelling errors the traditional way is

just to use a large dictionary any word

not in the dictionary is an error and

and the larger the dictionary it turns

out the better this works

for correcting these non words spelling

errors we generate a set of candidates

that's real words that are similar to

the error and then we pick whichever one

is best and we'll talk about the noisy

channel probability model of how to do

that and it's also related to another

method called the shortest weighted

error distance method so we find words

that are not in the dictionary for each

one we generate a set of candidates and

those are going to be real words that

are similar and we'll talk

with similar means to that error and

then we'll pick the best one for real

word spelling errors the algorithm is

quite similar again for each word we

generated candidate set but now we do

this for every word in the sentence not

just the words that are not in some

dictionary so in real word spelling

error correction we don't use a

dictionary because of course the errors

are in a dictionary so that wouldn't

help so for every word we generate a

candidate set so we might find candidate

words with similar pronunciations we

might find cannot words with similar

spelling and depending on the algorithm

exactly and it's very important that

we're going to include the word itself

in the candidate set because the every

word might be a misspelling of some

other real word or might be the correct

word in fact most words are probably

correct

so for each candidate set of each

possible error we're going to include

the word itself and most of the time in

fact we're going to pick that and again

how we pick the words we might use the

noisy channel model we might use a

classifier we'll talk about that so

we'll discuss the different methods of

detecting these errors in correcting

them in the next section
