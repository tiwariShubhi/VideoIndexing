1
00:00:10,769 --> 00:00:31,929
So, today we want to look at propositional
logic. So, to keep things into prospective

2
00:00:31,929 --> 00:00:36,409
our
motivation for studying logic is to be able

3
00:00:36,409 --> 00:00:40,979
to make inferences. So, in general if he given
a

4
00:00:40,979 --> 00:00:50,939
set of facts and if he ask a statement about
which is not in this set some statement. And

5
00:00:50,939 --> 00:00:56,709
we are ask the question is this statement
true or not true then we should be able to

6
00:00:56,710 --> 00:00:59,539
answer
that question. And you want to build the mechanism

7
00:00:59,539 --> 00:01:06,500
or a machinery to do this
automatically or mechanically if not necessarily

8
00:01:06,500 --> 00:01:10,968
automatically. By mechanically we
mean by applying a set of rules which can

9
00:01:10,968 --> 00:01:17,649
be then by human as well. So, whenever we
talk about logic, we have first talk about

10
00:01:17,649 --> 00:01:27,778
the language part which like any formal
language is a set of sentences that belongs

11
00:01:27,778 --> 00:01:29,349
to this language. So, what is the language
of

12
00:01:29,349 --> 00:01:40,068
propositional logic? It has 2 components;
one is called the logical part and it essentially

13
00:01:40,069 --> 00:02:04,978
contains the alphabet of these operators or
operator symbols. So, you must keep in mind

14
00:02:04,978 --> 00:02:09,629
that we want to distinguish between the syntax
of the language and the semantics of the

15
00:02:09,629 --> 00:02:11,990
language and do you not do you.

16
00:02:11,990 --> 00:02:20,379
.So, a very pedantically in this lectures,
but we need to distinguish between the fact

17
00:02:20,379 --> 00:02:22,769
thus
the syntax part which says that these are

18
00:02:22,770 --> 00:02:25,670
some symbols that we use. But off course,
the

19
00:02:25,669 --> 00:02:31,089
meaning of this symbols calms from this semantics
and which as you are familiar with is

20
00:02:31,090 --> 00:02:36,590
given by the through tables at we can construct
for each of these operators. So, at one

21
00:02:36,590 --> 00:02:44,670
level other syntactic level we just treat
them as symbols but when we talk about the

22
00:02:44,669 --> 00:02:53,449
semantics of sentences. Then we will sort
of reverts to the idea which comes on the

23
00:02:53,449 --> 00:02:57,469
proof
table essentially. So, for the movement we

24
00:02:57,469 --> 00:03:04,080
have focusing only on the syntax part just
think of them only a symbols essentially.

25
00:03:04,080 --> 00:03:07,610
Then there are other things like brackets
that

26
00:03:07,610 --> 00:03:25,010
we can use then there is a non logical part
by thus we mean it varies from problem to

27
00:03:25,009 --> 00:03:37,318
problem essentially let us as assume that
be since here. So, we have symbols which is

28
00:03:37,318 --> 00:03:53,959
set
of proposition symbols. So, this is the alphabet

29
00:03:53,960 --> 00:04:00,540
with which we construct the language we
have a concern at which we use and all progression

30
00:04:00,539 --> 00:04:06,250
logics. And we have a varying set
which may be in principle and infinite or

31
00:04:06,250 --> 00:04:08,759
at least countable infinite or it could be
fine at

32
00:04:08,759 --> 00:04:09,759
as well essentially.

33
00:04:09,759 --> 00:04:13,449
We just talking about the 5 statements speak
you are a steep then this set will be simple

34
00:04:13,449 --> 00:04:21,250
set of statement. So, this is a countable
set of propositional symbols a we have 2 more

35
00:04:21,250 --> 00:04:36,168
symbols here one is I will use this notation.
But you could also use f was 0 and the other

36
00:04:36,168 --> 00:04:44,128
is this, but you could also used t or 1 or
even true and falls the full letters. It does

37
00:04:44,129 --> 00:04:47,530
not
matter basically they are these 2 symbols

38
00:04:47,529 --> 00:04:52,359
which are they are in all logics this you
often

39
00:04:52,360 --> 00:04:59,550
read as bottom. And this we read as top essentially
bottom are falls or 0 are equivalent.

40
00:04:59,550 --> 00:05:04,189
Basically it is a set of 2 symbols it is a
2 valued logic that we have talking about.

41
00:05:04,189 --> 00:05:08,819
And
when we talk about semantics then every sentence

42
00:05:08,819 --> 00:05:12,960
in our language will be map to one of
these symbols. And that is how the semantics

43
00:05:12,959 --> 00:05:22,269
will be defined month we would implicitly
between us 

44
00:05:22,269 --> 00:05:26,839
say that it is stands for true sentences.
And the other stands for fall sentences

45
00:05:26,839 --> 00:05:30,679
I mean this is fall sentences and this is
true sentences for that is only for us our

46
00:05:30,680 --> 00:05:33,038
sake. As
far as the logic itself is concerned the machine

47
00:05:33,038 --> 00:05:37,889
in self is concerned they are just 2
symbols to which sentences are mat on true

48
00:05:37,889 --> 00:05:42,889
essentially. But a travelers helps to keeping
mind the semantics which is that we are talking

49
00:05:42,889 --> 00:05:47,650
about false or true statements. What is
this machinery that we have talking about?

50
00:05:47,649 --> 00:05:53,629
This machine is we want to built is essentially
a machinery which first defines this

51
00:05:53,629 --> 00:06:05,100
language. And then tries to reach to sentences
in this language essentially and a mapping

52
00:06:05,100 --> 00:06:12,910
.for to this anywhere will come to that in
the movement. So, the set of sentences let

53
00:06:12,910 --> 00:06:19,770
us
call it s p where p stands for propositional

54
00:06:19,769 --> 00:06:29,990
logic is defined as follows that this belongs
to

55
00:06:29,990 --> 00:06:38,379
this his set top belongs to this set. So,
that of course, you know they stand for something

56
00:06:38,379 --> 00:06:49,439
which is always true or and something which
is the always false. So, this is the set of

57
00:06:49,439 --> 00:07:07,229
propositional symbols let us call this set
p. Then we say that if alpha belongs to p

58
00:07:07,228 --> 00:07:12,028
then
alpha belongs to s p. So, every propositional

59
00:07:12,028 --> 00:07:23,689
symbol is the sentence and then we say that
if alpha beta belong to p. So, alpha beta

60
00:07:23,689 --> 00:07:27,759
these symbols we will use as variables to
stands

61
00:07:27,759 --> 00:07:50,379
for any sentence essentially alpha and beta
belong to s p and a, these are finally, operator

62
00:07:50,379 --> 00:07:58,430
symbol. So, of these symbols we will distinguish
between binary and unary and we will

63
00:07:58,430 --> 00:08:06,079
not talk about higher or operators and we
do not need to a. So, this one is unary we

64
00:08:06,079 --> 00:08:09,838
often
of always you also use the this sign for this

65
00:08:09,838 --> 00:08:19,579
a for this sign. We also use sometimes an
arrow for this we sometimes use 2 arrows and

66
00:08:19,579 --> 00:08:24,478
there are the symbols which we I have not
mentioned here, but we can build the language

67
00:08:24,478 --> 00:08:26,329
using other symbols.

68
00:08:26,329 --> 00:08:31,180
So, I So, is your familiar that there are
sixteen possible binary operates that you

69
00:08:31,180 --> 00:08:34,509
can
device and these are only one 2 3 4 of them

70
00:08:34,509 --> 00:08:42,110
and there are 12 more which so if alpha beta
belongs to the set of sentences. And so instead

71
00:08:42,110 --> 00:08:47,649
of using this particular symbol let me here
use some abstract symbol if says the, this

72
00:08:47,649 --> 00:08:54,649
is the binary operators symbol then alpha
well I

73
00:08:54,649 --> 00:09:10,309
am. So, set I just defending the language
here. So, for example, a if p and q are to

74
00:09:10,309 --> 00:09:18,399
propositional symbols then p and q belongs
to this set and once this belongs to the set

75
00:09:18,399 --> 00:09:23,579
we
can also say p and q or q belongs to the set.

76
00:09:23,580 --> 00:09:29,750
So, essentially we can combined this any number
of time and we can create sentences

77
00:09:29,750 --> 00:09:34,190
which are which are really long. So, and which
infinites so the sentences in fact, we can

78
00:09:34,190 --> 00:09:41,900
create even if the set of propositional symbols
is finite essentially likewise we have for

79
00:09:41,899 --> 00:09:54,279
the unary symbol. If alpha belongs to s p
and we just use this symbol in a unary operator

80
00:09:54,279 --> 00:10:08,669
then so essentially now we have defined we
started with the central propositional

81
00:10:08,669 --> 00:10:15,149
symbols. And we have augmented this with more
sentences and the sentences are using

82
00:10:15,149 --> 00:10:20,929
the operators. So, the or the connective essentially
and the bracket symbols and so we

83
00:10:20,929 --> 00:10:38,819
can get in infinite set of symbol essentially.
So, this is the syntax, what is the meaning

84
00:10:38,820 --> 00:10:58,190
of
these sentences propositional logic is not

85
00:10:58,190 --> 00:11:06,930
concern with meaning. So the meaning is given
by us essentially.

86
00:11:06,929 --> 00:11:07,929
..

87
00:11:07,929 --> 00:11:23,989
So, I can say that a if have set of sentences
like Alice likes a math and physics and I

88
00:11:23,990 --> 00:11:29,990
call
this sentence p. That is only for my own sake

89
00:11:29,990 --> 00:11:35,340
essentially I want to let say reason about
Alice and I create a set of sentences is about

90
00:11:35,340 --> 00:11:40,340
Alice. So, I say I like math’s and physics
a

91
00:11:40,340 --> 00:12:21,590
Alice likes music. If Alice likes math then
Alice likes algebra if Alice likes algebra

92
00:12:21,590 --> 00:12:27,910
and
music. So, I should really say I will just

93
00:12:27,909 --> 00:12:41,980
likes music 
then Alice goes to college that is say

94
00:12:41,980 --> 00:12:47,950
I have this set of sentences. So, always thank
to give you flavor of anyway familiar with

95
00:12:47,950 --> 00:12:54,629
this the kind of things we can do with professional
logic and from this we want to ask the

96
00:12:54,629 --> 00:13:09,350
question that is this sentence. So is this
sentence can be cannot be informed not

97
00:13:09,350 --> 00:13:17,509
essentially. So, I can now encode this problem
in propositional logic and I can say a that

98
00:13:17,509 --> 00:13:25,549
Alice like math’s is p and Alice likes physics
is q.

99
00:13:25,549 --> 00:13:34,019
Then I can call the sentences p and q because
Alice like math’s and Alice likes physics

100
00:13:34,019 --> 00:13:44,990
this I can call as m. And then I have a statement
if Alice like math then Alice likes

101
00:13:44,990 --> 00:13:52,500
algebra. So, this sentence I can call as a
let us say and this hole sentence I will represents

102
00:13:52,500 --> 00:14:08,059
and implies a. And this sentence says Alice
like algebra Alice like music o implies a

103
00:14:08,059 --> 00:14:10,559
if
Alice likes music and then Alice goes to college

104
00:14:10,559 --> 00:14:18,929
So, this let us call it is c So, this
sentence I can write as a and m implies c

105
00:14:18,929 --> 00:14:23,539
why did I put brackets around here? But I
am

106
00:14:23,539 --> 00:14:29,169
not doing it, because when if clear then we
do not often put brackets and this is the

107
00:14:29,169 --> 00:14:38,039
sentence c and we are asking with the this
sentences true or not. So, I am saying here

108
00:14:38,039 --> 00:14:39,039
that

109
00:14:39,039 --> 00:14:45,029
.m means that Alice likes music but that is
only between us as for as the logical

110
00:14:45,029 --> 00:14:53,139
machinery is concerned it is not concern with
this at all. So, like we set logic as formal

111
00:14:53,139 --> 00:14:54,139
essentially.

112
00:14:54,139 --> 00:14:55,139
.

113
00:14:55,139 --> 00:15:06,939
We say logic is it only depends upon the from
so essentially what we have going to ask

114
00:15:06,940 --> 00:15:12,090
is a if a assume this is true; this is true;
this is true; this is true. Then is this necessarily

115
00:15:12,090 --> 00:15:17,790
true number we said logic talks about for
deduction essentially, but suddenly you have

116
00:15:17,789 --> 00:15:23,759
started talking about true statements for
let us talk about truth first when we says

117
00:15:23,759 --> 00:15:29,720
semantics. We essentially have to kinds of
well should I safely worst do it values it

118
00:15:29,720 --> 00:15:32,950
is a,
what does the sentence meant? What does p

119
00:15:32,950 --> 00:15:37,400
mean? What does q mean? What does n
mean? Now, we are saying that logic is not

120
00:15:37,399 --> 00:15:42,769
concern with that essentially. The other thing
is truth; truth values or some people in the

121
00:15:42,769 --> 00:15:55,009
tram truth functional semantics. And what
we

122
00:15:55,009 --> 00:16:05,960
have saying here is that there is a mapping
can which goes from this site of sentence

123
00:16:05,960 --> 00:16:24,400
sp
to in site. We want to define this mapping

124
00:16:24,399 --> 00:16:33,340
and that those 2 symbols we set that between
us will assume this stand for false and truth

125
00:16:33,340 --> 00:16:38,639
essentially. So, what are what is the mapping
a looking for we are looking for a mapping

126
00:16:38,639 --> 00:16:45,750
which takes an import any sentence in my
language. And maps it to one of those 2 symbols

127
00:16:45,750 --> 00:16:51,139
which means it tells me, but that is
again between us where there the sentences

128
00:16:51,139 --> 00:16:54,299
true or false essentially.

129
00:16:54,299 --> 00:17:05,019
.So, we have to a define this mapping. So,
we start with the function v which maps this

130
00:17:05,019 --> 00:17:22,970
at
p to the set of essentially lets external

131
00:17:22,970 --> 00:17:31,509
what do mean by this? Somebody is telling
me

132
00:17:31,509 --> 00:17:38,299
what is true and what is not true that I am
saying that Alice likes music’s. So, I am

133
00:17:38,299 --> 00:17:45,349
give
mapping and to clue and mapping p to true

134
00:17:45,349 --> 00:17:54,069
q to true. And so in general given the
mapping of the professional sentences we can

135
00:17:54,069 --> 00:18:00,480
derive a mapping or so this is general
version we will come to specifics later sometimes

136
00:18:00,480 --> 00:18:01,819
you have uncertain solid.

137
00:18:01,819 --> 00:18:06,019
So, I am I it is say p is true or r it is
true in which a off course, a do not I am

138
00:18:06,019 --> 00:18:07,849
not given
the mapping, but I am given the mapping for

139
00:18:07,849 --> 00:18:16,799
pm also. We will come to that a bit later
first you all the defined that if you are

140
00:18:16,799 --> 00:18:24,789
given the mapping a which we call we which
takes

141
00:18:24,789 --> 00:18:30,519
you from the set of propositional symbols
to this. Then can be defined this value function

142
00:18:30,519 --> 00:18:50,460
and that we can do as follows. If help a belongs
to p then val alpha is equal to, because

143
00:18:50,460 --> 00:18:58,250
somebody is given a started it maps to he
are very talking about to tables from this

144
00:18:58,250 --> 00:19:04,970
point
onwards. Then we always define val is equal

145
00:19:04,970 --> 00:19:19,610
to this thing and val they will little bit
of

146
00:19:19,609 --> 00:19:25,089
over loading happening here ideally at at
should use different symbols essentially.

147
00:19:25,089 --> 00:19:41,470
So, I so let the say we defined it to 2 now,
what and really saying is that this bottom

148
00:19:41,470 --> 00:19:46,680
always bottom symbol always maps to the truth
fell you false. So, let us call this is the

149
00:19:46,680 --> 00:19:50,539
set of truth values and here working with
the binary true valued logics. So, that this

150
00:19:50,539 --> 00:19:54,019
truth
values which one we call false and one we

151
00:19:54,019 --> 00:19:58,129
call true and bottom always must be false
and

152
00:19:58,130 --> 00:20:17,830
top always maps toT with stands for true essentially.
And then if val alpha is equal to

153
00:20:17,829 --> 00:20:38,519
true then val not alpha is equal to form.
So, I right rules like this if alpha maps

154
00:20:38,519 --> 00:20:44,119
true, and
alpha is the sentence in my language there.

155
00:20:44,119 --> 00:20:49,789
Then the another sentence in which I prefix
alpha with this or unary operator for we will

156
00:20:49,789 --> 00:20:57,299
off course, between us read as not alpha
then not alpha maps to f essentially and like

157
00:20:57,299 --> 00:21:03,690
this you can right other rules. So, for
example, we can say if well alpha you control

158
00:21:03,690 --> 00:21:20,769
true and val beta is equal to false then val
alpha implies beta is equal to false. So,

159
00:21:20,769 --> 00:21:24,200
we are familiar with this. So, we will not
spend

160
00:21:24,200 --> 00:21:33,590
our time righting this essentially you can
convert these kind of statements into a table.

161
00:21:33,589 --> 00:21:43,750
So, for example, a alpha beta alpha and and
place beet.

162
00:21:43,750 --> 00:22:00,480
So, false false true false true well I do
not know where there you can make out between

163
00:22:00,480 --> 00:22:05,150
my maybe I should out chosen 0 and one that
anyway you not the truth table for

164
00:22:05,150 --> 00:22:09,660
implication. So, this is the truth table for
implication these are the simplification if

165
00:22:09,660 --> 00:22:10,660
I can

166
00:22:10,660 --> 00:22:15,650
.like this for each low I can write a sentence
like this. So, this is this stands for the

167
00:22:15,650 --> 00:22:21,710
a third
row here this statement call this third row.

168
00:22:21,710 --> 00:22:25,759
So, I considered the 2 table or I can rights
statement like distance so on, but we are

169
00:22:25,759 --> 00:22:30,829
familiar with this as to how to defined this
semantics of how to lift the semantics of

170
00:22:30,829 --> 00:22:37,419
smile sentences to compound sentences when
they are made of using operators. And we have

171
00:22:37,420 --> 00:22:47,570
this logic rules that we all familiar with
essentially. So, what have it done? We offset

172
00:22:47,569 --> 00:22:54,339
that we have define the language 
of

173
00:22:54,339 --> 00:22:59,470
professional logic, we have define what is
the set of sentences which make up this

174
00:22:59,470 --> 00:23:05,710
proportional logic. And then we have define
the mapping which tells us that if he knew

175
00:23:05,710 --> 00:23:09,980
the truth values of the constituent sentences.

176
00:23:09,980 --> 00:23:17,620
How can we lift those truth values to more
compounds in this is and we have rules for

177
00:23:17,619 --> 00:23:25,279
doing that which means somebody gives us this
valuation which a that these are the 5

178
00:23:25,279 --> 00:23:29,379
atomic sentences a proportional’s symbols.
And they map to true false true false

179
00:23:29,380 --> 00:23:34,390
respectively then for this entire set of infinite
formalize. I have a mechanism for

180
00:23:34,390 --> 00:23:38,810
determining for there they map to true of
where there they false and that I can do by

181
00:23:38,809 --> 00:23:50,539
using true tables or something like that.
So, where, there the logic machinery come

182
00:23:50,539 --> 00:23:55,389
and
here. So, logic machinery comes in the logic

183
00:23:55,390 --> 00:24:01,250
machinery as we set is deals only with the
form it does not deal with content. It does

184
00:24:01,250 --> 00:24:03,880
not with semantics it is it does not deal
with

185
00:24:03,880 --> 00:24:12,270
meaning what we have interested in is can
we table of a syntactic machinery which will

186
00:24:12,269 --> 00:24:20,019
do that mapping for us essentially. Instead
of having to apply these rules repeatedly

187
00:24:20,019 --> 00:24:22,690
you
can keep applying the rules if some formula

188
00:24:22,690 --> 00:24:27,600
l for and some formula beta for what is the
truthfully of this. It depends if both of

189
00:24:27,599 --> 00:24:30,480
them a truth then this compel formula is true
and

190
00:24:30,480 --> 00:24:35,839
you can breakdown essentially. Instead of
doing that in staff having to construct the

191
00:24:35,839 --> 00:24:43,019
true
table can we have an alternate mechanism for

192
00:24:43,019 --> 00:24:44,339
doing that?

193
00:24:44,339 --> 00:24:54,389
So, to come to that let a say that somebody
as given a this function. We with basically

194
00:24:54,390 --> 00:25:01,090
saves which professions of true and which
are falls from that we can come compute this

195
00:25:01,089 --> 00:25:07,019
function val which says the something for
compound sentences. And from that we can

196
00:25:07,019 --> 00:25:26,599
defined this said t is the set of 5 sentences.
So, of all the sentences which I can construct

197
00:25:26,599 --> 00:25:37,808
did my language I the semantics tells me which
have true and which have falls, but I

198
00:25:37,808 --> 00:25:42,639
have own and either waves of reaching those
sentences. I do not know to apply these

199
00:25:42,640 --> 00:25:48,320
schools I do not want to construct to tables
quite, because the side of the 2 tables then

200
00:25:48,319 --> 00:26:00,689
grow to be very large is essentially I have
2 constituent here alpha beta. And I have

201
00:26:00,690 --> 00:26:01,690
4 set

202
00:26:01,690 --> 00:26:12,259
.4 rose it may true table if I have a sentence
like alpha and beta implies or delta implies

203
00:26:12,259 --> 00:26:22,308
theta and I have 5 variables and I have 2
rest of 5 rose in may true table. So, the

204
00:26:22,308 --> 00:26:25,009
side of
the truth table goes exponentially with the

205
00:26:25,009 --> 00:26:33,740
number propositional variables set I use in
my

206
00:26:33,740 --> 00:26:40,929
sentence essentially. So, I do not know want
to construct a true table what do we do we

207
00:26:40,929 --> 00:26:46,179
defined in set the notion of a rule of inference.
So, let me of this part out. So, what are

208
00:26:46,179 --> 00:26:55,870
we interested it we I interested it we a interested
in reaching those wet set of true

209
00:26:55,869 --> 00:26:57,089
sentences this.

210
00:26:57,089 --> 00:26:58,089
.

211
00:26:58,089 --> 00:27:05,919
And what do I mean by that if I somebody else
given with the promises which is this set

212
00:27:05,920 --> 00:27:22,690
p that at talked about the semantics defines
is set t devises I assume to be true. So,

213
00:27:22,690 --> 00:27:28,630
these
assume to be true but from if I assume these

214
00:27:28,630 --> 00:27:33,170
to be true then there where hole set which
is

215
00:27:33,170 --> 00:27:45,019
true. So, for example, I can say a and or
not q is this true or not this is the hole

216
00:27:45,019 --> 00:27:47,918
they there
infinite. So, the sentences I can construct

217
00:27:47,919 --> 00:27:51,550
using these symbols and I can ask the question
of the self them were there that is true or

218
00:27:51,549 --> 00:27:56,569
not from that I can collect the true sentences.
And I have this set true essentially now a

219
00:27:56,569 --> 00:28:02,720
are seen that he say the mechanism of reaching
this set again truth true or different means

220
00:28:02,720 --> 00:28:11,920
now you talking about the logic machines.
Or

221
00:28:11,920 --> 00:28:31,710
you can say and inference this use is something
call rules of inference. So, what does the

222
00:28:31,710 --> 00:28:38,630
rule of inference? Rule of inference is a
pattern and the most popular on that no thought

223
00:28:38,630 --> 00:28:50,490
the a familiar with is called nodes ponens
and modus ponens says that if he can see a

224
00:28:50,490 --> 00:28:56,910
.sentence alpha. And the sentence belongs
to the set of sentences at we have and if

225
00:28:56,910 --> 00:29:01,960
you
can see a sentences alpha implies beta.

226
00:29:01,960 --> 00:29:14,250
Then we can add in sentence beta what do I
mean by this that if I have a set of sentences

227
00:29:14,250 --> 00:29:18,539
given to me to set of premises. For example,
our data base of sentences if you want to

228
00:29:18,539 --> 00:29:24,599
use at a then I can keep adding new sentences
to the data base essentially. And how do I

229
00:29:24,599 --> 00:29:30,369
do that? I do it by this pattern matching
mechanism which says that if I have alpha

230
00:29:30,369 --> 00:29:34,869
and if
I have alpha implied beta then I can add beta

231
00:29:34,869 --> 00:29:43,459
essentially. So, this is rule of inference
there have many others you must see familiar

232
00:29:43,460 --> 00:29:51,210
with. So, one rule is call simplification
we

233
00:29:51,210 --> 00:29:57,669
should will need for this it say if you can
see a sentence of this kind then you can right

234
00:29:57,669 --> 00:30:08,880
the sentence of this kind essentially alpha.
So, notice that once you have rules like

235
00:30:08,880 --> 00:30:15,140
simplification we do not feel complete for
somebody to us the set of all atomic

236
00:30:15,140 --> 00:30:22,549
valuations for all atomic proposition. Somebody
is given a of p and q from this by

237
00:30:22,548 --> 00:30:30,480
applying this we can always add q to or p
to the. Then you say we can add this say

238
00:30:30,480 --> 00:30:37,349
sentence beta or we can add this new sentence
alpha to our data base. We also use the

239
00:30:37,349 --> 00:30:49,399
turn that we can derive beta essentially or
we also use the turn prove beta. So, if alpha

240
00:30:49,400 --> 00:30:51,990
is
given to us and alpha implies beta is given

241
00:30:51,990 --> 00:30:57,329
to us when we can say we can derive beta or
we can prove that beta is true essentially.

242
00:30:57,329 --> 00:31:04,480
So, the notion of a proof is distinct from
the notion of truth that we have talking about

243
00:31:04,480 --> 00:31:12,150
there the notion of truth is base on the semantics
of the operators that we have defined

244
00:31:12,150 --> 00:31:15,450
what does it? What does and mean? What does
all mean? what does the implication

245
00:31:15,450 --> 00:31:20,480
mean? What does negation mean? And when he
say mean basically we are talking about

246
00:31:20,480 --> 00:31:25,450
the truth table essentially how does and combine
the truth values of it is component to

247
00:31:25,450 --> 00:31:33,460
give you truth value. That is the meaning
of those operator and truth the notion of

248
00:31:33,460 --> 00:31:36,960
truth is
based on the notion of semantics are those

249
00:31:36,960 --> 00:31:40,819
operator essentially. So, notion of proof
or

250
00:31:40,819 --> 00:31:47,899
derivation resent purely syntactic notion
it is purely base on pattern matching. It

251
00:31:47,900 --> 00:31:50,419
says if
you can see is such a pattern and if you can

252
00:31:50,419 --> 00:31:58,800
see is such a pattern. Then you can derive
this pattern it is nothing to do at least

253
00:31:58,799 --> 00:32:05,418
on the surface which the notion of prove essentially
ideally. Of course, we would not been in a

254
00:32:05,419 --> 00:32:09,740
machine like this a syntactic machine like
this

255
00:32:09,740 --> 00:32:12,929
which is producing something which a not interested.
And we I interested in true

256
00:32:12,929 --> 00:32:18,250
statement we want to know what is true even
some premises not else is true. So, theory

257
00:32:18,250 --> 00:32:24,329
on proving is the name that we use. So, this
is essentially So, let us see what happening

258
00:32:24,329 --> 00:32:32,899
.here before we look at the machine if further
what is been given to us says p and q for

259
00:32:32,900 --> 00:32:36,580
lets label number this now true is am.

260
00:32:36,579 --> 00:32:55,939
And you are familiar with this process p implies
a or a and m implies c here the fourth

261
00:32:55,940 --> 00:33:02,548
facts is a terms sometime we used given to
us that this 4 sentences at true. Then a

262
00:33:02,548 --> 00:33:09,710
conclusion that we have see is see true or
not will Alice go to college or not essentially,

263
00:33:09,710 --> 00:33:14,670
but we have not looking at the meaning of
this sentences. Any more we have not even

264
00:33:14,670 --> 00:33:20,700
looking at the truth values of the sentences.
We are asking that will this machinery that

265
00:33:20,700 --> 00:33:24,429
we have we have talked about tools of inferences.
There are more rules that we can

266
00:33:24,429 --> 00:33:33,380
talked about and if necessary he will introduce
the can we have this machinery produce

267
00:33:33,380 --> 00:33:41,710
this formula c or derive this formula c a
prove this formula c. So, what is this machinery?

268
00:33:41,710 --> 00:33:56,190
This logic machine 
essentially says pick our rule 

269
00:33:56,190 --> 00:34:03,120
and corresponding data 
by data had be

270
00:34:03,119 --> 00:34:06,589
mean the sentences which are already there.
So, for example, these sentences are already

271
00:34:06,589 --> 00:34:12,489
given to us essentially and if some rule is
applicable data take that rule. And take that

272
00:34:12,489 --> 00:34:23,809
data and add consequent of rule of a there
as the matching component at am stating

273
00:34:23,809 --> 00:34:31,648
explicitly here what is the consequent? The
consequent is return below the line here

274
00:34:31,648 --> 00:34:37,079
return below the line here we also use another
way of signifying this rule.

275
00:34:37,079 --> 00:34:51,009
We say alpha implies beta there is another
way of righting this rule it is say that given

276
00:34:51,010 --> 00:34:57,990
alpha and given alpha beta you can derive
beta. So, this symbol is used for proving

277
00:34:57,989 --> 00:35:00,119
or
deriving thing and this is stating a rule

278
00:35:00,119 --> 00:35:03,029
of inference modus porous is say that if I
give this

279
00:35:03,030 --> 00:35:12,030
to you can add that 
corresponding to this is corresponding is

280
00:35:12,030 --> 00:35:18,769
also the notion of truth.
Then we are asking if this is true and this

281
00:35:18,769 --> 00:35:23,820
is this is true this is true then is it necessary
that

282
00:35:23,820 --> 00:35:42,500
c is true. We would like this as follows p
and q and n and p implies a and this one a

283
00:35:42,500 --> 00:35:51,480
and n
implies c 

284
00:35:51,480 --> 00:35:59,579
we have. So, corresponding of sentences we
have the social of truth value and

285
00:35:59,579 --> 00:36:09,598
correspondence notion of a truth value. We
have saying that these 4 sentence entail c.

286
00:36:09,599 --> 00:36:16,550
So,
the premises is what are the premises is 4

287
00:36:16,550 --> 00:36:22,230
things even to us premises entail the sentence
c

288
00:36:22,230 --> 00:36:28,900
and that more formally we like this these
first premise, second premise, third premise,

289
00:36:28,900 --> 00:36:37,250
fourth premise. And that this similar symbol,
but it 2 lines is for entailment an entailment

290
00:36:37,250 --> 00:36:44,489
says that if these are true than that is necessarily
true that you cannot the that true that is

291
00:36:44,489 --> 00:36:50,529
notion of entailment. So, that is set of truths
2 sentence that we talk about an entailments

292
00:36:50,530 --> 00:36:56,790
basically asked the question thus is see belong
to the set of 2 sentence or not those this

293
00:36:56,789 --> 00:37:03,829
premises entail c the question. We are asking
here is can you derive see from the

294
00:37:03,829 --> 00:37:09,210
.premises could derive we see are use this
rules of inference for entailment; we have

295
00:37:09,210 --> 00:37:12,099
to
use the truth stable for the operators they

296
00:37:12,099 --> 00:37:13,690
are quite this things.

297
00:37:13,690 --> 00:37:23,800
So, I am so fact that they are different.
So, logic machinery basically says packable

298
00:37:23,800 --> 00:37:30,230
and
corresponding data and add consequent of the

299
00:37:30,230 --> 00:37:37,590
rule. And we put this essentially and what
this will produce is another set of formulize

300
00:37:37,590 --> 00:37:46,450
which we will call is what is the call this
that

301
00:37:46,449 --> 00:37:57,319
is let me, because I use the symbol p earlier.
Let us say this is p r something some

302
00:37:57,320 --> 00:38:18,210
symbol what is the set? This is a set of I
should write it here set of provable formulas.

303
00:38:18,210 --> 00:38:26,470
So,
I have in adamantly sort of switch to the

304
00:38:26,469 --> 00:38:33,919
terminology of formulas but essentially a
formula is a sentence in my language essentially

305
00:38:33,920 --> 00:38:39,090
a well form formula sp. It is a short for
well form formula anything that I can construct

306
00:38:39,090 --> 00:38:42,380
using the sentence that I have defines is
a

307
00:38:42,380 --> 00:38:50,110
formula. And this set p r is a set of all
those formulas which are provable given the

308
00:38:50,110 --> 00:38:54,150
set of
premises and the set of rules of influences

309
00:38:54,150 --> 00:39:01,070
that are given to me essentially. So, the
question we are asking is the c belong to

310
00:39:01,070 --> 00:39:04,700
this set or not and instead of writing this
loop

311
00:39:04,699 --> 00:39:11,259
which will keep going indefinitely, because
the set is actually infinite. We can put a

312
00:39:11,260 --> 00:39:15,920
the
termination criteria that if c if the consequent

313
00:39:15,920 --> 00:39:19,041
equal to c then stop essentially we can just
put in the condition that.

314
00:39:19,041 --> 00:39:23,570
So, that means we are writing the program
to generate a proof for only c and not

315
00:39:23,570 --> 00:39:26,740
worrying about other provable formulas essentially.
So, there a small variation

316
00:39:26,739 --> 00:39:34,109
essentially so how do we go about this? This
is given to us we can add p here why

317
00:39:34,110 --> 00:39:38,190
because there is a role called simplification
which says if you have alpha and beta and

318
00:39:38,190 --> 00:39:44,200
alpha matches p and beta matches q. Therefore,
I can produce p here by simplification

319
00:39:44,199 --> 00:39:51,460
there another rule. So, I can use now modus
ponens because I have p and I have p

320
00:39:51,460 --> 00:39:58,619
implies a I can add a remember modus ponens
say if you have alpha, alpha is p and alpha

321
00:39:58,619 --> 00:40:04,119
implies beta is p implies. Therefore, I can
beta becomes a and I can add a there is a

322
00:40:04,119 --> 00:40:08,890
another rule which says that if I have 2 things.
Then the conjunction of those 2 things can

323
00:40:08,889 --> 00:40:22,829
be added which is called addition, but I can
write a m, because I have a and I have m I

324
00:40:22,829 --> 00:40:26,389
can write a and m I can add this is another
rule of influence which I have not written

325
00:40:26,389 --> 00:40:29,900
here
explicitly and then again I can use modus

326
00:40:29,900 --> 00:40:33,210
ponens. So, ideally I should say how would
I

327
00:40:33,210 --> 00:40:43,400
get this? I got it from one and simplification
how did I get this? I got this from 5 and

328
00:40:43,400 --> 00:40:46,369
3
and modus ponens hence so on essentially.

329
00:40:46,369 --> 00:40:52,480
So, you are familiar with this process having
studied geometry and algebra in school.

330
00:40:52,480 --> 00:41:00,519
.So, now I have got a m I got this by addition
of a and m and then the last thing is c,

331
00:41:00,519 --> 00:41:09,730
because I have this a a and m a and m matches
alpha and a and m implies c matches

332
00:41:09,730 --> 00:41:18,760
alpha implies beta. So, c matches beta. So,
I can using modus ponens. So, this is a

333
00:41:18,760 --> 00:41:27,020
syntactic machinery of of arriving at proof
of c which does not look at the meaning of

334
00:41:27,019 --> 00:41:29,769
the
operators. It does not understand what does

335
00:41:29,769 --> 00:41:36,000
m stands for? What does implication stand
for know all it has is set of rules of influence

336
00:41:36,000 --> 00:41:39,889
which says if you see this pattern. And you
see this pattern you can add a new formula

337
00:41:39,889 --> 00:41:45,049
to your data base and we can put this to a
cycle and say can we add c. So, at this point

338
00:41:45,050 --> 00:41:51,109
we have added c. So, we can say yes c is
provable in to. So, that is a notion of proof

339
00:41:51,108 --> 00:41:56,989
notion of provability that is syntactic
machinery we are after, because it is easy

340
00:41:56,989 --> 00:42:02,739
to write pattern matching algorithms and in
this case the patterns are exact. So, you

341
00:42:02,739 --> 00:42:08,358
know matching is not even hard and you can
keep looking for rules and matching data and

342
00:42:08,358 --> 00:42:09,559
keep producing new data.

343
00:42:09,559 --> 00:42:15,690
So, you can imagine the forwards search algorithm
which says this is what is given to me

344
00:42:15,690 --> 00:42:20,720
this is a rule available to me from this.
And this I can for this from this and this

345
00:42:20,719 --> 00:42:23,709
I can
infer this from this and something else I

346
00:42:23,710 --> 00:42:26,970
can infer this So, I can mo moving forward
and

347
00:42:26,969 --> 00:42:33,539
that c is somewhere. So, if I can reach this
formula c then I have stopped. So, the power

348
00:42:33,539 --> 00:42:38,840
state space search that we talked about is
essentially being done here in. So, notice

349
00:42:38,840 --> 00:42:41,750
that
we have said pick a rule we have not said

350
00:42:41,750 --> 00:42:47,230
which rule that of course, is a very tricky
question you can go off in some direction

351
00:42:47,230 --> 00:42:52,588
and infer meaningless things. So, that is
obviously the thing that we need to tackle

352
00:42:52,588 --> 00:43:02,940
next essentially. So, what have we done? We
have defined the language of propositional

353
00:43:02,940 --> 00:43:07,119
logic this in fact then the semantics the
truth

354
00:43:07,119 --> 00:43:12,969
function semantics which says that given a
sentence. We can arrive at it is truth value

355
00:43:12,969 --> 00:43:19,439
using the truth table approach then we talked
about this machinery of making inferences

356
00:43:19,440 --> 00:43:25,800
which which does not look at semantics. But
it only looks at the syntax, it is a syntactic

357
00:43:25,800 --> 00:43:32,100
machinery and basically adds new formulas
to that we can sort of bill a machinery to

358
00:43:32,099 --> 00:43:33,099
produce the formula.

359
00:43:33,099 --> 00:43:41,650
So, is this machinery, good machinery or not?
This is this is the question which is asked

360
00:43:41,650 --> 00:43:48,430
by all logicians. So, what do we have? We
have a logic machinery is this logic

361
00:43:48,429 --> 00:43:52,980
machinery doing what we want us want it to
do? So, there are 2 notions that we use here

362
00:43:52,980 --> 00:44:05,340
one is the notion of soundness. The notion
of soundness says that my machinery will

363
00:44:05,340 --> 00:44:14,820
only produce true formulas we can express
this as follows if. So, let say l is a language

364
00:44:14,820 --> 00:44:27,180
.give to us or set of premises given to us
if l entail alpha then l sorry if l l derives

365
00:44:27,179 --> 00:44:31,429
alpha
then n l entails alpha notion, so soundness

366
00:44:31,429 --> 00:44:39,329
is that my logic machinery will produce only
true formula if it produces a formula then

367
00:44:39,329 --> 00:44:46,838
that formula must be true. Of course, trivially
if your logic machinery does not produce any

368
00:44:46,838 --> 00:44:52,539
formulas that will be a sound machine. But
that of course, is not a very good machinery

369
00:44:52,539 --> 00:45:00,630
as a properties completeness 
that we have

370
00:45:00,630 --> 00:45:14,010
already spoken about is that if l entails
alpha. Then l completeness says that if a

371
00:45:14,010 --> 00:45:18,359
formula
is true then there is a derivation for that

372
00:45:18,358 --> 00:45:24,819
formula in my logic machinery that if I had
a non

373
00:45:24,820 --> 00:45:29,550
deterministic machine which knew which role
to pick and which data to apply to it will

374
00:45:29,550 --> 00:45:31,240
produce a derivation essentially.

375
00:45:31,239 --> 00:45:35,618
Of course, in the absence of having non determinism
we have to use search and we will

376
00:45:35,619 --> 00:45:46,940
sort of focus on that as we go along tie to
soundness is a notion which is basically is

377
00:45:46,940 --> 00:45:58,250
derived from soundness. But it is useful to
talk about is it is consistency, consistency

378
00:45:58,250 --> 00:46:07,141
says theta logic is consistent if you can
derive either alpha or negation of alpha but

379
00:46:07,141 --> 00:46:12,579
never
both essentially. So, says that l derives

380
00:46:12,579 --> 00:46:25,849
alpha and I must use the exclusive or l derives
negation of alpha. So, this stands for exclusive

381
00:46:25,849 --> 00:46:33,469
which is not a symbol I have defined here
but we can define it in terms of this. So,

382
00:46:33,469 --> 00:46:39,159
consistency is basically de tied up to soundness
is if you just think about this a little bit

383
00:46:39,159 --> 00:46:43,359
only one of those things will be true and
soundness says that I can prove only those

384
00:46:43,360 --> 00:46:47,990
true 2 things essentially if I prove something
it must be true. So, you cannot have alpha

385
00:46:47,989 --> 00:46:53,089
and not alpha being derived. So, which is
basically the other side of soundness, but

386
00:46:53,090 --> 00:46:58,530
very often we talk about consistency
soundness, completeness and consistency essentially.

387
00:46:58,530 --> 00:47:07,930
So when we begin the next class,
we will talk about these properties. We will

388
00:47:07,929 --> 00:47:14,598
ask the question when is my system going to
be sound why is this rule sound how do I say

389
00:47:14,599 --> 00:47:15,599
that this rule is sound.

390
00:47:15,599 --> 00:47:20,359
So, we will ask this question, we will also
talk about completeness a little bit, but

391
00:47:20,358 --> 00:47:23,960
we will
not prove it is completeness properties the

392
00:47:23,960 --> 00:47:31,108
profs are simply little bit longer. And then
we

393
00:47:31,108 --> 00:47:40,369
will move on to higher order logics essentially
may I will give you an example of logical

394
00:47:40,369 --> 00:47:45,079
systems which were know as axiomatic systems.
So, last 200 years mathematician have

395
00:47:45,079 --> 00:47:49,440
been talking about building axiomatic system.
So, they have been saying if you use this

396
00:47:49,440 --> 00:47:54,380
set of operators and this rule of then your
logic machinery is complete essentially. So,

397
00:47:54,380 --> 00:47:56,990
I
will just give you an example you would not

398
00:47:56,989 --> 00:48:00,439
prove their completeness but we can talk
about it essentially. So, in the next class,

399
00:48:00,440 --> 00:48:02,010
we will begin with soundness and completeness

400
00:48:02,010 --> 00:48:08,530
.and then move on to logic.

401
00:48:08,530 --> 00:48:16,140
Eventually we will also focus on this machinery
what really this algorithm should be

402
00:48:16,139 --> 00:48:22,098
essentially this seems to wage and it needs
all this power of non determinism to work.

403
00:48:22,099 --> 00:48:27,559
We need something more efficient to be able
to derive the proofs essentially observe that

404
00:48:27,559 --> 00:48:32,940
you know of course, we are not talking about
first sort of logic yes. But in first sort

405
00:48:32,940 --> 00:48:35,280
of
logic you would have this problem you could

406
00:48:35,280 --> 00:48:41,730
say if a number is odd then it is successor
is even essentially. And if somebody tells

407
00:48:41,730 --> 00:48:49,088
you 5 is odd then you will say go into a
direction saying 6 is even, 7 is odd, 8 is

408
00:48:49,088 --> 00:48:50,358
of course, you have to have the other rule
also

409
00:48:50,358 --> 00:48:53,809
that if a number is even and it is successor
is odd. Then you will just keep making

410
00:48:53,809 --> 00:48:58,909
statements 5 is odd, 6 is even, 7 is odd,
8 is even, 9 is odd and you will never come

411
00:48:58,909 --> 00:49:00,460
out
that loop essentially. So, obviously that

412
00:49:00,460 --> 00:49:08,190
is like depth first search going into an infinite
branch that is danger lucks even in this algorithm

413
00:49:08,190 --> 00:49:11,610
here and we have to look at some of
those algorithm issues. So, we will stop here.

414
00:49:11,610 --> 00:49:21,610
.

