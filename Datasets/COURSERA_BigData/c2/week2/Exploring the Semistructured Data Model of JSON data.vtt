WEBVTT

1
00:00:02.360 --> 00:00:05.130
In this hands on exercise,
we will be looking at JSON data.

2
00:00:07.040 --> 00:00:09.600
First, we will open a terminal window and

3
00:00:09.600 --> 00:00:13.300
then look at the contents of a JSON
file containing tweets from Twitter.

4
00:00:14.860 --> 00:00:17.800
Next, we will examine
the schema of this JSON file.

5
00:00:18.810 --> 00:00:21.920
Finally, we will extract different
fields from the JSON data.

6
00:00:24.340 --> 00:00:25.470
Let's begin.

7
00:00:25.470 --> 00:00:27.307
First, we'll open a terminal window,

8
00:00:27.307 --> 00:00:29.964
by clicking on the terminal
icon at the top of the toolbar.

9
00:00:37.240 --> 00:00:42.005
Next, we'll see cd into the directory
containing the json data,

10
00:00:42.005 --> 00:00:45.594
by running cddownload/big/data/2/json.

11
00:00:52.298 --> 00:00:54.520
We can run ls, to see the json file.

12
00:00:58.836 --> 00:01:04.030
The json file is called twitter.json.

13
00:01:04.030 --> 00:01:07.980
We can run more twitter.json to
view the contents of this file.

14
00:01:16.280 --> 00:01:20.990
The json data contains semi-structured
data, which is nested several levels.

15
00:01:20.990 --> 00:01:25.350
There are many tweets in this file, and
it's hard to read using the more command.

16
00:01:25.350 --> 00:01:29.690
You can use space to scroll down and
when we're done, hit q.

17
00:01:32.420 --> 00:01:37.358
We can run the jsonschema.pi command
to view the schema of this data.

18
00:01:37.358 --> 00:01:42.179
We run jsonschema.pitwitter.json

19
00:01:49.715 --> 00:01:52.670
And we'll add a pipe more at the end.

20
00:01:56.665 --> 00:02:00.572
This shows the nested
fields within this data,

21
00:02:00.572 --> 00:02:06.139
at the top level there are fields
like contributors text and id and so

22
00:02:06.139 --> 00:02:11.900
on, but there are also fields nested
within these top level fields for

23
00:02:11.900 --> 00:02:17.372
example entities also contains
called symbols media hashtags and

24
00:02:17.372 --> 00:02:20.691
so on If we scroll down by hitting space,

25
00:02:20.691 --> 00:02:25.270
we'll see that there's
several levels of nesting.

26
00:02:25.270 --> 00:02:32.320
For example, user also has
follow_request_sent, id, and so on.

27
00:02:36.105 --> 00:02:40.466
We can run the print json script to view
the contents of a particular tweet and

28
00:02:40.466 --> 00:02:42.746
a particular field within that tweet.

29
00:02:42.746 --> 00:02:47.018
Let's run print_json.py.

30
00:02:47.018 --> 00:02:50.812
It asks for the file name so

31
00:02:50.812 --> 00:02:55.300
we'll enter twitter.json.

32
00:02:58.407 --> 00:03:01.434
And we'll look at tweet 99.

33
00:03:03.645 --> 00:03:06.340
So let's look at the top
level field called text.

34
00:03:10.506 --> 00:03:14.884
So here we see the text for
note the 99th tweet in this file.

35
00:03:14.884 --> 00:03:19.110
We could also look at a nested field
within the file, by running print_json

36
00:03:19.110 --> 00:03:24.276
again The file name is twitter.json.

37
00:03:26.975 --> 00:03:28.833
We'll look at tweet 99 again.

38
00:03:32.097 --> 00:03:35.240
And we'll look at the field
entities hashtags.

39
00:03:35.240 --> 00:03:39.565
The hashtags that are embedded or
nested within the entities field.