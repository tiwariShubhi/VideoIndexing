WEBVTT

1
00:00:00.720 --> 00:00:05.150
In this hands on activity, we'll be
using Pandas to read CSV files and

2
00:00:05.150 --> 00:00:07.300
perform various queries on them.

3
00:00:07.300 --> 00:00:10.070
Pandas is a data analysis library for
Python.

4
00:00:12.140 --> 00:00:14.730
First, we'll create a new
Jupyter Python Notebook.

5
00:00:16.070 --> 00:00:20.060
Next, we will use Pandas to read
a CSV file into a DataFrame.

6
00:00:21.375 --> 00:00:25.490
We'll then view the contents of the
DataFrame and see how to filter rows and

7
00:00:25.490 --> 00:00:26.130
columns of it.

8
00:00:27.600 --> 00:00:31.410
Next, we will perform average and
sum operations on the DataFrame.

9
00:00:31.410 --> 00:00:36.760
And finally, show how to merge two
DataFrames by joining on a single column.

10
00:00:39.160 --> 00:00:39.660
Let's begin.

11
00:00:41.420 --> 00:00:44.370
We'll start by creating
a new iPython notebook.

12
00:00:44.370 --> 00:00:48.570
Clicking on New and
selecting Python 3 under notebooks.

13
00:00:51.900 --> 00:00:56.350
First, we'll import the Pandas
library by writing import pandas.

14
00:00:58.010 --> 00:01:00.710
Remember that in iPython notebooks,
to run a command,

15
00:01:00.710 --> 00:01:02.980
we hold down the shift key and hit Enter.

16
00:01:06.599 --> 00:01:12.395
Next, let's read buyclicks.csv
into a Pandas DataFrame.

17
00:01:12.395 --> 00:01:14.730
We'll put it in a variable
called buyclicksDF.

18
00:01:18.135 --> 00:01:22.751
We'll read it using pandas.read_csv,

19
00:01:22.751 --> 00:01:27.630
and we'll read the buy-clicks.csv file.

20
00:01:30.966 --> 00:01:34.870
We can see the contents of the file by
just running the variable by itself.

21
00:01:39.948 --> 00:01:44.398
And notice that the file has many rows and
then iPython truncates this,

22
00:01:44.398 --> 00:01:45.740
the dot, dot, dot.

23
00:01:49.227 --> 00:01:52.027
We can see only the top five
rows by calling .head(5).

24
00:01:53.417 --> 00:01:58.343
Next, let's look at only two

25
00:01:58.343 --> 00:02:04.500
columns in the buyclicks data.

26
00:02:04.500 --> 00:02:06.310
Let's look at price and user ID.

27
00:02:07.330 --> 00:02:13.680
We can do these by first entering
buyclicks DataFrame in the same text for

28
00:02:13.680 --> 00:02:19.040
specifying only certain columns to
show is open bracket open bracket and

29
00:02:19.040 --> 00:02:20.950
then the name of the columns
you want to view.

30
00:02:20.950 --> 00:02:25.700
So, want your price and
user ID, and again,

31
00:02:25.700 --> 00:02:31.395
we only want to see the first five rows,
so we'll do .head(5).

32
00:02:35.016 --> 00:02:39.350
Now, let's query the buyclicks data for
only the prices less than 3.

33
00:02:39.350 --> 00:02:44.494
First, we'll enter buyclicksDF,
One square bracket,

34
00:02:44.494 --> 00:02:49.007
to filter our particular column,
we enter buyclicksDF and then column name.

35
00:02:50.440 --> 00:02:54.440
Now, we specify the limit of
the query by entering <3.

36
00:03:02.378 --> 00:03:06.080
This shows first five rows where
the price is less than three.

37
00:03:08.409 --> 00:03:12.205
We can also perform aggregate
operations on Panda's DataFrames.

38
00:03:13.650 --> 00:03:21.673
We can sum all the price data by
entering buyclicksDF['price'].sum.

39
00:03:25.760 --> 00:03:29.470
Another aggregate operation we can
perform is looking at the average.

40
00:03:29.470 --> 00:03:31.820
Let's look at the average for price.

41
00:03:31.820 --> 00:03:33.540
The function is called mean.

42
00:03:34.720 --> 00:03:40.782
So, once your buyclicksDF ['price'].mean.

43
00:03:45.341 --> 00:03:48.460
Can also join two DataFrames
on a single column.

44
00:03:49.870 --> 00:03:54.620
First, let's read in another
CSV into a different DataFrame.

45
00:03:54.620 --> 00:03:57.700
We'll read in adclicks.csv.

46
00:03:57.700 --> 00:04:04.723
So we'll says adclicksDF
= pandas.read_csv,

47
00:04:04.723 --> 00:04:10.286
we'll say ('ad-clicks.csv').

48
00:04:16.538 --> 00:04:20.870
To verify that we read this data
successfully, let's look at the contents.

49
00:04:29.077 --> 00:04:32.063
Now, let's combine
the buyclicks DataFrame and

50
00:04:32.063 --> 00:04:34.700
the adclicks data frame
on the user ID call.

51
00:04:36.690 --> 00:04:39.480
We'll put the result in the new
DataFrame called mergeDF.

52
00:04:39.480 --> 00:04:46.400
So we'll say mergeDF = adclicksDF.merge

53
00:04:50.465 --> 00:04:54.820
Then, we need to say which
DataFrame we're merging with,

54
00:04:54.820 --> 00:04:59.590
buyclicksDF, and
the column that we're merging on.

55
00:04:59.590 --> 00:05:02.080
So we'll say on='userid'.

56
00:05:08.461 --> 00:05:11.681
Finally, we can look at the contents
with this merged DataFrame.