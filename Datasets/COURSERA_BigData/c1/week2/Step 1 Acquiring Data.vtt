WEBVTT

1
00:00:03.008 --> 00:00:05.098
Step one, acquiring data.

2
00:00:19.898 --> 00:00:24.420
The first step in the data science
process is to acquire the data.

3
00:00:25.660 --> 00:00:29.860
You need to obtain the source material
before analyzing or acting on it.

4
00:00:31.950 --> 00:00:37.690
The first step in acquiring data is
to determine what data is available.

5
00:00:37.690 --> 00:00:41.680
Leave no stone unturned when it comes
to finding the right data sources.

6
00:00:42.770 --> 00:00:46.150
You want to identify suitable
data related to your problem and

7
00:00:47.200 --> 00:00:51.540
make use of all data that is relevant
to your problem for analysis.

8
00:00:52.720 --> 00:00:56.580
Leaving out even a small
amount of important data

9
00:00:56.580 --> 00:00:58.570
can lead to incorrect conclusions.

10
00:01:01.190 --> 00:01:04.460
Data, comes from, many places, local and

11
00:01:04.460 --> 00:01:09.280
remote, in many varieties,
structured and un-structured.

12
00:01:09.280 --> 00:01:12.250
And, with different velocities.

13
00:01:12.250 --> 00:01:17.780
There are many techniques and technologies
to access these different types of data.

14
00:01:17.780 --> 00:01:19.420
Let's discuss a few examples.

15
00:01:21.360 --> 00:01:26.020
A lot of data exists in
conventional relational databases,

16
00:01:26.020 --> 00:01:28.560
like structure big data
from organizations.

17
00:01:29.600 --> 00:01:35.270
The tool of choice to access data from
databases is structured query language or

18
00:01:35.270 --> 00:01:40.360
SQL, which is supported by all
relational databases management systems.

19
00:01:41.680 --> 00:01:47.260
Additionally, most data base systems
come with a graphical application

20
00:01:47.260 --> 00:01:52.250
environment that allows you to query and
explore the data sets in the database.

21
00:01:54.990 --> 00:02:01.870
Data can also exist in files such as
text files and Excel spreadsheets.

22
00:02:01.870 --> 00:02:05.638
Scripting languages are generally
used to get data from files.

23
00:02:05.638 --> 00:02:11.200
A scripting language is a high
level programming language

24
00:02:11.200 --> 00:02:16.020
that can be either general purpose or
specialized for specific functions.

25
00:02:17.960 --> 00:02:24.010
Common scripting languages with support
for processing files are Java Script,

26
00:02:24.010 --> 00:02:29.300
Python, PHP, Perl, R, and
MATLAB, and are many others.

27
00:02:31.780 --> 00:02:36.230
An increasingly popular way
to get data is from websites.

28
00:02:36.230 --> 00:02:40.956
Web pages are written using
a set of standards approved by

29
00:02:40.956 --> 00:02:44.906
a world wide web consortium or
shortly, W3C.

30
00:02:44.906 --> 00:02:48.650
This includes a variety of formats and
services.

31
00:02:49.920 --> 00:02:55.860
One common format is
the Extensible Markup Language, or XML,

32
00:02:55.860 --> 00:03:00.640
which uses markup symbols or tabs to
describe the contents on a webpage.

33
00:03:02.250 --> 00:03:07.920
Many websites also host web services which
produce program access to their data.

34
00:03:10.310 --> 00:03:13.110
There are several types of web services.

35
00:03:13.110 --> 00:03:16.990
The most popular is REST because it's so
easy to use.

36
00:03:18.080 --> 00:03:22.280
REST stand for
Representational State Transfer.

37
00:03:22.280 --> 00:03:26.640
And it is an approach to implementing
web services with performance,

38
00:03:26.640 --> 00:03:29.200
scalability and maintainability in mind.

39
00:03:30.940 --> 00:03:34.400
Web socket services are also
becoming more popular

40
00:03:34.400 --> 00:03:37.440
since they allow real time
modifications from web sites.

41
00:03:40.040 --> 00:03:44.840
NoSQL storage systems are increasingly
used to manage a variety of data

42
00:03:44.840 --> 00:03:45.770
types in big data.

43
00:03:46.950 --> 00:03:50.710
These data stores are databases
that do not represent data

44
00:03:50.710 --> 00:03:55.580
in a table format with columns and rows as
with conventional relational databases.

45
00:03:56.910 --> 00:04:02.180
Examples of these data stores include
Cassandra, MongoDB and HBASE.

46
00:04:03.815 --> 00:04:08.350
NoSQL data stores provide APIs
to allow users to access data.

47
00:04:09.460 --> 00:04:14.940
These APIs can be used directly or in an
application that needs to access the data.

48
00:04:16.660 --> 00:04:21.240
Additionally, most NoSQL
systems provide data access

49
00:04:21.240 --> 00:04:23.960
via a web service interface, such a REST.

50
00:04:26.780 --> 00:04:29.860
Now, let's discuss our wildfire case study

51
00:04:29.860 --> 00:04:34.350
as a real project that acquires data
using several different mechanisms.

52
00:04:35.780 --> 00:04:42.020
The WIFIRE project stores sensor data from
weather stations in a relational database.

53
00:04:43.140 --> 00:04:48.110
We use SQL to retrieve this data
from the database to create

54
00:04:48.110 --> 00:04:52.800
models to identify weather patterns
associated with Santa Anna conditions.

55
00:04:54.450 --> 00:04:58.910
To determine whether a particular weather
station is currently experiencing

56
00:04:58.910 --> 00:05:05.340
Santa Anna conditions, we access real
time data using a web socket service.

57
00:05:06.610 --> 00:05:10.170
Once we start listening to this service,

58
00:05:10.170 --> 00:05:12.980
we receive weather station
measurements as they occur.

59
00:05:14.330 --> 00:05:19.450
This data is then processed and
compared to patterns found by our models

60
00:05:19.450 --> 00:05:23.390
to determine if a weather station is
experiencing Santa Ana conditions.

61
00:05:25.060 --> 00:05:28.130
At the same time Tweets are retrieved

62
00:05:28.130 --> 00:05:32.870
using hashtags related to any fire
that is occurring in the region.

63
00:05:33.950 --> 00:05:38.080
The Tweet messages are retrieves
using the Twitter REST service.

64
00:05:38.080 --> 00:05:43.260
The idea is to determine the sentiment
of these tweets to see if people

65
00:05:43.260 --> 00:05:50.540
are expressing fear, anger or are simply
nonchalant about the nearby fire.

66
00:05:50.540 --> 00:05:55.617
The combination of sensor data and
tweet sentiments helps

67
00:05:55.617 --> 00:06:00.389
to give us a sense of the urgency
of the fire situation.

68
00:06:00.389 --> 00:06:04.570
As a summary,
big data comes from many places.

69
00:06:05.570 --> 00:06:08.000
Finding and evaluating data

70
00:06:08.000 --> 00:06:12.490
useful to your big data analytics is
important before you start acquiring data.

71
00:06:13.740 --> 00:06:15.080
Depending on the source and

72
00:06:15.080 --> 00:06:19.240
structure of data,
there are alternative ways to access it.